### ---- DISSERTATION Maritime Transport Network ----

#scientific notation
# options(scipen=999)
#getOption("scipen")
options(scipen=999)

#CLEAR ENVIRONMENT
rm(list=ls())

# Set the working directory
setwd("D:/Dropbox/Cloud - Master's - Docs/DISSERTATION/Maritime/Maritime Data")

# install.packages(c("sp", "MASS", "reshape2","geojsonio","rgdal","downloader","maptools","dplyr","broom","stplanr", "ggplot2", "leaflet"))
# 
# install.packages("tidyverse")
# install.packages("tidyr")
# install.packages("ggplot2")

library(sp)
library(MASS)
library(reshape2)
library(geojsonio)
library(rgdal)
library(downloader)
library(maptools)
library(dplyr)
library(plyr)
library(broom) 
library(stplanr)
library(ggplot2)
library(leaflet)
library(tidyr)
library(tidyverse) #Rearange data

#install.packages("robustbase")
library(robustbase)

#install.packages("ggrepel")
library(ggrepel) #labels with lines

## ---- Import DATA SETS and Cleansing ---- 

min_countries <-read.csv("cdata_min_countries.csv")

##NETWORK DATA

#remoteness index
r_index <- read.csv("r_index_2.csv")
r_index <-r_index [-1]
for (i in 6:16){
  assign(paste("r_index",i,sep=""),subset(r_index, year == 2000+i))
}


#degree
country_deg <- read.csv("country_degrees16.csv")
country_deg_in <- read.csv("country_in_degrees16.csv")
#country_deg_out <- read.csv("country_out_degrees16.csv")

country_deg_out2 <- read.csv("deg_out_gall.csv")

#distance closeness centrality
country_clo <- read.csv("country_closeness5.csv")

##SOCIO_ECONOMIC DATA
#GDP per Capita
gdp_cap_data <- read.csv("wb_gdp_pc_con_vertical.csv") #all years 06-17
#GDP
gdp_data <- read.csv("WB_GDP_constant2.csv") #all years 06-17

#Population
pop_data <- read.csv("WB_pop2.csv") #all years 06-16

##Gravity Extra data
gravity_ext <-read.csv("gravity_extra.csv") #all years 06-16



## ---- Import UNCTAD DATA ---- 

#Liner Shipping Connectivity Components
#LSCI_components <- read.csv("LSCI-components-06-16-final.csv") #All Years
LSCI_components <- read.csv("LSCI-components-06-16-final_vertical.csv") #All Years

## ---- Import BILATERAL Index and Maritime Distance ----

#Liner Shipping BILATERAL Connectivity Components
LSBCI_bilateral <- read.csv("LSBCI_A_Constant_0616_Public_BILATERAL.csv") #All Years

#Maritime Distance
distance_data <- read.csv("distance_update_latlong2.csv", stringsAsFactors = FALSE) #Full

## ---- TRADE DATA ----


#cdata1 <- read.csv("manu16.csv")#Manufacturing goods TradeValue in 1000 USD

# manu6exp3 <- read.csv("3exp06.csv")
# manu7exp3 <- read.csv("3exp07.csv")
# manu8exp3 <- read.csv("3exp08.csv")
# manu9exp3 <- read.csv("3exp09.csv")
# manu10exp3 <- read.csv("3exp10.csv")
# manu11exp3 <- read.csv("3exp11.csv")
# manu12exp3 <- read.csv("3exp12.csv")
# manu13exp3 <- read.csv("3exp13.csv")
# manu14exp3 <- read.csv("3exp14.csv")
# manu15exp3 <- read.csv("3exp15.csv")
# manu16exp3 <- read.csv("3exp16.csv")
# 
# manu6imp3 <- read.csv("3imp06.csv")
# manu7imp3 <- read.csv("3imp07.csv")
# manu8imp3 <- read.csv("3imp08.csv")
# manu9imp3 <- read.csv("3imp09.csv")
# manu10imp3 <- read.csv("3imp10.csv")
# manu11imp3 <- read.csv("3imp11.csv")
# manu12imp3 <- read.csv("3imp12.csv")
# manu13imp3 <- read.csv("3imp13.csv")
# manu14imp3 <- read.csv("3imp14.csv")
# manu15imp3 <- read.csv("3imp15.csv")
# manu16imp3 <- read.csv("3imp16.csv")

# manu15exp <- read.csv("manu15exp.csv")
# manu15imp <- read.csv("manu15imp.csv")
# 
# manu14exp <- read.csv("manu14exp.csv")
# manu14imp <- read.csv("manu14imp.csv")
# 
# manu13exp <- read.csv("manu13exp.csv")
# manu13imp <- read.csv("manu13imp.csv")
# 
# manu12exp <- read.csv("manu12exp.csv")
# manu12imp <- read.csv("manu12imp.csv")
# 
# manu11exp <- read.csv("manu11exp.csv")
# manu11imp <- read.csv("manu11imp.csv")
# 
# manu10exp <- read.csv("manu10exp.csv")
# manu10imp <- read.csv("manu10imp.csv")
# 
# manu09exp <- read.csv("manu09exp.csv")
# manu09imp <- read.csv("manu09imp.csv")
# 
# manu08exp <- read.csv("manu08exp.csv")
# manu08imp <- read.csv("manu08imp.csv")
# 
# manu07exp <- read.csv("manu07exp.csv")
# manu07imp <- read.csv("manu07imp.csv")

cdata1test <- read.csv("data_all_06_16.csv")

summary(cdata1test$TradeFlow)

#max Trade 1,071,813,328

cdata1 <- read.csv("data_all_06_16.csv")
cdata1 <-cdata1[-1]

# #Bind
# cdata_all3 <- rbind(manu16imp3,manu16exp3,manu15exp3,manu15imp3,manu14exp3,manu14imp3,manu13exp3,manu13imp3,manu12exp3,manu12imp3,manu11exp3,manu11imp3,manu10exp3,manu10imp3,manu9exp3,manu9imp3,manu8imp3,manu8exp3,manu7exp3,manu7exp3,manu6exp3,manu6exp3)
# 
# #rename TraFlow
# colnames(cdata_all3)[10] <- "TradeFlow"

#Bind
#cdata_all <- rbind(cdata1,cdata_all)

#cdata1<-cdata_all3

#write.csv(cdata1, file = "data_all_06_16.csv")

#Colums as character
cdata1$PartnerISO3 <- as.character(cdata1$PartnerISO3)
cdata1$ReporterISO3 <- as.character(cdata1$ReporterISO3)

#OrigCode and DestCode conversion
cdata1$OrigCode <- ifelse(cdata1$TradeFlowCode ==5 ,cdata1$PartnerISO3,cdata1$ReporterISO)
cdata1$DestCode <- ifelse(cdata1$TradeFlowCode ==6 ,cdata1$PartnerISO3,cdata1$ReporterISO)


## ---- PAIR COLUMNS ----

# CDATA1 add pair with country and year
cdata1<-cdata1%>%
  unite(Year_O, Year, OrigCode, sep="-",remove = FALSE)
# CDATA1 add pair with country and year
cdata1<-cdata1%>%
  unite(Year_D, Year, DestCode, sep="-",remove = FALSE)

## ---- PAIR CODES CDATA 1 ----

# CDATA 1 Add column with merged two columns (strings)
cdata1<-cdata1%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

# CDATA 1 Add column with merged two columns (strings)
cdata1<-cdata1%>%
  unite(pairpro, pair, ProductCode, sep="-",remove = FALSE)

# CDATA 1 With year and pro
cdata1<-cdata1%>%
  unite(pairyearpro,pair,Year, ProductCode,  sep="-",remove = FALSE)

# CDATA 1 pair With year
cdata1<-cdata1%>%
  unite(pairyear,pair,Year, sep="-",remove = FALSE)

# CDATA 1 add pair with country and year
cdata1<-cdata1%>%
  unite(Year_D, Year, DestCode, sep="-",remove = FALSE)

#add pair with country and year
cdata1<-cdata1%>%
  unite(Year_O, Year, OrigCode, sep="-",remove = FALSE)

## ---- GROUP TRADE  ----

#Group by pair and product code AND YEAR and take MAX (Reporter vs Partner)

cdata_test2 <-aggregate(TradeFlow ~ pairyearpro, transform(cdata1, pairyearpro = sub("",
                                                                                     "", pairyearpro)), max)
#Now aggregate by pair  all product
cdata_test_sum <-aggregate(TradeFlow ~ pairyearpro, transform(cdata_test2, pairyearpro = sub("\\d+$",
                                                                                             "", pairyearpro)), sum)

#remove last - in column
cdata_test_sum$pairyearpro = substr(cdata_test_sum$pairyearpro,1,nchar(cdata_test_sum$pairyearpro)-1)

#rename column
colnames(cdata_test_sum)[2] <- "TradeFlow2"

#Replace Old trade Flows
cdata1$TradeFlow <- cdata_test_sum$TradeFlow2[match(cdata1$pairyear,cdata_test_sum$pairyearpro)]


## ---- CONSOLIDATAION ----

#Make old trade flows equal to 1
#cdata1$TradeFlow <- 1
cdata1$ProductCode <- 1
cdata1$pairpro <- 1
cdata1$pairyearpro <- 1
cdata1$TradeFlowCode <-1
cdata1$TradeFlowName <-1
cdata1$PartnerISO3 <-1
cdata1$PartnerName <-1
cdata1$ReporterISO3 <-1
cdata1$ReporterName <-1
#Now Remove doublicates REDUCES SIZE significantly
cdata1 <-unique(cdata1)

## ---- Subset For manipulation ----
for (i in 6:16){
  assign(paste("cdata",i,sep=""),subset(cdata1, Year == 2000+i))
}

## ---- Fill Data ----

library(reshape2)

## ---- 2016
#transfrom into matrix
cdatamat_C16 <- dcast(cdata16, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C16f<-setNames(melt(cdatamat_C16), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C16f<-cdata_C16f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C16_mm <-merge(x = cdata_C16f, y = cdata16, by = "pair", all = TRUE)
#add year
cdata_C16_mm$Year = 2016

## ---- 2015
#transfrom into matrix
cdatamat_C15 <- dcast(cdata15, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C15f<-setNames(melt(cdatamat_C15), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C15f<-cdata_C15f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C15_mm <-merge(x = cdata_C15f, y = cdata15, by = "pair", all = TRUE)
#add year
cdata_C15_mm$Year = 2015

## ---- 2014
#transfrom into matrix
cdatamat_C14 <- dcast(cdata14, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C14f<-setNames(melt(cdatamat_C14), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C14f<-cdata_C14f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C14_mm <-merge(x = cdata_C14f, y = cdata14, by = "pair", all = TRUE)
#add year
cdata_C14_mm$Year = 2014

## ---- 2013
#transfrom into matrix
cdatamat_C13 <- dcast(cdata13, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C13f<-setNames(melt(cdatamat_C13), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C13f<-cdata_C13f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C13_mm <-merge(x = cdata_C13f, y = cdata13, by = "pair", all = TRUE)
#add year
cdata_C13_mm$Year = 2013

## ---- 2012
#transfrom into matrix
cdatamat_C12 <- dcast(cdata12, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C12f<-setNames(melt(cdatamat_C12), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C12f<-cdata_C12f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C12_mm <-merge(x = cdata_C12f, y = cdata12, by = "pair", all = TRUE)
#add year
cdata_C12_mm$Year = 2012

## ---- 2011
#transfrom into matrix
cdatamat_C11 <- dcast(cdata11, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C11f<-setNames(melt(cdatamat_C11), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C11f<-cdata_C11f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C11_mm <-merge(x = cdata_C11f, y = cdata11, by = "pair", all = TRUE)
#add year
cdata_C11_mm$Year = 2011

## ---- 2010
#transfrom into matrix
cdatamat_C10 <- dcast(cdata10, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C10f<-setNames(melt(cdatamat_C10), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C10f<-cdata_C10f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C10_mm <-merge(x = cdata_C10f, y = cdata10, by = "pair", all = TRUE)
#add year
cdata_C6_mm$Year = 2010

## ---- 2009
#transfrom into matrix
cdatamat_C9 <- dcast(cdata9, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C9f<-setNames(melt(cdatamat_C9), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C9f<-cdata_C9f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C9_mm <-merge(x = cdata_C9f, y = cdata9, by = "pair", all = TRUE)
#add year
cdata_C9_mm$Year = 2009

## ---- 2008
#transfrom into matrix
cdatamat_C8 <- dcast(cdata8, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C8f<-setNames(melt(cdatamat_C8), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C8f<-cdata_C8f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C8_mm <-merge(x = cdata_C8f, y = cdata8, by = "pair", all = TRUE)
#add year
cdata_C8_mm$Year = 2008

## ---- 2007
#transfrom into matrix
cdatamat_C7 <- dcast(cdata7, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C7f<-setNames(melt(cdatamat_C7), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C7f<-cdata_C7f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C7_mm <-merge(x = cdata_C7f, y = cdata7, by = "pair", all = TRUE)
#add year
cdata_C7_mm$Year = 2007

## ---- 2006
#transfrom into matrix
cdatamat_C6 <- dcast(cdata6, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
#back into df
cdata_C6f<-setNames(melt(cdatamat_C6), c("OrigCode", "DestCode", "TradeFlow"))
#Add column with merged two columns (strings)
cdata_C6f<-cdata_C6f%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

#combine data sets
cdata_C6_mm <-merge(x = cdata_C6f, y = cdata6, by = "pair", all = TRUE)
#add year
cdata_C6_mm$Year = 2006


## ---- Merge again ----

cdata1 <-rbind(cdata_C16_mm,cdata_C15_mm,cdata_C14_mm,cdata_C13_mm,cdata_C12_mm,cdata_C11_mm,cdata_C10_mm,cdata_C9_mm,cdata_C8_mm,cdata_C7_mm,cdata_C6_mm)

#Rename
colnames(cdata1)[19] <-"TradeFlow"
colnames(cdata1)[2] <-"OrigCode"
colnames(cdata1)[3] <-"DestCode"

cdata1$Nomenclature<- as.character(cdata1$Nomenclature)
#Replace NA in Trade
cdata1[is.na(cdata1)] <- 0

## ---- PAIR CODES CDATA 1  again----

# CDATA 1 Add column with merged two columns (strings)
cdata1<-cdata1%>%
  unite(pair, OrigCode, DestCode, sep="-",remove = FALSE)

# CDATA 1 pair With year
cdata1<-cdata1%>%
  unite(pairyear,pair,Year, sep="-",remove = FALSE)

# CDATA 1 add pair with country and year
cdata1<-cdata1%>%
  unite(Year_D, Year, DestCode, sep="-",remove = FALSE)

#add pair with country and year
cdata1<-cdata1%>%
  unite(Year_O, Year, OrigCode, sep="-",remove = FALSE)


## ---- PAIR CODES others 1 ----
#add pair with country and year
LSCI_components<-LSCI_components%>%
  unite(Year_O, Year, ISO3, sep="-",remove = FALSE)
#add pair with country and year
LSCI_components<-LSCI_components%>%
  unite(Year_D, Year, ISO3, sep="-",remove = FALSE)

#Add pair with country and year
pop_data<-pop_data%>%
  unite(Year_O, Year, CountryCode, sep="-",remove = FALSE)
#add pair with country and year
pop_data<-pop_data%>%
  unite(Year_D, Year, CountryCode, sep="-",remove = FALSE)

#add pair with country and year
gdp_cap_data<-gdp_cap_data%>%
  unite(Year_O, Year, Country.Code, sep="-",remove = FALSE)
#add pair with country and year
gdp_cap_data<-gdp_cap_data%>%
  unite(Year_D, Year, Country.Code, sep="-",remove = FALSE)

#add pair with country and year
gdp_data<-gdp_data%>%
  unite(Year_O, Year, CountryCode, sep="-",remove = FALSE)
#add pair with country and year
gdp_data<-gdp_data%>%
  unite(Year_D, Year, CountryCode, sep="-",remove = FALSE)

#add pair with country and year
pop_data<-pop_data%>%
  unite(Year_O, Year, CountryCode, sep="-",remove = FALSE)

#Pair to bilateral LSBCI
LSBCI_bilateral<-LSBCI_bilateral%>%
  unite(pair, exporter, importer, sep="-",remove = FALSE)

LSBCI_bilateral<-LSBCI_bilateral%>%
  unite(pairyear, pair, year, sep="-",remove = FALSE)

#Pair to out_degree
country_deg_out2<-country_deg_out2%>%
  unite(yearcountry, year, CountryCode, sep="-",remove = FALSE)




## ---- ADD general data ----

#merge these supplimentary data into your flow data dataframe
#Add Node Degree
cdata1$deg16_O <- country_deg$deg_tot16[match(cdata1$OrigCode, country_deg$X)]
cdata1$deg16_D <- country_deg$deg_tot16[match(cdata1$DestCode, country_deg$X)]

cdata1$deg_in16_O <- country_deg_in$deg_in16[match(cdata1$OrigCode, country_deg_in$X)]
cdata1$deg_in16_D <- country_deg_in$deg_in16[match(cdata1$DestCode, country_deg_in$X)]

cdata1$deg_out16_O <- country_deg_out2$degout[match(cdata1$Year_O, country_deg_out2$yearcountry)]
cdata1$deg_out16_D <- country_deg_out2$degout[match(cdata1$Year_D, country_deg_out2$yearcountry)]

#Add Node closeness
cdata1$clo_O <- country_clo$normalised_clos_world[match(cdata1$OrigCode, country_clo$X)]
cdata1$clo_D <- country_clo$normalised_clos_world[match(cdata1$DestCode, country_clo$X)]

#Add ORIGIN population data #vi1_origpop = exporter_pop
cdata1$exporter_pop <- pop_data$pop[match(cdata1$Year_O, pop_data$Year_O)]
#Add DESTINATION population data #wj1_destpop = importer_pop
cdata1$importer_pop <- pop_data$pop[match(cdata1$Year_D, pop_data$Year_D)]

#Add ORIGIN population data #vi1_origpop = exporter_pop
cdata1$exporter_gdp.pc <- gdp_cap_data$Gdp.pc[match(cdata1$Year_O, gdp_cap_data$Year_O)]
#Add DESTINATION population data #wj1_destpop = importer_pop
cdata1$importer_gdp.pc <- gdp_cap_data$Gdp.pc[match(cdata1$Year_D, gdp_cap_data$Year_D)]

#Add ORIGIN gdp data #vi2_origsal = exporter_gdp
cdata1$exporter_gdp <- gdp_data$gdp[match(cdata1$Year_O, gdp_data$Year_O)]
#Add DESTINATION gdp data #wj2_destsal = importer_gdp
cdata1$importer_gdp <- gdp_data$gdp[match(cdata1$Year_D, gdp_data$Year_D)]

#Add ORIGIN TEU
cdata1$TEU_O <- LSCI_components$TEU[match(cdata1$Year_O, LSCI_components$Year_O)]
#Add DESTINATION TEU
cdata1$TEU_D <- LSCI_components$TEU[match(cdata1$Year_D, LSCI_components$Year_D)]

#Add ORIGIN Ship number to flow data
cdata1$ships_O <- LSCI_components$Ships[match(cdata1$Year_O, LSCI_components$Year_O)]
#Add DESTINATION Ship to flow data 
cdata1$ships_D <- LSCI_components$Ships[match(cdata1$Year_D, LSCI_components$Year_D)]

#Convert
cdata1$TEU_O<-as.numeric(cdata1$TEU_O)
cdata1$TEU_D<-as.numeric(cdata1$TEU_D)
cdata1$ships_D<-as.numeric(cdata1$ships_D)
cdata1$ships_O<-as.numeric(cdata1$ships_O)





## ---- BILATERAL LSBCI SUBSETS ----

#Subset For manipulation
for (i in 6:16){
  assign(paste("LSBCI_",i,sep=""),subset(LSBCI_bilateral, year == 2000+i,select = (1:9)))
}


## ---- ADD Gravity DATA ----

cdata1$contig <- gravity_ext$contig[match(cdata1$pairyear, gravity_ext$pairyear)]
cdata1$comlang <- gravity_ext$comlang_off[match(cdata1$pairyear, gravity_ext$pairyear)]
cdata1$comcol <- gravity_ext$comcol[match(cdata1$pairyear, gravity_ext$pairyear)]
cdata1$fta_wto <- gravity_ext$fta_wto[match(cdata1$pairyear, gravity_ext$pairyear)]
cdata1$colony <- gravity_ext$colony[match(cdata1$pairyear, gravity_ext$pairyear)]


## ---- DISTANCE DATA ----

#Add column with merged two columns (strings) PAIR
r_index<-r_index%>%
  unite(Year_O, year, OrigCode, sep="-",remove = FALSE)

#Add column with merged two columns (strings) PAIR
distance_data<-distance_data%>%
  unite(pair, OriginD, DestinationD, sep="-",remove = FALSE)

#Add address city ORIGIN
distance_data<-distance_data%>%
  unite(address_O, From.Port, Origin, sep=", ",remove = FALSE)

#Add address city DESTINATION
distance_data<-distance_data%>%
  unite(address_D, To.Port, Destination, sep=", ",remove = FALSE)

#Remove intra distance
distance_data2 <- subset(distance_data,OriginD!=DestinationD)

#Keep only SHORTEST distance between countries

##Order distance from low to high by pair
distance_data4 <- distance_data2[order(distance_data2$pair, distance_data2$Distance_nm), ]

#keep fist row if dublicated row in pair
distance_data5<-distance_data4[!duplicated(distance_data4$pair),]

#Add MARITIME DISTANCE  to flow data
cdata1$dist <- distance_data5$Distance_nm[match(cdata1$pair, distance_data5$pair)]

#Add DISTANCE  to flow data
cdata1$dist_w <- gravity_ext$distw[match(cdata1$pair, gravity_ext$pair)]


# ## ---- DISTANCE FOR NETWORK ----
# #For distance data
# #Remoteness measures 2016
# 
# cdata_wdist <- data.frame(distance_data5$OriginD, distance_data5$DestinationD, distance_data5$Distance_nm)
# 
# cdata_wdistO <-cdata_wdist[cdata_wdist$distance_data5.OriginD !="", ]
# cdata_wdistF <-cdata_wdistO[cdata_wdistO$distance_data5.DestinationD!="", ]
# 
# #Add column with merged two columns (strings) PAIR
# cdata_wdistF<-cdata_wdistF%>%
#   unite(pair, distance_data5.OriginD, distance_data5.DestinationD, sep="-",remove = FALSE)
# 
# wdist <-unique(cdata_wdistF)
# wdist2006 <- wdist
# wdist2006$year <-2006
# wdist2007 <- wdist
# wdist2007$year <-2007
# wdist2008 <- wdist
# wdist2008$year <-2008
# wdist2009 <- wdist
# wdist2009$year <-2009
# wdist2010 <- wdist
# wdist2010$year <-2010
# wdist2011 <- wdist
# wdist2011$year <-2011
# wdist2012 <- wdist
# wdist2012$year <-2012
# wdist2013 <- wdist
# wdist2013$year <-2013
# wdist2014 <- wdist
# wdist2014$year <-2014
# wdist2015 <- wdist
# wdist2015$year <-2015
# wdist2016 <- wdist
# wdist2016$year <-2016
# 
# 
# 
# wdist_all<-rbind(wdist2006,wdist2007,wdist2008,wdist2009,wdist2010,wdist2011,wdist2012, wdist2013, wdist2014, wdist2015, wdist2016)
# 
# wdist_all<-wdist_all%>%
#   unite(pairyear, pair, year, sep="-",remove = FALSE)
# 
# wdist_all<-wdist_all%>%
#   unite(Year_O, year,distance_data5.OriginD, sep="-",remove = FALSE)
# 
# wdist_all<-wdist_all%>%
#   unite(Year_D, year,distance_data5.DestinationD, sep="-",remove = FALSE)
# 
# wdist_all$gdp_O<- gdp_data$gdp[match(wdist_all$Year_O, gdp_data$Year_O)]
# wdist_all$gdp_D<- gdp_data$gdp[match(wdist_all$Year_D, gdp_data$Year_D)]
# 
# #Minimum Countries
# wdist_all$ccc <- min_countries$OrigCode[match(wdist_all$distance_data5.OriginD, min_countries$OrigCode)]
# wdist_all$ccc2 <- min_countries$OrigCode[match(wdist_all$distance_data5.DestinationD, min_countries$OrigCode)]
# 
# #clean
# wdist_all_clean <-wdist_all[complete.cases(wdist_all), ] #112 countries
# 
# colSums(is.na(wdist_all_clean))
# 
# 
# colnames(wdist_all_clean)[4] <- "OrigCode"
# colnames(wdist_all_clean)[6] <- "DestCode"
# colnames(wdist_all_clean)[7] <- "dist"
# 
# #Reorder
# wdist_all_clean <- dplyr::select(wdist_all_clean, OrigCode, DestCode, dxt, everything())
# 
# 
# 
# 
# #Subset
# for (i in 6:16){
#   assign(paste("remote",i,sep=""),subset(wdist_all_clean, year == 2000+i))
# }
# #Part two
# 
# #Per Country STANDARD
# 
# remote6$share_gdp <-(remote6$gdp_D/sum(remote6$gdp_D))*100
# remote7$share_gdp <-(remote7$gdp_D/sum(remote7$gdp_D))*100
# remote8$share_gdp <-(remote8$gdp_D/sum(remote8$gdp_D))*100
# remote9$share_gdp <-(remote9$gdp_D/sum(remote9$gdp_D))*100
# remote10$share_gdp <-(remote10$gdp_D/sum(remote10$gdp_D))*100
# remote11$share_gdp <-(remote11$gdp_D/sum(remote11$gdp_D))*100
# remote12$share_gdp <-(remote12$gdp_D/sum(remote12$gdp_D))*100
# remote13$share_gdp <-(remote13$gdp_D/sum(remote13$gdp_D))*100
# remote14$share_gdp <-(remote14$gdp_D/sum(remote14$gdp_D))*100
# remote15$share_gdp <-(remote15$gdp_D/sum(remote15$gdp_D))*100
# remote16$share_gdp <-(remote16$gdp_D/sum(remote16$gdp_D))*100
# 
# remote6$d_share <- remote6$dist*remote6$share_gdp
# remote7$d_share <- remote7$dist*remote7$share_gdp
# remote8$d_share <- remote8$dist*remote8$share_gdp
# remote9$d_share <- remote9$dist*remote9$share_gdp
# remote10$d_share <- remote10$dist*remote10$share_gdp
# remote11$d_share <- remote11$dist*remote11$share_gdp
# remote12$d_share <- remote12$dist*remote12$share_gdp
# remote13$d_share <- remote13$dist*remote13$share_gdp
# remote14$d_share <- remote14$dist*remote14$share_gdp
# remote15$d_share <- remote15$dist*remote15$share_gdp
# remote16$d_share <- remote16$dist*remote16$share_gdp
# 
# #aggregate it
# r_index6 <-aggregate(d_share ~ OrigCode, transform(remote6, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index7 <-aggregate(d_share ~ OrigCode, transform(remote7, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index8 <-aggregate(d_share ~ OrigCode, transform(remote8, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index9 <-aggregate(d_share ~ OrigCode, transform(remote9, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index10 <-aggregate(d_share ~ OrigCode, transform(remote10, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index11 <-aggregate(d_share ~ OrigCode, transform(remote11, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index12 <-aggregate(d_share ~ OrigCode, transform(remote12, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index13 <-aggregate(d_share ~ OrigCode, transform(remote13, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index14 <-aggregate(d_share ~ OrigCode, transform(remote14, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index15 <-aggregate(d_share ~ OrigCode, transform(remote15, OrigCode = sub("\\d+$","", OrigCode)), sum)
# r_index16 <-aggregate(d_share ~ OrigCode, transform(remote16, OrigCode = sub("\\d+$","", OrigCode)), sum)
# 
# 
# remote16_advanced$average<-remote16_advanced$d_share/112
# 
# r_index6$year <-2006
# r_index7$year <-2007
# r_index8$year <-2008
# r_index9$year <-2009
# r_index10$year <-2010
# r_index11$year <-2011
# r_index12$year <-2012
# r_index13$year <-2013
# r_index14$year <-2014
# r_index15$year <-2015
# r_index16$year <-2016
# 
# r_index <-rbind(r_index16,r_index15,r_index14,r_index13,r_index12,r_index11,r_index10,r_index9,r_index8,r_index7,r_index6)
# 
# r_index$d_share <- r_index$d_share/112
# 
# colnames(r_index)[2]<-"r_index"
# write.csv(r_index, file = "r_index_2.csv")

## ---- add coords ----


#Add LatO to flow data 
cdata1$LatO <- distance_data5$LatO[match(cdata1$pair, distance_data5$pair)]

#Add LatD to flow data 
cdata1$LatD <- distance_data5$LatD[match(cdata1$pair, distance_data5$pair)]

#Add LongO to flow data 
cdata1$LongO <- distance_data5$LongO[match(cdata1$pair, distance_data5$pair)]

#Add LongD to flow data 
cdata1$LongD <- distance_data5$LongD[match(cdata1$pair, distance_data5$pair)]


colSums(is.na(cdata1))

#Colums as character
cdata1$OrigCode <- as.character(cdata1$OrigCode)
cdata1$DestCode <- as.character(cdata1$DestCode)

## ---- REMOVING MISSING VALUES (TEMPORARY solution) ----

# colSums(is.na(cdata_m))
colSums(is.na(cdata1))

#cdata<-cdata_m
cdata_A<-cdata1

cdata <-cdata_A[complete.cases(cdata_A), ]
colSums(is.na(cdata))

## ---- ADD DATA CONECTIVITY DATA ---- 

#ADD LSBCI data to flows

# TradeFlow - Manufactured Goods Trade
# LSBCIndex - Liner Shipping Bilateral Connectivity Index
# DCon - Geometric mean of number of direct connections
# ComDir - Number of common direct connections
# MaxShipSize - Size of the largest ships on the weakest route
# MaxMinCarriers - The level of competition on services
# NumTrans - Number of transhipments
# MarDistance - Maritime Distance (Nautical Miles)
# Distance - Distance between countries (km ?)

#Add R-index to flow data to ORIGIN
cdata1$exporter_remote <- r_index$r_index[match(cdata1$Year_O, r_index$Year_O)]
summary(cdata1$exporter_remote)
#Add R-index to flow data to DESTINATION
cdata1$importer_remote <- r_index$r_index[match(cdata1$Year_D, r_index$Year_O)]

#LSBCI ### INDEX 
cdata1$LSBCI_2 <- LSBCI_bilateral$LSBCI_2[match(cdata1$pairyear, LSBCI_bilateral$pairyear)]

#numTrans ###not to be log ## 0, 1 or 2 - number of transhipments
cdata1$numTrans <- LSBCI_bilateral$numTrans[match(cdata1$pairyear, LSBCI_bilateral$pairyear)]

#ComDir(Ex ComDir) (number of common direct connections)
cdata1$ComDir <- LSBCI_bilateral$DIRtrans[match(cdata1$pairyear, LSBCI_bilateral$pairyear)]

#DCon (geometric mean of number of direct connections)
cdata1$DCon <- LSBCI_bilateral$DIRECT[match(cdata1$pairyear, LSBCI_bilateral$pairyear)]

#MaxShipSize - Size of the largest ships on the weakest route
cdata1$MaxShipSize <- LSBCI_bilateral$maxminmax_ship_size[match(cdata1$pairyear, LSBCI_bilateral$pairyear)]

#Maxmincarriers - The level of competition on services
cdata1$Maxmincarriers <- LSBCI_bilateral$maxmincarriers[match(cdata1$pairyear, LSBCI_bilateral$pairyear)]

## ---- REMOVING MISSING VALUES (TEMPORARY solution) ----

# colSums(is.na(cdata_m))
colSums(is.na(cdata1))

cdata1$TradeFlow <- as.numeric(cdata1$TradeFlow)


#cdata<-cdata_m
cdata_B<-cdata1

cdata_C <-cdata_B[complete.cases(cdata_B), ]
colSums(is.na(cdata_C))

## ---- ORDER AND FIRST STEPS ----

#Data needs to be ordered by borough code, if it's not, we will run into problems when we try to merge our distance data back in later, so to make sure, we can arrange by orign and then destination using dplyr's 'arrange' function
cdata <- arrange(cdata, OrigCode, DestCode)
cdata_C <- arrange(cdata_C, OrigCode, DestCode)

#now chop out the intra-borough flows
cdata <- cdata[cdata$OrigCode!=cdata$DestCode,]
cdata_C <- cdata_C[cdata_C$OrigCode!=cdata_C$DestCode,]

#now re-order so that OrigCodeNew, DestCodeNew and TotalNoIntra are the first three columns *note that you have to be explicit about the select function in the dplyr package as MASS also has a 'select' function and R will try and use this by default. We can be explict by using the syntax package::function

cdata <- dplyr::select(cdata, OrigCode, DestCode, TradeFlow, everything())
cdata_C <- dplyr::select(cdata_C, OrigCode, DestCode, TradeFlow, everything())

cdata$TradeFlow <-cdata$TradeFlow*1000
cdata_C$TradeFlow <-cdata_C$TradeFlow*1000

#Show dataset
#write.csv(cdata, file = "data_july03.csv")
#write.csv(distance_data, file = "distance_data.csv"°

str(cdata)


## ---- Subset For manipulation and conversion ----

cdata$exporter_gdp.pc <-as.numeric(cdata$exporter_gdp.pc)
cdata$importer_gdp.pc <-as.numeric(cdata$importer_gdp.pc)
cdata$TradeFlow <- as.numeric(cdata$TradeFlow)
cdata$colony <- as.factor(cdata$colony)
cdata$contig <- as.factor(cdata$contig)
cdata$comlang <- as.factor(cdata$comlang)
cdata$comcol <- as.factor(cdata$comlang)
cdata$fta_wto <- as.factor(cdata$fta_wto)

cdata_C$exporter_gdp.pc <-as.numeric(cdata_C$exporter_gdp.pc)
cdata_C$importer_gdp.pc <-as.numeric(cdata_C$importer_gdp.pc)
cdata_C$TradeFlow<- as.numeric(cdata_C$TradeFlow)
cdata_C$colony <- as.factor(cdata_C$colony)
cdata_C$contig <- as.factor(cdata_C$contig)
cdata_C$comlang <- as.factor(cdata_C$comlang)
cdata_C$comcol <- as.factor(cdata_C$comlang)
cdata_C$fta_wto <- as.factor(cdata_C$fta_wto)
str(cdata_C)


cdata_C$Nomenclature <- NULL
cdata_C$ReporterISO3 <- NULL
cdata_C$TradeFlow.x<- NULL
cdata_C$pairpro<- NULL
cdata_C$pairyearpro<- NULL
cdata_C$ProductCode<- NULL
cdata_C$PartnerISO3<- NULL
cdata_C$TradeFlowName<- NULL
cdata_C$TradeFlowCode<- NULL
cdata_C$OrigCode.y<- NULL
cdata_C$DestCode.y<- NULL




#No connectivity data
for (i in 6:16){
  assign(paste("cdata",i,sep=""),subset(cdata, Year == 2000+i))
}

#With connectivity data
#Loop cdata_c With connectivity data
for (i in 6:6){
  assign(paste("cdata_C",i,sep=""),subset(cdata_C, Year == 2000+i))
}

for (i in 8:16){
  assign(paste("cdata_C",i,sep=""),subset(cdata_C, Year == 2000+i))
}

# ## ---- Fill Data ----
# 
# # cdatamat_C16 <- dcast(cdata_C16, OrigCode ~ DestCode, sum, value.var = "TradeFlow", margins=c("Orig", "Dest"))
# library(reshape2)
# 
# #transfrom into matrix
# cdatamat_C16 <- dcast(cdata_C16, OrigCode ~ DestCode, sum, value.var = "TradeFlow")
# 
# #back into df
# cdata_C16f<-setNames(melt(cdatamat_C16), c("OrigCode", "DestCode", "TradeFlow"))
# #add year
# cdata_C16f$Year = 2016
# 
# 
# 
# cdatamat_C6 <- dcast(cdata_C6, OrigCode ~ DestCode, sum, value.var = "TradeFlow", margins=c("Orig", "Dest"))
# cdatamat

## ---- **** MAIN READY ----
cdata_C_nz<-cdata_C[!(cdata_C$TradeFlow<=0),]
cdata_C16_nz<-cdata_C16[!(cdata_C16$TradeFlow<=0),]
cdata_C6_nz<-cdata_C6[!(cdata_C6$TradeFlow<=0),]

## ---- Simple Scatter Plots ----

library(ggthemes)

hist(cdata16$dist_w)
max(cdata16$dist_w)
max(cdata16$dist)

## ---- Centrality Evolution
remote616<-cbind(r_index6, r_index16)

#rename
colnames(remote616)[2] <- "r_index6"
colnames(remote616)[5] <- "r_index16"
colnames(remote616)[4] <- "nada"
colnames(remote616)[6] <- "nada2"


remote616or1<-remote616[order(remote616$r_index6),]
remote616or1$rank6 <- NA
remote616or1$rank6 <- 1:nrow(r_index6)

remote616or2<-remote616or1[order(remote616or1$r_index16),]
remote616or2$rank16 <- NA
remote616or2$rank16 <- 1:nrow(r_index16)

remote616or2$ddd<-remote616or2$rank16-remote616or2$rank6

p_remote616 <-ggplot(remote616or2, aes(x=rank6, y=rank16))+
  geom_abline(slope=1, intercept=0, color="white", alpha = 1)+
  scale_colour_distiller(palette = "Spectral",direction = 1)+
  geom_point()+
  
  geom_text_repel(aes(label=OrigCode), size=2,segment.alpha = 0.8,segment.size = 0.3)+
  
  theme_economist()

p_remote616 

#DIFFERENCE: Remoteness 2006 - 2016 > more central now !
remote616or2$difference = log(remote616or2$r_index16) - log(remote616or2$r_index6)

p_remote616 <-ggplot(remote616or2, aes(x=log(r_index16), y=log(r_index6),color = difference))+
  geom_abline(slope=1, intercept=0, color="white", alpha = 1, size =0.3)+
  geom_text_repel(aes(label=OrigCode), color ="black",size=2.5,segment.alpha = 0.2,segment.size = 0.3)+
  
  scale_colour_distiller(palette = "Spectral",direction = -1)+
  scale_y_continuous(breaks=c(3,3.25,3.5,3.75,4))+
  scale_x_continuous(breaks=c(3,3.25,3.5,3.75,4))+
  geom_point(size = 2.5,alpha = 1)+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 10),
        panel.grid.major.x = element_line(size=0.5),
        panel.grid.major.y= element_line(size=0.5),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "2006 Remoteness", y="2016 Remotness")+
  labs(title = "Remoteness of Countries in 2006 and 2016", 
       subtitle = "Centrality measure: Country remoteness estimation in 2016 compared to 2006, estimated as the (log of)\nGDP-weighted average distance to all other countries. If remoteness shrinks, the average distance to the\nworld's economy has been reduced and the country is more central.", 
       caption = "Sources: UNCTAD + World Bank 2018")+
  labs(col="Remoteness change:\nBlue = more central\nin 2016")
p_remote616 

#export it no population impact
tiff("p_remote616_alpha.tiff", width = 10, height = 7, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_remote616)
dev.off()


cor(cdata16$exporter_remote,cdata16$TradeFlow)

cor(cdata16$dist,cdata16$TradeFlow)
cor(cdata16$dist,cdata16$importer_remote)

cor(cdata16$dist,cdata16$dist_w)

## ---- Distances Plot ----
p_distances <-ggplot(cdata16, aes(x=dist, y=dist_w)) +
  geom_point(color ="dodgerblue4", alpha = 0.3)+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 12),
        panel.grid.major.x = element_line(size=0.5),
        panel.grid.major.y= element_line(size=0.5),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "Maritime distance (Nautical Miles)", y="Aerial distance (Kilometers)")+
  labs(title = "Distance Estimations: Maritime vs Aerial", 
       subtitle = "Comparison of distances separating countries, estimated either with nautical miles between the main port of each\ncountry or using aerial distance between the principal cities of 129 Countries\n", 
       caption = "Sources: UNCTAD + CEPII 2018")+
  labs(col="TradeFlow")
plot(p_distances)

# #export it no population impact
# tiff("p_distances1_alpha.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_distances)
# dev.off()

ggplot(cdata16, aes(x=log(dist), y=log(TradeFlow+1), color=log(TradeFlow+1))) +
  geom_point() +geom_smooth(method = "auto")

cor(cdata_C16$dist , cdata_C16$dist_w)
plot(cdata_C16$dist , cdata_C16$dist_w)

cor(cdata_C16$TradeFlow , cdata_C16$dist)
cor(cdata_C16$TradeFlow , cdata_C16$dist_w)

plot(log(cdata_C16$TradeFlow+1) , log(cdata_C16$dist_w))
plot(log(cdata_C16$TradeFlow+1) , log(cdata_C16$dist))


## ---- MATRIX ----

#now we can create pivot table to turn paired list into MATRIX (and compute the margins as well)

cdatamat <- dcast(cdata_C16, OrigCode ~ DestCode, sum, value.var = "TradeFlow", margins=c("Orig", "Dest"))
cdatamat

## ---- COMPLEX PLOTS ----
## ---- Connectivity  Complex plots ----
## ---- Scatter Max min carriers ----

median(cdata_C16$Maxmincarriers)
mean(cdata_C16$Maxmincarriers)

p_maxmin1<-ggplot(cdata_C16, aes(x=Maxmincarriers, y=TradeFlow+1, color = Maxmincarriers)) +
  geom_point(alpha = 0.8)+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 12),
        panel.grid.major.x = element_line(size=0.5),
        panel.grid.major.y= element_line(size=0.5),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "Max carriers", y="Trade Flow")+
  labs(title = "Trade and Number of Carriers", 
       subtitle = "Trade and maximum number of carriers on the thinnest segment of the route between countries\nin 2016. Higher values representing more competition in shipping services on the route | Log scale", 
       caption = "Sources: UNCTAD + UN Comtrade 2018")+
  labs(col="Max carriers")+
  scale_y_continuous(labels = scales::dollar, trans ="log10")

p_maxmin1
# #export
# tiff("p_maxmin1_alpha.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_maxmin1)
# dev.off()

## ---- Scatter Max Ship carriers ----
p_ship1<-ggplot(cdata_C16_nz, aes(x=MaxShipSize, y=TradeFlow, color = MaxShipSize)) +
  geom_point(alpha = 0.4)+
  theme_economist()+
  #geom_hline(yintercept=12000000000, colour='white')+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 11),
        panel.grid.major.x = element_line(size=0.5),
        panel.grid.major.y= element_line(size=0.5),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "Max ship size", y="Trade Flow")+
  labs(title = "Trade and Ship Size", 
       subtitle = "Trade and size of the largest ships on the weakest route between countries in 2016 measured\nin twenty-foot equivalent unit (TEU) container | Log scale", 
       caption = "Sources: UNCTAD + UN Comtrade 2018")+
  labs(col="Max\nShip size",labels=comma)+
  scale_y_continuous(labels = scales::dollar, trans ="log10")+
  scale_x_continuous(labels=comma)+
  scale_colour_continuous(labels=comma)
p_ship1

# #12.000.000.000
# #export
# tiff("p_ship1_alpha.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_ship1)
# dev.off()


## ---- Scatter ComDir ----
p_comdir1<-ggplot(cdata_C16, aes(x=ComDir, y=TradeFlow+1, color = ComDir)) +
  #geom_boxplot()
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 11),
        panel.grid.major.x = element_line(size=0.5),
        #panel.grid.major.y= element_line(size=0.5),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "Number of common direct connections", y="Trade Flow")+
  labs(title = "Trade and Common Direct Connections", 
       subtitle = "Trade between countries and number of common liner shipping direct connections in 2016 | Log scale", 
       caption = "Sources: UNCTAD + UN Cometrade 2018")+
  labs(col="Common\nDirect\nConnections")+
  scale_y_continuous(labels = scales::dollar, trans ="log10")+
  geom_point(alpha = 0.3)

p_comdir1

# #export
# tiff("p_comdir1_alpha.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_comdir1)
# dev.off()



## ---- Scatter Num Trans ----

cdata_C16_ship<-subset(cdata_C16, MaxShipSize >= 14000)

cdata_C16_0<-subset(cdata_C16, numTrans == 0)
cdata_C16_1<-subset(cdata_C16, numTrans == 1)
cdata_C16_2<-subset(cdata_C16, numTrans == 2)

median(log(cdata_C16_0$TradeFlow+1))
mean(log(cdata_C16_1$TradeFlow+1))
mean(log(cdata_C16_2$TradeFlow+1))

p_tranship1<-ggplot(cdata_C16, aes(x=as.factor(numTrans), y=(TradeFlow+1), color = (TradeFlow+1))) +
  geom_boxplot()+
  #geom_point(alpha = 0.05)+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 12),
        #panel.grid.major.x = element_line(size=0.5),
        #panel.grid.major.y= element_line(size=0.5),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "Number of Transhipments Required", y="Trade Flow")+
  labs(title = "Trade and Number of Transhipments", 
       subtitle = "Trade and number of transhipments required for transport from one country to the other in 2016 | Log scale", 
       caption = "Sources: UNCTAD + UN Cometrade 2018")+
  
  labs(col="Trade")+
  scale_y_continuous(labels = scales::dollar, trans ="log10")
p_tranship1

# #export
# tiff("p_tranship1_alpha.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_tranship1)
# dev.off()



## ---- Scatter Direct Con ----
p_dircon1<-ggplot(cdata_C16, aes(x=DCon, y=log(TradeFlow+1), color = DCon)) +
  geom_point(alpha = 0.3)+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 12),
        #panel.grid.major.x = element_line(size=0.5),
        #panel.grid.major.y= element_line(size=0.5),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "number of direct connections between countries (geom. mean)", y="log(TradeFlow+1)")+
  labs(title = "Trade and geometric mean of number of direct connections", 
       subtitle = "Trade and number of direct connections between countries in 2016 (Geometric mean of exporter and importer country)", 
       caption = "Sources: UNCTAD + UN COMECAST 2018")+
  labs(col="Mean\nDirect\nconnections")

# #export
# tiff("p_dircon1.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_dircon1)
# dev.off()

summary(cdata_C16$LSBCI_2)
## ---- Scatter LSBCI ----
p_lsbci1<-ggplot(cdata_C16, aes(x=LSBCI_2, y=TradeFlow+1, color = LSBCI_2)) +
  geom_vline(xintercept=1, color="white", alpha = 1,size=0.4)+
  geom_vline(xintercept=0, color="white", alpha = 1,size=0.4)+
  geom_point(alpha = 0.2)+
  scale_y_continuous(labels = scales::dollar, trans ="log10")+
  scale_x_continuous(breaks=c(0.25,0.50,0.75,1))+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 12),
        panel.grid.major.x = element_line(size=0.4),
        panel.grid.major.y= element_line(size=0.4),
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  #theme(plot.margin = unit(c(0,0,0,0), "cm"))+
  labs(x = "Liner Shipping Bilateral Connectivity Index", y="Trade Flow")+
  labs(title = "Liner Shipping Bilateral Connectivity Index", 
       subtitle = "Trade of manufactured goods and Liner Shipping Bilateral Connectivity Index (LSBCI) in 2016 | Log scale", 
       caption = "Sources: UNCTAD + UN COMECAST 2018")+
  labs(col="LSBCI")




p_lsbci1

# #export
# tiff("p_lsbci1_alpha.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_lsbci1)
# dev.off()


#Maxmincarrier and TEU 2016
ggplot(cdata_C16, 
       aes(x=Maxmincarriers, 
           y=log(TradeFlow+1),
           color=log(TradeFlow+1))) +
  geom_point()+
  theme_economist()



#TradeFlow Max Min Carriers 
ggplot(cdata_C16, 
       aes(x=Maxmincarriers, 
           y=TradeFlow)) +
  geom_point()

#TradeFlow vs numTrans: ###not to be log ## 0, 1 or 2
hist(cdata_C16$numTrans)

ggplot(cdata_C16, 
       aes(x=numTrans, 
           y=TradeFlow)) +
  geom_point()+ geom_smooth(method = "lm")

#TradeFlow vs ComDir  (number of common direct connections)
ggplot(cdata_C16, 
       aes(x=ComDir, 
           y=log(TradeFlow+1))) +
  geom_point()+ geom_smooth(method = "lm")

#TradeFlow vs DCon (geometric mean of number of direct connections)
ggplot(cdata_C16, 
       aes(x=DCon, 
           y=log(TradeFlow+1))) +
  geom_point()+ geom_smooth(method = "lm")

#TradeFlow vs MaxShipSize (largest ship size on the thinnest segment of the route)
ggplot(cdata_C, 
       aes(x=MaxShipSize, 
           y=log(TradeFlow+1))) +
  geom_point()+ geom_smooth(method = "lm")

#TradeFlow vs dist
ggplot(cdata_C16, 
       aes(x=log(dist_w), 
           y=log(TradeFlow+1))) +
  geom_point()+ geom_smooth(method = "auto")

#TradeFlow vs dist
ggplot(cdata_C, 
       aes(x=log(dist_w), 
           y=log(TradeFlow+1))) +
  geom_point()+ geom_smooth(method = "lm")


## ---- DISTRIBUTION (not necessary) ----


#histogram with a count of 3000, a mean of 75 and a standard deviation of 5
qplot(rnorm(0:3000,mean=14.54443,sd=20.71773^0.5))

#Now here's a Poisson distribution with the same mean:
qplot(rpois(0:3000,lambda=20.71773^0.5))+ stat_bin(binwidth = 1 ) #+ stat_bin(binwidth = 1)

#HISTOGRAM
#hist(cdata16$TradeFlow)
hist(log(cdata$TradeFlow+1))
var(log(cdata$TradeFlow+1))
mean(log(cdata$TradeFlow+1))

xx <-log(cdata9$TradeFlow+1)
xx2 <-log(cdata15$TradeFlow+1)
summary(xx2)

#install.packages("fitdistrplus")
library(fitdistrplus)
descdist(xx, discrete = FALSE)

mean(cdata$TradeFlow)

#Normal
normal_dist <- fitdist(xx, "norm", method ="mge")

pois_dist <- fitdist(xx2, "pois")

plot(normal_dist)
plot(pois_dist)

##what about a lambda of 0.5?
qplot(rpois(0:3000,0.5)) + stat_bin(binwidth = 1)

#As far as we're concerned, what this means is that if we are interested in all flows between all 
#origins and destinations in our system, these flows will have a mean value of ??ij??ij and this 
#will dictate the distribution. Here's what the distrbution of our flows looks like:
qplot(cdata16$TradeFlow) + geom_histogram()
qplot(log(cdata16$TradeFlow+1)) + geom_histogram()

#Mmmm, Poissony!

qplot(dist, log(TradeFlow), data=cdata16) + geom_smooth(method = lm)


## ---- BIG PICTURE ----

#Aggregate by country Trade Flow - Exporter

#Per Country STANDARD
for (i in 06:16){
  assign(paste("cdata_agg",i,sep=""),aggregate(TradeFlow ~ OrigCode, transform(assign(paste("cdata",i,sep=""),subset(cdata, Year == 2000+i)), OrigCode = sub("\\d+$",                                                                                  "", OrigCode)), sum))
  
}

#Per Country standard

cdata_CX1<-cdata_C[!(cdata_C$OrigCode=="AGO"),]
cdata_CX2<-cdata_CX1[!(cdata_CX1$OrigCode=="COG"),]
cdata_CX3<-cdata_CX2[!(cdata_CX2$OrigCode=="GNB"),]
cdata_CX4<-cdata_CX3[!(cdata_CX3$OrigCode=="GNQ"),]
cdata_CX5<-cdata_CX4[!(cdata_CX4$OrigCode=="HTI"),]
cdata_CX6<-cdata_CX5[!(cdata_CX5$OrigCode=="KIR"),]
cdata_CX7<-cdata_CX6[!(cdata_CX6$OrigCode=="LBR"),]
cdata_CX8<-cdata_CX7[!(cdata_CX7$OrigCode=="MHL"),]
cdata_CX9<-cdata_CX8[!(cdata_CX8$OrigCode=="MMR"),]
cdata_CX10<-cdata_CX9[!(cdata_CX9$OrigCode=="MRT"),]
cdata_CX11<-cdata_CX10[!(cdata_CX10$OrigCode=="PLW"),]
cdata_CX12<-cdata_CX11[!(cdata_CX11$OrigCode=="PNG"),]
cdata_CX13<-cdata_CX12[!(cdata_CX12$OrigCode=="SLE"),]
cdata_CX14<-cdata_CX13[!(cdata_CX13$OrigCode=="TGO"),]
cdata_CX15<-cdata_CX14[!(cdata_CX14$OrigCode=="ATG"),]

cdata_CX<-cdata_CX15 # CONECTIVTY 12 COUNTRIES 06-16


cdata_X1<-cdata[!(cdata$OrigCode=="AGO" | cdata$DestCode=="AGO"),]
cdata_X2<-cdata_X1[!(cdata_X1$OrigCode=="COG" |cdata_X1$DestCode=="COG"  ),]
cdata_X3<-cdata_X2[!(cdata_X2$OrigCode=="GNB" |cdata_X2$DestCode=="GNB"),]
cdata_X4<-cdata_X3[!(cdata_X3$OrigCode=="GNQ" |cdata_X3$DestCode=="GNQ"),]
cdata_X5<-cdata_X4[!(cdata_X4$OrigCode=="HTI" |cdata_X4$DestCode=="HTI"),]
cdata_X6<-cdata_X5[!(cdata_X5$OrigCode=="KIR" |cdata_X5$DestCode=="KIR"),]
cdata_X7<-cdata_X6[!(cdata_X6$OrigCode=="LBR" |cdata_X6$DestCode=="LBR"),]
cdata_X8<-cdata_X7[!(cdata_X7$OrigCode=="MHL" | cdata_X7$DestCode=="MHL"),]
cdata_X9<-cdata_X8[!(cdata_X8$OrigCode=="MMR" | cdata_X8$DestCode=="MMR"),]
cdata_X10<-cdata_X9[!(cdata_X9$OrigCode=="MRT"|cdata_X9$DestCode=="MRT"),]
cdata_X11<-cdata_X10[!(cdata_X10$OrigCode=="PLW" | cdata_X10$DestCode=="PLW"),]
cdata_X12<-cdata_X11[!(cdata_X11$OrigCode=="PNG" | cdata_X11$DestCode=="PNG"),]
cdata_X13<-cdata_X12[!(cdata_X12$OrigCode=="SLE" | cdata_X12$DestCode=="SLE"),]
cdata_X14<-cdata_X13[!(cdata_X13$OrigCode=="TGO" | cdata_X13$DestCode=="TGO"),]
cdata_X15<-cdata_X14[!(cdata_X14$OrigCode=="ATG" | cdata_X14$DestCode=="ATG"),]
cdata_X16<-cdata_X15[!(cdata_X15$OrigCode=="COM" | cdata_X15$DestCode=="COM"),]
cdata_X17<-cdata_X16[!(cdata_X16$OrigCode=="IRN" | cdata_X16$DestCode=="IRN"),]

cdata_X <- cdata_X17 #STANDARD 112 COUNTRIES 06-16

cdata_C$TEU_O<-as.numeric(cdata_C$TEU_O)
cdata_C$TEU_D<-as.numeric(cdata_C$TEU_D)
cdata_C$ships_D<-as.numeric(cdata_C$ships_D)
cdata_C$ships_O<-as.numeric(cdata_C$ships_O)

#AGGREGATED DATA: Standard 112 Countries
for (i in 06:16){
  
  assign(paste("cdata_agg_X",i,sep=""),aggregate(TradeFlow ~ OrigCode, transform(assign(paste("cdata",i,sep=""),subset(cdata_X17, Year == 2000+i)), OrigCode = sub("\\d+$",                                                                                  "", OrigCode)), sum))
  
}

#write.csv(cdata_agg_X16, file = "cdata_min_countries.csv")

#agg loop 
for (i in 06:06){
  
  assign(paste("cdata_agg_C",i,sep=""),aggregate(TradeFlow ~ OrigCode, transform(assign(paste("cdata_C",i,sep=""),subset(cdata_CX15, Year == 2000+i)), OrigCode = sub("\\d+$",                                                                                  "", OrigCode)), sum))
  
}
# agg Loop
for (i in 08:16){
  
  assign(paste("cdata_agg_C",i,sep=""),aggregate(TradeFlow ~ OrigCode, transform(assign(paste("cdata_C",i,sep=""),subset(cdata_CX15, Year == 2000+i)), OrigCode = sub("\\d+$",                                                                                  "", OrigCode)), sum))
  
}
#ADD year column

cdata_agg6$year <-2006
cdata_agg7$year <-2007
cdata_agg8$year <-2008
cdata_agg9$year <-2009
cdata_agg10$year <-2010
cdata_agg11$year <-2011
cdata_agg12$year <-2012
cdata_agg13$year <-2013
cdata_agg14$year <-2014
cdata_agg15$year <-2015
cdata_agg16$year <-2016

cdata_agg_X6$year <-2006
cdata_agg_X7$year <-2007
cdata_agg_X8$year <-2008
cdata_agg_X9$year <-2009
cdata_agg_X10$year <-2010
cdata_agg_X11$year <-2011
cdata_agg_X12$year <-2012
cdata_agg_X13$year <-2013
cdata_agg_X14$year <-2014
cdata_agg_X15$year <-2015
cdata_agg_X16$year <-2016

cdata_agg_C6$year <-2006
cdata_agg_C8$year <-2008
cdata_agg_C9$year <-2009
cdata_agg_C10$year <-2010
cdata_agg_C11$year <-2011
cdata_agg_C12$year <-2012
cdata_agg_C13$year <-2013
cdata_agg_C14$year <-2014
cdata_agg_C15$year <-2015
cdata_agg_C16$year <-2016

cdata_agg_flow <- rbind(cdata_agg6,cdata_agg7,cdata_agg8,cdata_agg9,cdata_agg10,cdata_agg11,cdata_agg12,cdata_agg13,cdata_agg14,cdata_agg15,cdata_agg16)

cdata_agg_X_flow <- rbind(cdata_agg_X6,cdata_agg_X7,cdata_agg_X8,cdata_agg_X9,cdata_agg_X10,cdata_agg_X11,cdata_agg_X12,cdata_agg_X13,cdata_agg_X14,cdata_agg_X15,cdata_agg_X16)


cdata_agg_C_flow <- rbind(cdata_agg_C6,cdata_agg_C8,cdata_agg_C9,cdata_agg_C10,cdata_agg_C11,cdata_agg_C12,cdata_agg_C13,cdata_agg_C14,cdata_agg_C15,cdata_agg_C16)

# ##NOT TEADY###
# cdata_agg_flow2 <- cbind(cdata_agg8,cdata_agg9,cdata_agg10,cdata_agg11,cdata_agg12,cdata_agg13,cdata_agg14,cdata_agg15)
# 
# cdata_agg_flow3 <-merge(cdata_agg6, cdata_agg16, by="OrigCode", all = T) #06-16
# cdata_agg_flow6 <-merge(cdata_agg7, cdata_agg_flow3, by="OrigCode", all = T) #07-prev
# 
# cdata_agg_flow7<-cdata_agg_flow6[complete.cases(cdata_agg_flow6), ]
# 
# cdata_agg_flow8 <-cbind(cdata_agg_flow6,cdata_agg_flow2) #all
# cdata_agg_flow9<-cdata_agg_flow8[complete.cases(cdata_agg_flow8), ]
# 
#  #???cdata_agg_flow4<-cdata[complete.cases(cdata_agg_flow3), ]
#  cdata_agg_flow5<-cdata_agg_flow3[complete.cases(cdata_agg_flow3), ]
# 
#  
# colSums(is.na(cdata_agg_flow5))

#cdata_agg_flow <- rbind(cdata_agg8,cdata_agg9$TradeFlow,cdata_agg10$TradeFlo,cdata_agg11,cdata_agg12,cdata_agg13,cdata_agg14,cdata_agg15,cdata_agg16)

ggplot(data = cdata_agg_flow, aes(x=year, y=TradeFlow)) + geom_line(aes(colour=OrigCode))

## ---- Calc Base Year 2016 ----

#Base Year 2006
library(dplyr)
dft <- cdata_agg_X_flow
dft$TradeFlow <- dft$TradeFlow
dfts <-dft %>%
  group_by(OrigCode) %>%
  mutate(TradeFlow = TradeFlow/TradeFlow[year==2006])

dff<-data.frame(dft,dfts)

#timeseries
# colnames(cdata_agg_flow)[2] <- "08"
# colnames(cdata_agg_flow)[3] <- "09"
# colnames(cdata_agg_flow)[4] <- "10"
# colnames(cdata_agg_flow)[5] <- "11"
# colnames(cdata_agg_flow)[6] <- "12"
# colnames(cdata_agg_flow)[7] <- "13"
# colnames(cdata_agg_flow)[8] <- "14"
# colnames(cdata_agg_flow)[9] <- "15"
# colnames(cdata_agg_flow)[10] <- "16"

cdata_agg_flow$year <-as.numeric(cdata_agg_flow$year)
#cdata_agg_flow5$year <-as.numeric(cdata_agg_flow5$year)


#Aggregate by country Trade Flow - Importer
cdata_16_sum_country_imp <-aggregate(TradeFlow ~ DestCode, transform(cdata6, DestCode = sub("\\d+$",
                                                                                            "", DestCode)), sum)

hist(log(cdata_16_sum_country_imp$TradeFlow))

#Aggregate by country Trade Flow - Exporter
cdata_16_sum_country_exp <-aggregate(TradeFlow ~ OrigCode, transform(cdata6, DestCode = sub("\\d+$",
                                                                                            "", DestCode)), sum)

hist(log(cdata_16_sum_country_exp$TradeFlow))

#subset for 2016
for (i in 6:16){
  assign(paste("dff",i,sep=""),subset(dff, year == 2000+i))
}

#Ordered
dff16x<-dff16[order(-dff16$TradeFlow),]
dff15x<-dff15[order(-dff15$TradeFlow),]
dff14x<-dff14[order(-dff14$TradeFlow),]
dff13x<-dff13[order(-dff13$TradeFlow),]
dff12x<-dff12[order(-dff12$TradeFlow),]
dff11x<-dff11[order(-dff11$TradeFlow),]
dff10x<-dff10[order(-dff10$TradeFlow),]
dff9x<-dff9[order(-dff9$TradeFlow),]
dff8x<-dff8[order(-dff8$TradeFlow),]
dff7x<-dff7[order(-dff7$TradeFlow),]
dff6x<-dff6[order(-dff6$TradeFlow),]

#total of 2016
tot16<-sum(dff16$TradeFlow)
tot15<-sum(dff15$TradeFlow)
tot14<-sum(dff14$TradeFlow)
tot13<-sum(dff13$TradeFlow)
tot12<-sum(dff12$TradeFlow)
tot11<-sum(dff11$TradeFlow)
tot10<-sum(dff10$TradeFlow)
tot9<-sum(dff9$TradeFlow)
tot8<-sum(dff8$TradeFlow)
tot7<-sum(dff7$TradeFlow)
tot6<-sum(dff6$TradeFlow)

#as pct of total 2016
dff16x$pct <-dff16x$TradeFlow/tot16
dff15x$pct <-dff15x$TradeFlow/tot15
dff14x$pct <-dff14x$TradeFlow/tot14
dff13x$pct <-dff13x$TradeFlow/tot13
dff12x$pct <-dff12x$TradeFlow/tot12
dff11x$pct <-dff11x$TradeFlow/tot11
dff10x$pct <-dff10x$TradeFlow/tot10
dff9x$pct <-dff9x$TradeFlow/tot9
dff8x$pct <-dff8x$TradeFlow/tot8
dff7x$pct <-dff7x$TradeFlow/tot7
dff6x$pct <-dff6x$TradeFlow/tot6

dff16x$rank <- NA
dff16x$rank <- 1:nrow(dff16x)

dff15x$rank <- NA
dff15x$rank <- 1:nrow(dff15x)

dff14x$rank <- NA
dff14x$rank <- 1:nrow(dff14x)

dff13x$rank <- NA
dff13x$rank <- 1:nrow(dff13x)

dff12x$rank <- NA
dff12x$rank <- 1:nrow(dff12x)

dff11x$rank <- NA
dff11x$rank <- 1:nrow(dff11x)

dff10x$rank <- NA
dff10x$rank <- 1:nrow(dff10x)

dff9x$rank <- NA
dff9x$rank <- 1:nrow(dff9x)

dff8x$rank <- NA
dff8x$rank <- 1:nrow(dff8x)

dff7x$rank <- NA
dff7x$rank <- 1:nrow(dff7x)

dff6x$rank <- NA
dff6x$rank <- 1:nrow(dff6x)

junto1<-data.frame(rbind(dff6x,dff7x,dff8x,dff9x,dff10x,dff11x,dff12x,dff13x,dff14x,dff15x,dff16x))

junto2016 <-subset(junto1, year == 2016)
#write.csv(junto2016, file = "agg_country_2016_junto.csv")

junto15 <- data.frame(junto1[(1:15),])

#Sum the top 15 Countries 2016
sum(dff16x$pct[1:15])
sum(dff15x$pct[1:15])
sum(dff14x$pct[1:15])
sum(dff13x$pct[1:15])
sum(dff12x$pct[1:15])
sum(dff11x$pct[1:15])
sum(dff10x$pct[1:15])
sum(dff9x$pct[1:15])
sum(dff8x$pct[1:15])
sum(dff7x$pct[1:15])
sum(dff6x$pct[1:15])

toptraders <-data.frame(
  dff16x$OrigCode[1:15],dff16x$rank[1:15],
  dff15x$OrigCode[1:15],dff15x$rank[1:15],
  dff14x$OrigCode[1:15],dff14x$rank[1:15],
  dff13x$OrigCode[1:15],dff13x$rank[1:15],
  dff12x$OrigCode[1:15],dff12x$rank[1:15],
  dff11x$OrigCode[1:15],dff11x$rank[1:15],
  dff10x$OrigCode[1:15],dff10x$rank[1:15],
  dff9x$OrigCode[1:15],dff9x$rank[1:15],
  dff8x$OrigCode[1:15],dff8x$rank[1:15],
  dff7x$OrigCode[1:15],dff7x$rank[1:15],
  dff6x$OrigCode[1:15],dff6x$rank[1:15])

toptraders_full <-data.frame(rbind(
  dff16x[1:15,],
  dff15x[1:15,],
  dff14x[1:15,],
  dff13x[1:15,],
  dff12x[1:15,],
  dff11x[1:15,],
  dff10x[1:15,],
  dff9x[1:15,],
  dff8x[1:15,],
  dff7x[1:15,],
  dff6x[1:15,])
)

my_theme <- function() {
  
  # Colors
  color.background = "white"
  color.text = "#22211d"
  
  # Begin construction of chart
  theme_bw(base_size=10) +
    
    # Format background colors
    theme(panel.background = element_rect(fill=color.background, color=color.background)) +
    theme(plot.background  = element_rect(fill=color.background, color=color.background)) +
    theme(panel.border     = element_rect(color=color.background)) +
    theme(strip.background = element_rect(fill=color.background, color=color.background)) +
    
    # Format the grid
    theme(panel.grid.major.y = element_blank()) +
    theme(panel.grid.minor.y = element_blank()) +
    theme(axis.ticks       = element_blank()) +
    
    # Format the legend
    theme(legend.position = "none") +
    
    # Format title and axis labels
    theme(plot.title       = element_text(color=color.text, size=14, face = "bold")) +
    theme(plot.subtitle       = element_text(color=color.text, size=12)) +
    theme(axis.title.x     = element_text(size=12, color="black", face = "bold")) +
    theme(axis.title.y     = element_text(size=12, color="black", face = "bold", vjust=1.25)) +
    theme(axis.text.x      = element_text(size=8, vjust=0.1, hjust=0.1, color = color.text)) +
    theme(axis.text.y      = element_text(size=8, color = color.text)) +
    theme(strip.text       = element_text(face = "bold")) +
    
    # Plot margins
    theme(plot.margin = unit(c(0.45, 0.3, 0.4, 0.45), "cm"))
}



# 
# ggplot(data = junto1, aes(x = year, y = rank, group = OrigCode)) +
#   geom_line(aes(color = OrigCode, alpha = 0.8), size = 2) +
#   geom_point(aes(color = OrigCode, alpha = 0.8), size = 3) +
#   scale_y_reverse(breaks = 1:nrow(junto1))

# install.packages('ggflags')
# library(ggflags) # data visualization


## ----  II - RANKING CHART https://www.r-bloggers.com/bump-chart/# ----

show.top.n <- 15
traderanking1<-ggplot(data = junto1, aes(x = year, y = rank, group = OrigCode)) +
  geom_line(aes(color = OrigCode, alpha = 1), size = 2) +
  geom_point(aes(color = OrigCode, alpha = 1), size = 4) +
  geom_point(color = "#FFFFFF", size = 1) +
  scale_y_reverse(breaks = 1:show.top.n) +
  scale_x_continuous( expand = c(.05, .05)) +
  geom_text(data = junto1 %>% filter(year == "2006"),
            aes(label = OrigCode) , hjust = 2, fontface = "bold", color = "#888888", size = 2) +
  geom_text(data = junto1 %>% filter(year == "2016"),
            aes(label = OrigCode) , hjust = -0.55, fontface = "bold", color = "#888888", size = 2) +
  coord_cartesian(ylim = c(1,show.top.n)) + 
  theme(legend.position = "none") +
  labs(x = "Year",
       y = "Country Ranking",
       title = " Top 15 Exporting Countries for Manufactured Goods",
       subtitle = "  Countries ranked by export value of manufactured goods from 2006 to 2016",
       caption = "Source: UN Cometrade data 2018") +
  my_theme() 
traderanking1

#export
# tiff("country_ranking_trade_1_06_16.tiff", width = 8, height = 4, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(traderanking1)
# dev.off()



## ---- GRAPH: Top traders Base year 2006 ----

toptraders_full$good <- ifelse(toptraders_full$TradeFlow.1>= 1 & toptraders_full$year == 2016, 1,0)

toptraders_full$Performance <- "Better"
toptraders_full$Performance[toptraders_full$OrigCode == "CHN"] <-"better"
toptraders_full$Performance[toptraders_full$OrigCode == "USA"] <-"better"
toptraders_full$Performance[toptraders_full$OrigCode == "KOR"] <-"better"
toptraders_full$Performance[toptraders_full$OrigCode == "SGP"] <-"better"
toptraders_full$Performance[toptraders_full$OrigCode == "MEX"] <-"better"
toptraders_full$Performance[toptraders_full$OrigCode == "MYS"] <-"better"
toptraders_full$Performance <- as.factor(toptraders_full$Performance)

toptraders_full$OrderRank <- "01"
toptraders_full$OrderRank[toptraders_full$OrigCode == "CHN"] <-"01"
toptraders_full$OrderRank[toptraders_full$OrigCode == "USA"] <-"02"
toptraders_full$OrderRank[toptraders_full$OrigCode == "DEU"] <-"03"
toptraders_full$OrderRank[toptraders_full$OrigCode == "JPN"] <-"04"
toptraders_full$OrderRank[toptraders_full$OrigCode == "KOR"] <-"05"
toptraders_full$OrderRank[toptraders_full$OrigCode == "MEX"] <-"06"
toptraders_full$OrderRank[toptraders_full$OrigCode == "FRA"] <-"07"
toptraders_full$OrderRank[toptraders_full$OrigCode == "ITA"] <-"08"
toptraders_full$OrderRank[toptraders_full$OrigCode == "GBR"] <-"09"
toptraders_full$OrderRank[toptraders_full$OrigCode == "NLD"] <-"10"
toptraders_full$OrderRank[toptraders_full$OrigCode == "SGP"] <-"11"
toptraders_full$OrderRank[toptraders_full$OrigCode == "MYS"] <-"12"
toptraders_full$OrderRank[toptraders_full$OrigCode == "CAN"] <-"13"
toptraders_full$OrderRank[toptraders_full$OrigCode == "BEL"] <-"14"
toptraders_full$OrderRank[toptraders_full$OrigCode == "ESP"] <-"15"
toptraders_full$OrderRank[toptraders_full$OrigCode == "IND"] <-"16"
toptraders_full$OrderRank[toptraders_full$OrigCode == "VNM"] <-"17"
toptraders_full$OrderRank[toptraders_full$OrigCode == "THA"] <-"18"

## See available palettes

library(RColorBrewer)
display.brewer.all()


colourCount <- 17 # number of levels
getPalette <- colorRampPalette(brewer.pal(8, "Accent"))



tradebyyear08<-ggplot(toptraders_full, aes(x = year , y = TradeFlow.1)) + 
  geom_line(aes(color = OrigCode ), size = 1, alpha =1)+
  theme_economist()+
  scale_colour_manual(values = getPalette(colourCount)) +
  theme(legend.position="right",axis.title = element_text(size = 13),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 10))+
  labs(x = "Year", y="Export level relative to base-year 2006")+
  labs(title = "Change in manufactured goods exports between 2006 and 2016", 
       subtitle = " Evolution relative to base year 2006 for countries ranked above top 15 by trade value", 
       caption = "COMCAST UN data 2018")+
  labs(col="Country")+guides(colour=guide_legend(nrow=8))
tradebyyear08

#export it no population impact
# tiff("trade_country_baseyear06-1-top.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(tradebyyear08)
#dev.off()


## ---- Graph: Top Traders ----
neworder <- toptraders_full

#Add pair with country and year
neworder<-neworder%>%
  unite(rank2016,OrderRank, OrigCode, sep="-",remove = FALSE)

toptraders_full<-neworder

p_area1 <-ggplot(toptraders_full, aes(x = year , y = TradeFlow/1000000000)) + 
  geom_area(aes(color = rank2016,fill=rank2016), size = 0.5, alpha =0.5)+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 13),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 10))+
  labs(x = "Year", y="Value of Manufactured Goods Exported")+
  labs(title = "Manufactured Goods Exported Value", 
       subtitle = " Value of Manufactured Goods Exported betweeen 2006 and 2016 in Billion US Dollars per Country | Over 80% of total world exports value", 
       caption = "COMCAST UN data 2018")+
  scale_y_continuous(labels = scales::dollar)+
  labs(col="Country", fill="Country")
#???scale_y_continuous(trans='log2')
p_area1

# #export it no population impact
# tiff("p_trade_country_area1.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_area1)
# dev.off()

toptraders_full$OrigCode=toptraders_full$OrigCode
#, levels=levels(toptraders_full$OrigCode)[c(3,16,4,10,11,12,6,9,7,14,15,13,12,2,1,5,8)])


## ---- GRAPH: Trade by year ----

library(ggthemes)
tradebyyear<-ggplot(toptraders_full, aes(x = year , y = TradeFlow)) + 
  geom_line(aes(color = OrigCode), size = 1, alpha =0.5)+
  theme_economist()+
  theme(legend.position="right",axis.title = element_text(size = 13),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 10))+
  labs(x = "Year", y="Value of Manufactured Goods Export")+
  labs(title = "Manufactured Goods Exported Value", 
       subtitle = " Value of Manufactured Goods Exported betweeen 2008 and 2016 in Billion US Dollars per Country", 
       caption = "COMCAST UN data 2018")+
  labs(col="Country")+
  scale_y_continuous(labels = scales::dollar)
#???scale_y_continuous(trans='log2')
tradebyyear

# #export it no population impact
# tiff("trade_country_baseyear-2.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(tradebyyear)
# dev.off()



## ---- GRAPH: impore vs export value ----
impvsexp <- cbind(cdata_16_sum_country_imp, cdata_16_sum_country_exp)

#rename
colnames(impvsexp)[1] <- "Importer"
colnames(impvsexp)[2] <- "Imports"
colnames(impvsexp)[3] <- "Exporter"
colnames(impvsexp)[4] <- "Exports"



impvsexp$dif = impvsexp$Imports-impvsexp$Exports
impvsexp$bal <- as.factor(ifelse(impvsexp$dif<=0,1,0))

p_importvexp<-ggplot(impvsexp, aes(x=Imports/1000000, y=Exports/1000000, color= bal))+
  geom_point()+
  geom_abline(slope=1, intercept=0, alpha = 0.2)+
  #geom_smooth(method = "lm")+
  geom_text_repel(aes(label=Importer), size=3,segment.alpha = 0.8,segment.size = 0.3)+
  theme_economist()+
  scale_y_continuous(trans ="log10",labels = scales::dollar,breaks=c(10, 10000, 10000000))+
  #,minor_breaks = seq(0 , exp(32), exp(40), breaks = seq(0, exp(32), exp(4)))+
  scale_x_continuous(trans ="log10",labels = scales::dollar,breaks=c(10, 10000,10000000))+
  #coord_trans(y="log", x="log")+
  #,minor_breaks = seq(0 , exp(32), 40)), breaks = seq(0, exp(32), exp(4)))+
  scale_color_manual(labels = c("Negative", "Positive"), values = c("steelblue3", "chocolate3"))+
  theme(panel.grid.major.x = element_line(size=0.5),panel.grid.major.y= element_line(size=0.5),
        legend.position="right",axis.title = element_text(size = 13),
        legend.text = element_text(size = 13),
        axis.text = element_text(size = 12),
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        legend.title=element_text(face = "bold", size = 12))+
  labs(col="Export-Import\nBalance")+
  labs(x = "Value of Imported Goods", y="Value of Exported Goods")+
  labs(title = "Value of Goods: Exported vs Imported", 
       subtitle = "Value in mill. USD of manufactured goods exported and imported per country in 2016 | Log scaled axes", 
       caption = "COMCAST UN data 2018")+
  expand_limits(y=c(10,10000000), x=c(10,10000000))
#scale_y_continuous(labels = scales::dollar)
#???scale_y_continuous(trans='log2')

plot(p_importvexp)

#export it no population impact
tiff("p_importvexp4_test.tiff", width = 10, height = 7, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_importvexp)
dev.off()

#scale_y_continuous(labels = scales::dollar)

#ggplot(impvsexp, aes(x=Imports, y=Exports, color= "red")) +
#  geom_point()+geom_smooth(method = "lm")+geom_text_repel(aes(label=Importer), size=2)

#Correlation between import and export value 2016
cor(impvsexp$Imports,impvsexp$Exports) #0.7073

str(cdata_C16)
cdata_C16$DCon <-as.factor(cdata_C16$DCon)
cdata_C16$ComDir <-as.factor(cdata_C16$ComDir)
cdata_C16$contig <-as.factor(cdata_C16$contig)
cdata_C16$comlang <-as.factor(cdata_C16$comlang)
cdata_C16$fta_wto <-as.factor(cdata_C16$fta_wto)


## ---- GRAPH: Manufactured Goods Import and Export Partner 2016 ----
country_deg_all <- cbind(country_deg_in,country_deg_out, country_deg)
country_deg_all$difference <- country_deg_all$deg_out16-country_deg_all$deg_in16
country_deg_all$bal <- as.factor(ifelse(country_deg_all$difference<=0,1,0))

country_deg_all[,c(3,5)] = NULL;
# country_deg_all$dif = country_deg_all$deg_in16-country_deg_all$deg_out16
# 
# country_deg_all$bal <- as.factor(ifelse(country_deg_all$dif<=0,1,0))

p_partner <-ggplot(country_deg_all, aes(x=deg_in16, y=deg_out16, color = bal)) +
  geom_abline(slope=1, yintercept=0, color="white", alpha = 1,size=0.5)+
  geom_vline(xintercept=140, colour='white', alpha = 1,size=0.3)+
  geom_hline(yintercept=140, color="white", alpha = 1,size=0.3)+
  geom_point(size = 2)+
  geom_text_repel(aes(label=X),size=3,segment.alpha = 0.4,segment.size = 0.4)+
  scale_color_manual(labels = c("Positive","Negative"), values = c("steelblue3", "mediumpurple3"))+
  #scale_colour_distiller(palette = "Spectral",direction = 1)+
  #geom_smooth(method = "lm",se = FALSE)+
  
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.3),panel.grid.major.y= element_line(size=0.3),plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"),
        legend.position="right",axis.title = element_text(size = 13),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 10))+
  scale_y_continuous(breaks=c(40,60,80,100,120,140))+
  scale_x_continuous(breaks=c(40,60,80,100,120,140))+
  labs(x = "Number of Import Partner", y="Number of Export Partner")+
  labs(title = "Import and Export Partner for Manufactured Goods ", 
       subtitle = "Number of import and export partners for manufactured goods within the 112 selected countries.", 
       caption = "UN Cometrade data 2018")+
  labs(col="Import - Export\nPartner Difference")

plot(p_partner)



#export it
tiff("p_partner_2_alpha_test.tiff", width = 10, height = 7, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_partner)
dev.off()




## ---- Network Analysis ----
hist(country_deg_all$deg_in16)
hist(country_deg_all$deg_out16)

cdata16net <-data.frame(cdata_C16$OrigCode,cdata_C16$DestCode,cdata_C16$TradeFlow,cdata_C16$dist,cdata_C16$LatO,cdata_C16$LongO,cdata_C16$LatD,cdata_C16$LongD)

cdata8net <-data.frame(cdata_C8$OrigCode,cdata_C8$DestCode,cdata_C8$TradeFlow,cdata_C8$dist,cdata_C8$LatO,cdata_C8$LongO,cdata_C8$LatD,cdata_C8$LongD)

cdata6net <-data.frame(cdata_C6$OrigCode,cdata_C6$DestCode,cdata_C6$TradeFlow,cdata_C6$dist,cdata_C6$LatO,cdata_C6$LongO,cdata_C6$LatD,cdata_C6$LongD)

cdata15net <-data.frame(cdata15$OrigCode,cdata15$DestCode,cdata15$TradeFlow,cdata15$dist,cdata15$LatO,cdata15$LongO,cdata15$LatD,cdata15$LongD)

plot(cdata_C16$exporter_remote,log(cdata_C16$TradeFlow+1))
plot(cdata_C16$exporter_remote,cdata_C6$exporter_remote)



## ---- CORRELATIONS ----
library(corrplot)


resumen_C<-data.frame(cdata_C[c(3,11:35,40:47)])

resumen_C13<-data.frame(cdata_C13[c(3,9:47)])
resumen_C14<-data.frame(cdata_C14[c(3,9:47)])
resumen_C15<-data.frame(cdata_C15[c(3,9:47)])

#Summary Corplots
resumen_C16<-data.frame(cdata_C16[c(3,34:35,40:47)])
resumen_C16test<-data.frame(cdata_C16[c(3,11:12,34:35,40:47)])
resumen_C16_nz<-data.frame(cdata_C16_nz[c(3,34:35,40:47)])

resumen_C16$log.MarDistance <-(log(resumen_C16$dist))
resumen_C16_nz$log.MarDistance <-(log(resumen_C16_nz$dist)) 
#logarithm
resumen_C16$log.Distance <-(log(resumen_C16$dist_w)) 
resumen_C16_nz$log.Distance <-(log(resumen_C16_nz$dist_w))
#logarithm
resumen_C16$log.Trade <-(log(resumen_C16$TradeFlow+1))
resumen_C16_nz$log.Trade <-(log(resumen_C16_nz$TradeFlow+1))#logarithm

colnames(resumen_C16)[2] <- "MarDistance"
colnames(resumen_C16_nz)[2] <- "MarDistance"
colnames(resumen_C16)[3] <- "Distance"
colnames(resumen_C16_nz)[3] <- "Distance"
colnames(resumen_C16)[6] <- "LSBCIndex"
colnames(resumen_C16_nz)[6] <- "LSBCIndex"

colnames(resumen_C16)[14] <- "Importer.Remoteness"
colnames(resumen_C16)[13] <- "Exporter.Remoteness"
colnames(resumen_C16_nz)[6] <- "LSBCIndex"

resumen_C16<-dplyr::select(resumen_C16,log.Trade,TradeFlow, LSBCIndex, numTrans,MaxShipSize,Maxmincarriers,DCon,ComDir,log.MarDistance, MarDistance,log.Distance, Distance, Exporter.Remoteness, Importer.Remoteness) #reorder

resumen_C16_nz<-dplyr::select(resumen_C16_nz,log.Trade,TradeFlow, LSBCIndex, numTrans,MaxShipSize,Maxmincarriers,DCon,ComDir,log.MarDistance, MarDistance,log.Distance, Distance, exporter_remote, importer_remote) #reorder

str(resumen_C16)

forcor16C<-cor(resumen_C16)
forcor16C_nz<-cor(resumen_C16_nz)

## ---- CORRELATION CONNECTIVITY ----

corrplot.mixed(forcor16C, upper="square",tl.pos = "lt", diag = "l",addrect = 2, bg="azure")


corrplot.mixed(forcor16C_nz, upper="square",tl.pos = "lt", diag = "l",addrect = 2, bg="azure")

plot(p_cor16C_nz)

#export it no population impact
tiff("p_cor16C_3_alpha.tiff", width = 8, height = 7, units = 'in', res = 300)

## plot commands, e.g.,
corrplot.mixed(forcor16C,tl.col="red",upper="circle",tl.pos = "lt", diag = "l",addrect = 2,title = "Correlation of Maritime Connectivity Variables 2016",mar=c(0,0,3,2),number.cex=0.75)
dev.off()


str(resumen_ann)
resumen_test<-data.frame(resumen_ann[c(1,3:20,26:35)])
resumen_test$logt <-log(resumen_test$TradeFlow+1)
forcor_test <-cor(resumen_test)
corrplot.mixed(forcor_test, upper="square",tl.pos = "lt", diag = "l",addrect = 2)

resumen_ann<-data.frame(cdata_C[c(3,6,11:35,40:47)])
resumen_16ann<-data.frame(cdata_C16[c(3,6,11:35,40:47)])
resumen_15ann<-data.frame(cdata_C15[c(3,6,11:35,40:47)])
resumen_6ann<-data.frame(cdata_C6[c(3,6,11:35,40:47)])
resumen_10ann<-data.frame(cdata_C10[c(3,6,11:35,40:47)])

#write.csv(resumen_ann, file = "cdata_resumen_net.csv")
#write.csv(resumen_16ann, file = "cdata_resumen_net16.csv")
#???write.csv(resumen_15ann, file = "cdata_resumen_net15.csv")
# write.csv(resumen_6ann, file = "cdata_resumen_net6.csv")

#  write.csv(resumen_10ann, file = "cdata_resumen_net10.csv")

forcor<-cor(resumen_ann)
str(forcor)
forcor13<-cor(resumen_C13)
forcor14<-cor(resumen_C14)
forcor15<-cor(resumen_C15)
forcor16<-cor(resumen_C16)


corrplot.mixed(forcor, upper="square",tl.pos = "lt", diag = "l",addrect = 2)


corrplot.mixed(forcor14, upper="square",tl.pos = "lt", diag = "l",addrect = 2)
corrplot.mixed(forcor15, upper="square",tl.pos = "lt", diag = "l",addrect = 2)
corrplot.mixed(forcor16, upper="square",tl.pos = "lt", diag = "l",addrect = 2)


## ----- Autoregressive ----


cdata_C16$TradeLag1 <- cdata_C15$TradeFlow[match(cdata_C16$pair, cdata_C15$pair)]
cdata_C16$TradeLag2 <- cdata_C14$TradeFlow[match(cdata_C16$pair, cdata_C14$pair)]
cdata_C16$TradeLag3 <- cdata_C13$TradeFlow[match(cdata_C16$pair, cdata_C13$pair)]
cdata_C16$TradeLag4 <- cdata_C12$TradeFlow[match(cdata_C16$pair, cdata_C12$pair)]
cdata_C16$TradeLag5 <- cdata_C11$TradeFlow[match(cdata_C16$pair, cdata_C11$pair)]
cdata_C16$TradeLag5 <- cdata_C11$TradeFlow[match(cdata_C16$pair, cdata_C11$pair)]
cdata_C16$TradeLag10 <- cdata_C6$TradeFlow[match(cdata_C16$pair, cdata_C6$pair)]


cor(cdata_C16$TradeLag1,cdata_C16$TradeFlow)
cor(cdata_C16$TradeLag2,cdata_C16$TradeFlow)
cor(cdata_C16$TradeLag3,cdata_C16$TradeFlow)
cor(cdata_C16$TradeLag4,cdata_C16$TradeFlow)
cor(cdata_C16$TradeLag10,cdata_C16$TradeFlow)

cdata16 <-cdata16[complete.cases(cdata16), ]
colSums(is.na(cdata16))



## ---- MANUAL SELECTION ----
# 
# mu <- 1 #mu = 
# alpha <- 1 #?? parameter related to the destination attractiveness (Julian) 
# beta <- -2 ##ß is the the so-called friction of distance # ß parameter controlling the effect of generalised travel cost. When is large, the effect of distance is great and when it is small it is much less. This gives more trips when it is small than when it is big.
# k <- 1 #k  is a constant of proportionality and leads to this particular model being more accurately 
# #described as a 'total constrained' model as all flows estimated by the model will sum to any observed 
# #flow data used to calibrate the parameters, where
# T2 <- sum(cdata$TradeFlow)
# 
# #Now let's create some flow estimates using Equation 2 above¦ Begin by applying the parameters to the 
# #variables:
# 
# vi1_mu <- cdata$exporter_pop^mu # Origin population ^ mu
# wj2_alpha <- cdata$importer_gdp^alpha #Destination salary ^alpha
# dist_beta <- cdata$dist^beta #Distance^beta
# 
# T1 <- vi1_mu*wj2_alpha*dist_beta # T is the sum of our matrix of observed flows
# 
# k <- T2/sum(T1) #k is a constant of proportionality and leads to this particular model being more 
# #accurately described as a 'total constrained' model as all flows estimated by the model will sum 
# #to any observed flow data used to calibrate the parameters
# 
# #Then, just as in Equation 2 above, just multiply everything together to get your flow estimates:
# #run the model and store all of the new flow estimates in a new column in the dataframe
# 
# cdata$unconstrainedEst1 <- round(k*vi1_mu*wj2_alpha*dist_beta,0)#Flow Estimates
# 
# #check that the sum of these estimates makes sense
# sum(cdata$unconstrainedEst1)
# 
# ##turn it into a little matrix and have a look at your handy work
# cdatamat1 <- dcast(cdata, OrigCode ~ DestCode, sum, value.var = "unconstrainedEst1", margins=c("Orig", "Dest"))
# cdatamat1 #MATRIX with ESTIMATES
# cdatamat
# 
# 

## ---- HOW GOOD IS MY MODEL ? ----
# 
# #Testing the goodness-of-fit.

#R-Squared
CalcRSquared <- function(observed,estimated){
  r <- cor(observed,estimated)
  R2 <- r^2
  R2
}

# CalcRSquared(cdata$Total,cdata$unconstrainedEst1) #0.0088

#Root Mean Squared Error (RMSE)
CalcRMSE <- function(observed,estimated){
  res <- (observed - estimated)^2
  RMSE <- round(sqrt(mean(res)),3)
  RMSE
}
# CalcRMSE(cdata$Total,cdata$unconstrainedEst1) #73.168.031

#_________________________________________________________________


## ---- UNCONTRAINED MODEL ----


#run the unconstrained model
#Model BASIC
hist(log(cdata12$TradeFlow+1))

vm<-log(cdata12$TradeFlow+1)
summary(vm)
mean(vm)
var(vm)

## ---- BASIC ----

#STANDARD 16
uncosim8_OLS <- lm(log(TradeFlow+1) ~ 
                     log(exporter_gdp)+
                     log(importer_gdp)+
                     log(dist)
                   , na.action = na.exclude, data = cdata_C8)
summary(uncosim16_OLS)

uncosim10_OLS <- lm(log(TradeFlow+1) ~ 
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      log(dist)
                    , na.action = na.exclude, data = cdata_C10)
summary(uncosim16_OLS)

uncosim12_OLS <- lm(log(TradeFlow+1) ~ 
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      log(dist)
                    , na.action = na.exclude, data = cdata_C12)
summary(uncosim16_OLS)

uncosim14_OLS <- lm(log(TradeFlow+1) ~ 
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      log(dist)
                    , na.action = na.exclude, data = cdata_C14)
summary(uncosim16_OLS)

uncosim16_OLS <- lm(log(TradeFlow+1) ~ 
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      log(dist)
                    , na.action = na.exclude, data = cdata_C16)
summary(uncosim16_OLS)


str(cdata_C)
#STANDARD ALL
cdata_C$Year <- as.factor(cdata_C$Year)
uncosim16_OLS_all <- lm(log(TradeFlow+1) ~ 
                          #log(exporter_gdp)+
                          #log(importer_gdp)+
                          log(dist)+Year
                        , na.action = na.exclude, data = cdata_C)
summary(uncosim16_OLS_all)


coefs <- as.data.frame(uncosim16_OLS$coefficients)
coefs
# #STANDARD 6
# uncosim6_OLS <- lm(log(TradeFlow+1) ~ 
#                       log(exporter_gdp)+
#                       log(importer_gdp)+
#                       log(dist), na.action = na.exclude, data = cdata_C6)
# summary(uncosim6_OLS)
# 
# #GAUSSIAN 16
# uncosim16_OLSb <- glm(log(TradeFlow+1) ~ 
#                       log(exporter_gdp)+
#                       log(importer_gdp)+
#                       log(dist), na.action = na.exclude,family=gaussian, data = cdata_C16)
# summary(uncosim16_OLSb)
# 
# ##GAUSSIAN 16 log
# uncosim16_OLSc <- glm(TradeFlow+1 ~ 
#                         log(exporter_gdp)+
#                         log(importer_gdp)+
#                         log(dist), na.action = na.exclude,family=gaussian(link="log"),data = cdata_C16)
# 
# summary(uncosim16_OLSc)

# # POISSON 16 log
# uncosim16_p.rob <- glmrob(TradeFlow ~ 
#                    log(exporter_gdp)+
#                    log(importer_gdp)+
#                    log(dist), na.action = na.exclude, family = poisson(link="log"), data = cdata_C16)
# 
# uncosim16_p <- glm(TradeFlow ~ 
#                             log(exporter_gdp)+
#                             log(importer_gdp)+
#                             log(dist), na.action = na.exclude, family = poisson(link="log"), data = cdata_C16)
# summary(uncosim16_p)
# summary(uncosim16_p.rob)
# # Quasi POISSON 16 log
# 
# uncosim16_qp <- glm(TradeFlow ~ 
#                      log(exporter_gdp)+
#                      log(importer_gdp)+
#                      log(dist), na.action = na.exclude, family = quasipoisson(link="log"), data = cdata_C16)
# 
# summary(uncosim16_qp)
# 
# #Negative Binomial
# uncosim16_nb <- glm.nb(TradeFlow ~
#                      log(exporter_gdp)+
#                      log(importer_gdp)+
#                      log(dist), na.action = na.exclude,maxit = 100, data = cdata_C16,link = "log")
# 
# summary(uncosim16_OLS)
# summary(uncosim16_p)
# summary(uncosim16_qp)
# summary(uncosim16_nb)

#Testing Basic
cdata_C16$fitted_OLS <- fitted(uncosim16_OLS)
cdata_C16$fitted_OLSb <- fitted(uncosim16_OLSb)
cdata_C16$fitted_OLSc <- fitted(uncosim16_OLSc)

cdata_C16$fitted_p <- fitted(uncosim16_p)
cdata_C16$fitted_qp <- fitted(uncosim16_qp)
cdata_C16$fitted_nb <- fitted(uncosim16_nb)


OLStest<-(log(cdata_C16$TradeFlow+1)-cdata_C16$fitted_OLS)
OLStestb<-(log(cdata_C16$TradeFlow+1)-cdata_C16$fitted_OLSb)
OLStestc<-(log(cdata_C16$TradeFlow+1)-cdata_C16$fitted_OLSc)

POItest<-(cdata_C16$TradeFlow-cdata_C16$fitted_p)
QPOtest<-(cdata_C16$TradeFlow-cdata_C16$fitted_qp)
NBItest<-(cdata_C16$TradeFlow-cdata-C16$fitted_nb)

summary(OLStest)  #919,316,589
summary(OLStestb) #919,316,589
summary(OLStestc) #275,099,079


summary(POItest)  #0
summary(QPOtest)  #0
summary(NBItest)  #-185,400,562

hist(log(cdata16$TradeFlow+1))

CalcRSquared(log(cdata_C16$TradeFlow+1),cdata_C16$fitted_OLS) #0.649 ???
CalcRSquared(cdata_C16$TradeFlow,exp(cdata_C16$fitted_OLS))   #0.239???

CalcRSquared(cdata_C16$TradeFlow,exp(cdata_C16$fitted_OLSb))  #0.239 OLSb
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$fitted_OLSc)       #0.545 OLSc 

CalcRSquared(cdata_C16$TradeFlow,cdata_C16$fitted_p)          #0.495 Poisson
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$fitted_qp)         #0.495 QuasiP
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$fitted_nb)         #0.316 NB


CalcRMSE(cdata_C16$TradeFlow,exp(cdata_C16$fitted_OLS))   #11,990,216,083
CalcRMSE(cdata_C16$TradeFlow,exp(cdata_C16$fitted_OLSb))  #11,990,216,083

CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_OLSc)       #5,496,111,388

CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_p)          #5,789,307,184 #POI
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_qp)         #5,789,307,184 #QP
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_nb)         #7,800,300,358 #NB




## ---- Advanced OLS ----

#install.packages("glmm")
library(glmm)
library(gravity)



#OLS
cor(cdata_C16$deg16_O,log(cdata_C16$TradeFlow+1))
cor(cdata_C16$deg_in16_O ,log(cdata_C16$TradeFlow+1))
cor(cdata_C16$deg_out16_O ,log(cdata_C16$TradeFlow+1))

OLS_2016_z <- lmrob(log(TradeFlow+1) ~ 
                      #log(exporter_pop)+
                      #log(importer_pop)+
                      #   + deg16_D+
                      # + deg16_O+
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      log(exporter_gdp.pc)+
                      log(importer_gdp.pc)+
                      contig+
                      comlang+
                      colony+
                      fta_wto+
                      log(dist)+
                      log(exporter_remote)+
                      log(importer_remote)
                    #+LSBCI_2
                    #+DCon
                    #ComDir+
                    #TEU_D+TEU_O+
                    #MaxShipSize+
                    #Maxmincarriers
                    , data = cdata_C16)
# #CORRECT COEFFICIENTS
# OLS_2016_z$coefficients[6] <- exp(OLS_2016_z$coefficients[6])-1
# OLS_2016_z$coefficients[6]
# 
# OLS_2016_z$coefficients[7] <- exp(OLS_2016_z$coefficients[7])-1
# OLS_2016_z$coefficients[7]
# 
# OLS_2016_z$coefficients[8] <- exp(OLS_2016_z$coefficients[8])-1
# OLS_2016_z$coefficients[8]
# 
# OLS_2016_z$coefficients[9] <- exp(OLS_2016_z$coefficients[9])-1
# OLS_2016_z$coefficients[9]

# 
# 
# OLS_2016_nz <- lmrob(log(TradeFlow) ~ 
#                     #log(exporter_pop)+
#                     #log(importer_pop)+
#                     #   + deg16_D+
#                     # + deg16_O+
#                     log(exporter_gdp)+
#                     log(importer_gdp)+
#                     log(exporter_gdp.pc)+
#                     log(importer_gdp.pc)+
#                     contig+
#                     comlang+
#                     colony+
#                     fta_wto+
#                     log(dist)+
#                     log(exporter_remote)+
#                     log(importer_remote)
#                   #deg_out16_D+
#                   #deg_out16_O+
#                   #+LSBCI_2
#                   #DCon+
#                   #ComDir+
#                   #numTrans+
#                   #TEU_D+TEU_O+
#                   #log(MaxShipSize)+
#                   #Maxmincarriers
#                   , data = cdata_C16_nz)
summary(OLS_2016_nz_A)
summary(OLS_2016_z)
summary(OLS_2016_nz)

OLS_2016_nz_A <- lmrob(log(TradeFlow) ~ 
                      #log(exporter_pop)+
                      #log(importer_pop)+
                      #   + deg16_D+
                      # + deg16_O+
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      log(exporter_gdp.pc)+
                      log(importer_gdp.pc)+
                      contig+
                      comlang+
                      colony+
                      fta_wto+
                      log(dist)+
                      log(exporter_remote)+
                      log(importer_remote)+
                      deg_out16_D+
                      deg_out16_O+
                      #+LSBCI_2
                      #DCon+
                      #ComDir+
                      numTrans+
                      #TEU_D+TEU_O+
                      log(MaxShipSize)+
                      Maxmincarriers
                    , data = cdata_C16_nz)
summary(OLS_2016_nz_A)


PQML_2016_z_A <- glm(TradeFlow ~ 
                       #log(exporter_pop)+
                       #log(importer_pop)+
                       #   + deg16_D+
                       # + deg16_O+
                       log(exporter_gdp)+
                       log(importer_gdp)+
                       log(exporter_gdp.pc)+
                       log(importer_gdp.pc)+
                       contig+
                       comlang+
                       colony+
                       fta_wto+
                       log(dist)+
                       log(exporter_remote)+
                       log(importer_remote)+
                       deg_out16_D+
                       deg_out16_O+
                       #+LSBCI_2
                       #DCon+
                       numTrans+
                       #ComDir+
                       #TEU_D+TEU_O+
                       log(MaxShipSize)+
                       Maxmincarriers, family = quasipoisson(link="log"),
                     data = cdata_C16)
# # Replace change coefficients 
# PQML_2016_z_A$coefficients[1]
# 
# PQML_2016_z_A$coefficients[6]<-exp(0.7393076)-1
# PQML_2016_z_A$coefficients[6]
# 
# PQML_2016_z_A$coefficients[7]<-exp(0.05322618)-1
# PQML_2016_z_A$coefficients[7]
# 
# PQML_2016_z_A$coefficients[8]<-exp(-0.1320329)-1
# PQML_2016_z_A$coefficients[8]
# 
# PQML_2016_z_A$coefficients[13]<-exp(-0.01030550)-1
# PQML_2016_z_A$coefficients[13]
# 
# PQML_2016_z_A$coefficients[14] <-exp(0.07123433)-1
# PQML_2016_z_A$coefficients[14]
# 
# PQML_2016_z_A$coefficients[15]<-exp(-1.09021500)-1
# PQML_2016_z_A$coefficients[15]
# 
# PQML_2016_z_A$coefficients[17] <- exp(0.03779434)-1
# PQML_2016_z_A$coefficients[17]

summary(PQML_2016_z_A)
summary(cdata_C16_nz$DCon)

summary(OLS_2016_nz_A)

#Assumptions Diagnostics

abline(OLS_2016_z)
abline(OLS_2016_nz)

plot(OLS_2016_nz_test)
plot(OLS_2016_z)
plot(OLS_2016_nz)
par(mfrow=c(1,1))

#install.packages("car")
library("car")
# Normality of Residuals
# qq plot for studentized resid
qqPlot(OLS_2016_z, main="QQ Plot")

# distribution of studentized residuals
library(MASS)
sresid <- studres(OLS_2016_nz) 
hist(sresid, freq=FALSE, 
     main="Distribution of Studentized Residuals")
xfit<-seq(min(sresid),max(sresid),length=40) 
yfit<-dnorm(xfit) 
lines(xfit, yfit)

# Evaluate homoscedasticity
# non-constant error variance test
ncvTest(OLS_2016_nz_A)
# plot studentized residuals vs. fitted values 
spreadLevelPlot(OLS_2016_nz_A)

# Evaluate Collinearity
vif(OLS_2016_nz_A) # variance inflation factors 
sqrt(vif(OLS_2016_nz_A)) > 2 # problem?

# Evaluate Nonlinearity
# component + residual plot 
crPlots(OLS_2016_nz_A)
# Ceres plots 
ceresPlots(OLS_2016_nz_A)

# Global test of model assumptions
install.packages("gvlma")
library(gvlma)
gvmodel <- gvlma(OLS_2016_nz) 
summary(gvmodel)


OLS_2016_nz <- lmrob(log(TradeFlow) ~ 
                       #log(exporter_pop)+
                       #log(importer_pop)+
                       log(exporter_gdp)+
                       log(importer_gdp)+
                       log(exporter_gdp.pc)+
                       log(importer_gdp.pc)+
                       contig+
                       comlang+
                       colony+
                       fta_wto+
                       log(dist)+
                       log(exporter_remote)+
                       log(importer_remote)
                     #+LSBCI_2
                     #+DCon
                     #ComDir+
                     #TEU_D+TEU_O+
                     #MaxShipSize+
                     #Maxmincarriers
                     , data = cdata_C16_nz)
summary(OLS_2016_z)

##CORRECT COEFFICIENTS
# OLS_2016_nz$coefficients[6] <- exp(OLS_2016_nz$coefficients[6])-1
# OLS_2016_nz$coefficients[6]
# 
# OLS_2016_nz$coefficients[7] <- exp(OLS_2016_nz$coefficients[7])-1
# OLS_2016_nz$coefficients[7]
# 
# OLS_2016_nz$coefficients[8] <- exp(OLS_2016_nz$coefficients[8])-1
# OLS_2016_nz$coefficients[8]
# 
# OLS_2016_nz$coefficients[9] <- exp(OLS_2016_nz$coefficients[9])-1
# OLS_2016_nz$coefficients[9]


summary(OLS_2016_nz)

# 
# OLS_2006_z <- lm(log(TradeFlow+1) ~ 
#                    #log(exporter_pop)+
#                    #log(importer_pop)+
#                    log(exporter_gdp)+
#                    log(importer_gdp)+
#                    log(exporter_gdp.pc)+
#                    log(importer_gdp.pc)+
#                    contig+
#                    comlang+
#                    colony+
#                    fta_wto+
#                    #dist+
#                    log(dist)+
#                    log(exporter_remote)+
#                    log(importer_remote)
#                  #+LSBCI_2
#                  #+DCon
#                  #ComDir+
#                  #TEU_D+TEU_O+
#                  #MaxShipSize+
#                  #Maxmincarriers
#                  , data = cdata_C6)
# OLS_2006_nz <- lm(log(TradeFlow) ~ 
#                     #log(exporter_pop)+
#                     #log(importer_pop)+
#                     log(exporter_gdp)+
#                     log(importer_gdp)+
#                     log(exporter_gdp.pc)+
#                     log(importer_gdp.pc)+
#                     contig+
#                     comlang+
#                     colony+
#                     fta_wto+
#                     #dist+
#                     log(dist)+
#                     log(exporter_remote)+
#                     log(importer_remote)
#                   #+LSBCI_2
#                   #+DCon
#                   #ComDir+
#                   #TEU_D+TEU_O+
#                   #MaxShipSize+
#                   #Maxmincarriers
#                   , data = cdata_C6_nz)
summary(OLS_2016)
summary(OLS_2016_nz)

cdata_C6_nz$OLS_2006_nz <- fitted(OLS_2006_nz)
cdata_C16_nz$OLS_2016_nz <- fitted(OLS_2016_nz)

cdata_C6$OLS_2006_z <- fitted(OLS_2006_z)
cdata_C16$OLS_2016_z <- fitted(OLS_2016_z)

CalcRSquared(log(cdata_C16_nz$TradeFlow),(cdata_C16_nz$OLS_2016_nz))
CalcRSquared(cdata_C16_nz$TradeFlow,exp(cdata_C16_nz$OLS_2016_nz))    #10,921,175,387
CalcRSquared(cdata_C16$TradeFlow+1,exp(cdata_C16$OLS_2016_z))         #1,406,650,56,691

CalcRMSE(cdata_C6_nz$TradeFlow,exp(cdata_C6_nz$OLS_2006_nz)) 
CalcRMSE(cdata_C6_nz$TradeFlow,exp(cdata_C6_nz$OLS_2006_nz))      #15,088,853,827
CalcRMSE(cdata_C6$TradeFlow,exp(cdata_C6$OLS_2006_z))            #737,221,694,610

CalcRMSE(log(cdata_C16_nz$TradeFlow),cdata_C16_nz$OLS_2016_nz)
CalcRMSE(cdata_C16_nz$TradeFlow,exp(cdata_C16_nz$OLS_2016_nz))    #10,921,175,387
CalcRMSE(cdata_C16$TradeFlow,exp(cdata_C16$OLS_2016_z))         #1,406,650,56,691

CalcRMSE(cdata_C6_nz$TradeFlow,exp(cdata_C6_nz$OLS_2006_nz))      #15,088,853,827
CalcRMSE(cdata_C6$TradeFlow,exp(cdata_C6$OLS_2006_z))            #737,221,694,610

summary(OLS_2006)

# ---- Connectivity reg ----
#install.packages("mctest")
library(mctest)
#???install.packages("usdm")
library(usdm)
OLS_2016_coll <- lm(log(TradeFlow+1) ~ 
                      #log(exporter_pop)+
                      #log(importer_pop)+
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      log(exporter_gdp.pc)+
                      log(importer_gdp.pc)+
                      contig+
                      comlang+
                      colony+
                      fta_wto+
                      log(dist)+
                      log(exporter_remote)+
                      log(importer_remote)+
                      +LSBCI_2
                    +DCon+
                      ComDir+
                      #TEU_D+TEU_O+
                      MaxShipSize+
                      Maxmincarriers
                    , data = cdata_C16)
summary(OLS_2016_coll)

vif(resumen_C16test)


OLS_2016bis <- lmrob(log(TradeFlow+1) ~ 
                    #log(exporter_pop)+
                    #log(importer_pop)+
                    log(exporter_gdp)+
                    log(importer_gdp)+
                    log(exporter_gdp.pc)+
                    log(importer_gdp.pc)+
                    contig+
                    comlang+
                    colony+
                    fta_wto+
                    log(dist)+
                    log(exporter_remote)+
                    log(importer_remote)+
                    +LSBCI_2
                  #+DCon
                  #ComDir+
                  #TEU_D+TEU_O+
                  #MaxShipSize+
                  #Maxmincarriers
                  , data = cdata_C16)
summary(OLS_2016bis)

OLS_2016bis2 <- lmrob(log(TradeFlow+1) ~ 
                     #log(exporter_pop)+
                     #log(importer_pop)+
                     log(exporter_gdp)+
                     log(importer_gdp)+
                     log(exporter_gdp.pc)+
                     log(importer_gdp.pc)+
                     contig+
                     comlang+
                     colony+
                     fta_wto+
                     log(dist)+
                     log(exporter_remote)+
                     log(importer_remote)+
                     #+LSBCI_2
                     #+DCon
                     #ComDir+
                     #TEU_D+TEU_O+
                     #MaxShipSize+
                     Maxmincarriers
                   , data = cdata_C16)

OLS_2016bis3 <- lmrob(log(TradeFlow+1) ~ 
                     #log(exporter_pop)+
                     #log(importer_pop)+
                     log(exporter_gdp)+
                     log(importer_gdp)+
                     log(exporter_gdp.pc)+
                     log(importer_gdp.pc)+
                     contig+
                     comlang+
                     colony+
                     fta_wto+
                     log(dist)+
                     log(exporter_remote)+
                     log(importer_remote)+
                     #+LSBCI_2
                     #+DCon
                     ComDir
                   #TEU_D+TEU_O+
                   #MaxShipSize+
                   #Maxmincarriers
                   , data = cdata_C16)

OLS_2016bis4 <- lmrob(log(TradeFlow+1) ~ 
                     #log(exporter_pop)+
                     #log(importer_pop)+
                     log(exporter_gdp)+
                     log(importer_gdp)+
                     log(exporter_gdp.pc)+
                     log(importer_gdp.pc)+
                     contig+
                     comlang+
                     colony+
                     fta_wto+
                     log(dist)+
                     log(exporter_remote)+
                     log(importer_remote)+
                     #+LSBCI_2
                     #+DCon
                     #ComDir
                     #TEU_D+TEU_O+
                     log(MaxShipSize)
                   #Maxmincarriers
                   , data = cdata_C16)

OLS_2016bis5 <- lmrob(log(TradeFlow+1) ~ 
                     #log(exporter_pop)+
                     #log(importer_pop)+
                     log(exporter_gdp)+
                     log(importer_gdp)+
                     log(exporter_gdp.pc)+
                     log(importer_gdp.pc)+
                     contig+
                     comlang+
                     colony+
                     fta_wto+
                     log(dist)+
                     log(exporter_remote)+
                     log(importer_remote)+
                     #+LSBCI_2
                     #+DCon
                     #ComDir
                     +numTrans
                   #TEU_D+TEU_O+
                   #log(MaxShipSize)
                   #Maxmincarriers
                   , data = cdata_C16)

summary(OLS_2016)


## ---- Different GLM ----



## not  ---- GAUSSIAN LOG ----
OLS_2016_gauss <- glm(TradeFlow ~ 
                        #log(exporter_pop)+
                        #log(importer_pop)+
                        log(exporter_gdp)+
                        log(importer_gdp)+
                        log(exporter_gdp.pc)+
                        log(importer_gdp.pc)+
                        contig+
                        comlang+
                        colony+
                        fta_wto+
                        log(dist)+
                        log(exporter_remote)+
                        log(importer_remote)
                      #+LSBCI_2
                      #+DCon+ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers
                      , data = cdata_C16_nz, family=gaussian(link="log"))

summary(OLS_2016_gauss)


#GAUSSIAN  (como ols)
OLS_2016c <- glm(log(TradeFlow+1) ~ 
                   #log(exporter_pop)+
                   #log(importer_pop)+
                   log(exporter_gdp)+
                   log(importer_gdp)+
                   log(exporter_gdp.pc)+
                   log(importer_gdp.pc)+
                   contig+
                   comlang+
                   colony+
                   fta_wto+
                   log(dist)+
                   log(exporter_remote)+
                   log(importer_remote)
                 #+LSBCI_2
                 #+DCon+ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers
                 , data = cdata_C16, family=gaussian)
summary(OLS_2016)

## ---- Poisson LOG ----
POI_2016_z <- glm(TradeFlow ~ 
                    #log(exporter_pop)+
                    #log(importer_pop)+
                    log(exporter_gdp.pc)+
                    log(importer_gdp.pc)+
                    log(exporter_gdp)+
                    log(importer_gdp)+
                    contig+
                    comlang+
                    colony+
                    fta_wto+
                    log(exporter_remote)+
                    log(importer_remote)+
                    #LSBCI_2+
                    #+DCon+
                    #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                    log(dist), family = poisson(link="log"), data = cdata_C16)

POI_2016_nz <- glm(TradeFlow ~ 
                     #log(exporter_pop)+
                     #log(importer_pop)+
                     log(exporter_gdp.pc)+
                     log(importer_gdp.pc)+
                     log(exporter_gdp)+
                     log(importer_gdp)+
                     contig+
                     comlang+
                     colony+
                     fta_wto+
                     log(exporter_remote)+
                     log(importer_remote)+
                     #LSBCI_2+
                     #+DCon+
                     #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                     log(dist), family = poisson(link="log"), data = cdata_C16_nz)

summary(POI_2016)

#install.packages("robust")
library(robust)


QPOI_2016_z <- glm(TradeFlow ~ 
                     #log(exporter_pop)+
                     #log(importer_pop)+
                     #deg16_D+
                     #deg16_O+
                     log(exporter_gdp.pc)+
                     log(importer_gdp.pc)+
                     log(exporter_gdp)+
                     log(importer_gdp)+
                     contig+
                     comlang+
                     colony+
                     fta_wto+
                     log(exporter_remote)+
                     log(importer_remote)+
                     #LSBCI_2+
                     #+DCon+
                     #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                     log(dist), family = quasipoisson(link="log"), data = cdata_C16)

#CHANGE COEFFICIENTS CORRECT

# QPOI_2016_z$coefficients[6] <- exp(as.numeric(QPOI_2016_z$coefficients[6]))-1
# QPOI_2016_z$coefficients[6]
# 
# QPOI_2016_z$coefficients[7] <- exp(as.numeric(QPOI_2016_z$coefficients[7]))-1
# QPOI_2016_z$coefficients[7]
# 
# QPOI_2016_z$coefficients[8] <- exp(as.numeric(QPOI_2016_z$coefficients[8]))-1
# QPOI_2016_z$coefficients[8]
# 
# QPOI_2016_z$coefficients[9] <- exp(as.numeric(QPOI_2016_z$coefficients[9]))-1
# QPOI_2016_z$coefficients[9]

QPOI_2016_z_db <- glm(TradeFlow ~ 
                        #log(exporter_pop)+
                        #log(importer_pop)+
                        #deg16_D+
                        #deg16_O+
                        #log(exporter_gdp.pc)+
                        #log(importer_gdp.pc)+
                        #log(exporter_gdp)+
                        #log(importer_gdp)+
                        contig+
                        comlang+
                        colony+
                        fta_wto+
                        #log(exporter_remote)+
                        #log(importer_remote)+
                        #LSBCI_2+
                        #+DCon+
                        #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                        log(dist)+OrigCode+DestCode, family = quasipoisson(link="log"), data = cdata_C16)

QPOI_2016_z_db$coefficients[2] <- exp(as.numeric(QPOI_2016_z_db$coefficients[2]))-1
QPOI_2016_z_db$coefficients[2]

QPOI_2016_z_db$coefficients[3] <- exp(as.numeric(QPOI_2016_z_db$coefficients[3]))-1
QPOI_2016_z_db$coefficients[3]

QPOI_2016_z_db$coefficients[4] <- exp(as.numeric(QPOI_2016_z_db$coefficients[4]))-1
QPOI_2016_z_db$coefficients[4]

QPOI_2016_z_db_A$coefficients[5] <- exp(as.numeric(QPOI_2016_z_db$coefficients[5]))-1
QPOI_2016_z_db$coefficients[5]


QPOI_2016_z_db_A <- glm(TradeFlow ~ 
                        #log(exporter_pop)+
                        #log(importer_pop)+
                        #deg16_D+
                        #deg16_O+
                        #log(exporter_gdp.pc)+
                        #log(importer_gdp.pc)+
                        #log(exporter_gdp)+
                        #log(importer_gdp)+
                        contig+
                        comlang+
                        colony+
                        fta_wto+
                        #log(exporter_remote)+
                        #log(importer_remote)+
                        #LSBCI_2+
                          #+ComDir+
                        #+DCon+
                        #ComDir+TEU_D+TEU_O+
                          log(MaxShipSize)+
                          Maxmincarriers+
                          numTrans+
                        log(dist)+OrigCode+DestCode, family = quasipoisson(link="log"), data = cdata_C16)

QPOI_2016_z_db_A$coefficients[2] <- exp(as.numeric(QPOI_2016_z_db_A$coefficients[2]))-1
QPOI_2016_z_db_A$coefficients[2]

QPOI_2016_z_db_A$coefficients[3] <- exp(as.numeric(QPOI_2016_z_db_A$coefficients[3]))-1
QPOI_2016_z_db_A$coefficients[3]

QPOI_2016_z_db_A$coefficients[4] <- exp(as.numeric(QPOI_2016_z_db_A$coefficients[4]))-1
QPOI_2016_z_db_A$coefficients[4]

QPOI_2016_z_db_A$coefficients[5] <- exp(as.numeric(QPOI_2016_z_db_A$coefficients[5]))-1
QPOI_2016_z_db_A$coefficients[5]

QPOI_2016_z_db_A$coefficients[6] #ship

QPOI_2016_z_db_A$coefficients[7] <- exp(as.numeric(QPOI_2016_z_db_A$coefficients[7]))-1
QPOI_2016_z_db_A$coefficients[7]

QPOI_2016_z_db_A$coefficients[8] <- exp(as.numeric(QPOI_2016_z_db_A$coefficients[8]))-1
QPOI_2016_z_db_A$coefficients[8]



vif(QPOI_2016_z_db_A) # variance inflation factors 
sqrt(vif(QPOI_2016_z_db_A)) > 2 # problem?



summary(QPOI_2016_z_db)

QPOI_2016_nz <- glm(TradeFlow ~ 
                      #log(exporter_pop)+
                      #log(importer_pop)+
                      log(exporter_gdp.pc)+
                      log(importer_gdp.pc)+
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      contig+
                      comlang+
                      colony+
                      fta_wto+
                      log(exporter_remote)+
                      log(importer_remote)+
                      #LSBCI_2+
                      #+DCon+
                      #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                      log(dist), family = quasipoisson(link="log"), data = cdata_C16_nz)

#cORRECT COEFFICIENTS
QPOI_2016_nz$coefficients[6] <- exp(as.numeric(QPOI_2016_nz$coefficients[6]))-1
QPOI_2016_nz$coefficients[6]

QPOI_2016_nz$coefficients[7] <- exp(as.numeric(QPOI_2016_nz$coefficients[7]))-1
QPOI_2016_nz$coefficients[7]

QPOI_2016_nz$coefficients[8] <- exp(as.numeric(QPOI_2016_nz$coefficients[8]))-1
QPOI_2016_nz$coefficients[8]

QPOI_2016_nz$coefficients[9] <- exp(as.numeric(QPOI_2016_nz$coefficients[9]))-1
QPOI_2016_nz$coefficients[9]

summary(QPOI_2016_z)
summary(QPOI_2016_nz)


cdata_C16_nz$QPOI_2016_nz <- fitted(QPOI_2016_nz)

max(cdata_C16_nz$QPOI_2016_nz)
cdata_C16$QPOI_2016_z <- fitted(QPOI_2016_z)


CalcRMSE(cdata_C16_nz$TradeFlow,cdata_C16_nz$QPOI_2016_nz)    #5,274,900,403
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$QPOI_2016_z)           #4,838,178,632

CalcRMSE(cdata_C16_nz$TradeFlow,exp(cdata_C16_nz$OLS_2016_nz))    #10,921,175,387
CalcRMSE(cdata_C16$TradeFlow,exp(cdata_C16$OLS_2016_z))         #1,406,650,56,691


# POI_2006 <- glm(TradeFlow ~ 
#                   #log(exporter_pop)+
#                   #log(importer_pop)+
#                   log(exporter_gdp.pc)+
#                   log(importer_gdp.pc)+
#                   log(exporter_gdp)+
#                   log(importer_gdp)+
#                   contig+
#                   comlang+
#                   colony+
#                   fta_wto+
#                   log(exporter_remote)+
#                   log(importer_remote)+
#                   #LSBCI_2+
#                   #+DCon+
#                   #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
#                   log(dist), family = poisson(link="log"), data = cdata_C6)
# 
# QPOI_2006 <- glm(TradeFlow ~ 
#                    #log(exporter_pop)+
#                    #log(importer_pop)+
#                    log(exporter_gdp.pc)+
#                    log(importer_gdp.pc)+
#                    log(exporter_gdp)+
#                    log(importer_gdp)+
#                    contig+
#                    comlang+
#                    colony+
#                    fta_wto+
#                    log(exporter_remote)+
#                    log(importer_remote)+
#                    #LSBCI_2+
#                    #+DCon+
#                    #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
#                    log(dist), family = quasipoisson(link="log"), data = cdata_C6)
# 
# summary(POI_2006)

# #Negative binomial
# uncosim16_nb1 <- glm.nb(log(TradeFlow+1) ~ 
#                       #log(exporter_pop)+
#                       #log(importer_pop)+
#                       log(exporter_gdp.pc)+
#                       log(importer_gdp.pc)+
#                       log(exporter_gdp)+
#                       log(importer_gdp)+
#                       contig+
#                       comlang+
#                       colony+
#                       fta_wto+
#                       #LSBCI_2+
#                       #+DCon+
#                       #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
#                       log(dist),maxit = 100, data = cdata16)
# summary(uncosim16_nb1)



QPOI_2016bis <- glm(TradeFlow ~ 
                      #log(exporter_pop)+
                      #log(importer_pop)+
                      log(exporter_gdp.pc)+
                      log(importer_gdp.pc)+
                      log(exporter_gdp)+
                      log(importer_gdp)+
                      contig+
                      comlang+
                      colony+
                      fta_wto+
                      log(importer_gdp)+
                      log(exporter_remote)+
                      log(importer_remote)+
                      deg_out16_O+
                      deg_out16_D+
                      #LSBCI_2+
                      #+DCon+
                      #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                      log(dist), family = quasipoisson(link=log), data = cdata_C16)
QPOI_2016bis_db <- glm(TradeFlow ~ 
                         #log(exporter_pop)+
                         #log(importer_pop)+
                         #log(exporter_gdp.pc)+
                         #log(importer_gdp.pc)+
                         #log(exporter_gdp)+
                         #log(importer_gdp)+
                         contig+
                         comlang+
                         colony+
                         fta_wto+
                         log(importer_gdp)+
                         #log(exporter_remote)+
                         #log(importer_remote)+
                         #deg_out16_O+
                         #deg_out16_D+
                         #LSBCI_2+
                         #+DCon+
                         #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                         log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)

summary(QPOI_2016bis_db)
cor(cdata_C16$deg16_O,cdata_C16$deg16_D)

QPOI_2016bisS_db <- glm(TradeFlow ~ 
                          #log(exporter_pop)+
                          #log(importer_pop)+
                          #log(exporter_gdp.pc)+
                          #log(importer_gdp.pc)+
                          #log(exporter_gdp)+
                          #log(importer_gdp)+
                          contig+
                          comlang+
                          colony+
                          fta_wto+
                          #log(importer_gdp)+
                          #log(exporter_remote)+
                          #log(importer_remote)+
                          #deg16_O+
                          #deg16_D+
                          LSBCI_2+
                          #+DCon+
                          #ComDir+TEU_D+TEU_O
                          #+MaxShipSize+
                          #+Maxmincarriers+
                          log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)

QPOI_2016bisSS_db <- glm(TradeFlow ~ 
                           #log(exporter_pop)+
                           #log(importer_pop)+
                           #log(exporter_gdp.pc)+
                           #log(importer_gdp.pc)+
                           #log(exporter_gdp)+
                           #log(importer_gdp)+
                           contig+
                           comlang+
                           colony+
                           fta_wto+
                           log(importer_gdp)+
                           log(exporter_remote)+
                           log(importer_remote)+
                           #deg16_D+
                           #LSBCI_2+
                           #+DCon+
                           #ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                           log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)

QPOI_2016bis2 <- glm(TradeFlow ~ 
                       #log(exporter_pop)+
                       #log(importer_pop)+
                       log(exporter_gdp.pc)+
                       log(importer_gdp.pc)+
                       log(exporter_gdp)+
                       log(importer_gdp)+
                       contig+
                       comlang+
                       colony+
                       fta_wto+
                       log(importer_gdp)+
                       log(exporter_remote)+
                       log(importer_remote)+
                       #LSBCI_2+
                       #+DCon+
                       #ComDir+TEU_D+TEU_O+MaxShipSize+
                       Maxmincarriers+
                       log(dist), family = quasipoisson(link=log), data = cdata_C16)

QPOI_2016bis2_db <- glm(TradeFlow ~ 
                          #log(exporter_pop)+
                          #log(importer_pop)+
                          #log(exporter_gdp.pc)+
                          #log(importer_gdp.pc)+
                          #log(exporter_gdp)+
                          #log(importer_gdp)+
                          contig+
                          comlang+
                          colony+
                          fta_wto+
                          #log(importer_gdp)+
                          #log(exporter_remote)+
                          #log(importer_remote)+
                          #LSBCI_2+
                          #+DCon+
                          #ComDir+TEU_D+TEU_O+MaxShipSize+
                          Maxmincarriers+
                          log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)


QPOI_2016bis3 <- glm(TradeFlow ~ 
                       #log(exporter_pop)+
                       #log(importer_pop)+
                       log(exporter_gdp.pc)+
                       log(importer_gdp.pc)+
                       log(exporter_gdp)+
                       log(importer_gdp)+
                       contig+
                       comlang+
                       colony+
                       fta_wto+
                       log(importer_gdp)+
                       log(exporter_remote)+
                       log(importer_remote)+
                       #LSBCI_2+
                       #+DCon+
                       ComDir+
                       #TEU_D+TEU_O+MaxShipSize+
                       #Maxmincarriers+
                       log(dist), family = quasipoisson(link=log), data = cdata_C16)

QPOI_2016bis3_db <- glm(TradeFlow ~ 
                          #log(exporter_pop)+
                          #log(importer_pop)+
                          #log(exporter_gdp.pc)+
                          #log(importer_gdp.pc)+
                          #log(exporter_gdp)+
                          #log(importer_gdp)+
                          contig+
                          comlang+
                          colony+
                          fta_wto+
                          #log(importer_gdp)+
                          #log(exporter_remote)+
                          #log(importer_remote)+
                          #LSBCI_2+
                          #+DCon+
                          ComDir+
                          #TEU_D+TEU_O+MaxShipSize+
                          #Maxmincarriers+
                          log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)


summary(POI_2016)

QPOI_2016bis4 <- glm(TradeFlow ~ 
                       #log(exporter_pop)+
                       #log(importer_pop)+
                       log(exporter_gdp.pc)+
                       log(importer_gdp.pc)+
                       log(exporter_gdp)+
                       log(importer_gdp)+
                       contig+
                       comlang+
                       colony+
                       fta_wto+
                       log(importer_gdp)+
                       log(exporter_remote)+
                       log(importer_remote)+
                       #LSBCI_2+
                       #+DCon+
                       #ComDir+
                       #TEU_D+TEU_O+
                       log(MaxShipSize)+
                       #Maxmincarriers+
                       log(dist), family = quasipoisson(link=log), data = cdata_C16)

QPOI_2016bis4_db <- glm(TradeFlow ~ 
                          #log(exporter_pop)+
                          #log(importer_pop)+
                          #log(exporter_gdp.pc)+
                          #log(importer_gdp.pc)+
                          #log(exporter_gdp)+
                          #log(importer_gdp)+
                          contig+
                          comlang+
                          colony+
                          fta_wto+
                          #log(importer_gdp)+
                          #log(exporter_remote)+
                          #log(importer_remote)+
                          #LSBCI_2+
                          #+DCon+
                          #ComDir+
                          #TEU_D+TEU_O+
                          log(MaxShipSize)+
                          #Maxmincarriers+
                          log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)


QPOI_2016bis5 <- glm(TradeFlow ~ 
                       #log(exporter_pop)+
                       #log(importer_pop)+
                       log(exporter_gdp.pc)+
                       log(importer_gdp.pc)+
                       log(exporter_gdp)+
                       log(importer_gdp)+
                       contig+
                       comlang+
                       colony+
                       fta_wto+
                       log(importer_gdp)+
                       log(exporter_remote)+
                       log(importer_remote)+
                       #LSBCI_2+
                       #+DCon+
                       #ComDir+
                       numTrans+
                       #TEU_D+TEU_O+
                       #log(MaxShipSize)+
                       #Maxmincarriers+
                       log(dist), family = quasipoisson(link=log), data = cdata_C16)

QPOI_2016bis5_db <- glm(TradeFlow ~ 
                          #log(exporter_pop)+
                          #log(importer_pop)+
                          #log(exporter_gdp.pc)+
                          #log(importer_gdp.pc)+
                          #log(exporter_gdp)+
                          #log(importer_gdp)+
                          contig+
                          comlang+
                          colony+
                          fta_wto+
                          #log(importer_gdp)+
                          #log(exporter_remote)+
                          #log(importer_remote)+
                          #LSBCI_2+
                          #+DCon+
                          #ComDir+
                          numTrans+
                          #TEU_D+TEU_O+
                          #log(MaxShipSize)+
                          #Maxmincarriers+
                          log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)

QPOI_2016bis6 <- glm(TradeFlow ~ 
                       #log(exporter_pop)+
                       #log(importer_pop)+
                       log(exporter_gdp.pc)+
                       log(importer_gdp.pc)+
                       log(exporter_gdp)+
                       log(importer_gdp)+
                       contig+
                       comlang+
                       colony+
                       fta_wto+
                       #log(importer_gdp)+
                       log(exporter_remote)+
                       log(importer_remote)+
                       #LSBCI_2+
                       DCon+
                       #ComDir+
                       #numTrans+
                       #TEU_D+TEU_O+
                       #log(MaxShipSize)+
                       #Maxmincarriers+
                       log(dist), family = quasipoisson(link=log), data = cdata_C16)



QPOI_2016bis6_db <- glm(TradeFlow ~ 
                          #log(exporter_pop)+
                          #log(importer_pop)+
                          #log(exporter_gdp.pc)+
                          #log(importer_gdp.pc)+
                          #log(exporter_gdp)+
                          #log(importer_gdp)+
                          contig+
                          comlang+
                          colony+
                          fta_wto+
                          #log(importer_gdp)+
                          #log(exporter_remote)+
                          #log(importer_remote)+
                          #LSBCI_2+
                          DCon+
                          #ComDir+
                          #numTrans+
                          #TEU_D+TEU_O+
                          #log(MaxShipSize)+
                          #Maxmincarriers+
                          log(dist)+OrigCode+DestCode, family = quasipoisson(link=log), data = cdata_C16)


#YEAR AS FACOTOR 
cdata_C$Year <- as.factor(cdata_C$Year)
cdata_C_nz$Year <- as.factor(cdata_C_nz$Year)


str(cdata_C)
str(cdata_C_nz)

QPOI_all_z <- glm(TradeFlow ~ 
                    #log(exporter_pop)+
                    #log(importer_pop)+
                    log(exporter_gdp.pc)+
                    log(importer_gdp.pc)+
                    log(exporter_gdp)+
                    log(importer_gdp)+
                    #contig+
                    #comlang+
                    #colony+
                    fta_wto+
                    log(exporter_remote)+
                    log(importer_remote)+
                    #LSBCI_2+
                    #+DCon+
                    #ComDir+
                    #numTrans+
                    #TEU_D+TEU_O+
                    #deg_out16_D+
                    #deg_out16_O+
                    #log(MaxShipSize+1)+
                    #Maxmincarriers+
                    Year
                  #OrigCode+DestCode+
                  #log(dist)
                  , family = quasipoisson(link=log), data = cdata_C)

# #CORRECT COEFFICIENTS
# QPOI_all_z$coefficients[6] <- exp(as.numeric(QPOI_all_z$coefficients[6])-1)
# QPOI_all_z$coefficients[6]


QPOI_all_z_con <- glm(TradeFlow ~ 
                  #log(exporter_pop)+
                  #log(importer_pop)+
                  log(exporter_gdp.pc)+
                  log(importer_gdp.pc)+
                  log(exporter_gdp)+
                  log(importer_gdp)+
                  #contig+
                  #comlang+
                  #colony+
                  fta_wto+
                  log(exporter_remote)+
                  log(importer_remote)+
                  #LSBCI_2+
                  #+DCon+
                  #ComDir+
                  numTrans+
                  #TEU_D+TEU_O+
                    deg_out16_D+
                    deg_out16_O+
                  log(MaxShipSize+1)+
                  Maxmincarriers+
                  Year
                  #OrigCode+DestCode+
                  #log(dist)
                  , family = quasipoisson(link=log), data = cdata_C)

summary(QPOI_all_z_con)
# Replace change coefficients 
QPOI_all_z_con$coefficients[13] <- exp(0.0385681)-1
QPOI_all_z_con$coefficients[13]

QPOI_all_z_con$coefficients[11] <- exp(0.0715983)-1
QPOI_all_z_con$coefficients[11]

QPOI_all_z_con$coefficients[10] <- exp(-0.002140064)-1
QPOI_all_z_con$coefficients[10]

QPOI_all_z_con$coefficients[9] <- exp(-0.9861109)-1
QPOI_all_z_con$coefficients[9]

QPOI_all_z_con$coefficients[6] <- exp(0.6603957)-1
QPOI_all_z_con$coefficients[6]

QPOI_all_z_con$coefficients[12]

# Evaluate Collinearity
vif(QPOI_all_z) # variance inflation factors 
sqrt(vif(QPOI_all_z)) > 2 # problem?

summary(QPOI_all)

QPOI_all_nz <- glm(TradeFlow ~ 
                         #log(exporter_pop)+
                         #log(importer_pop)+
                         log(exporter_gdp.pc)+
                         log(importer_gdp.pc)+
                         log(exporter_gdp)+
                         log(importer_gdp)+
                         #contig+
                         #comlang+
                         #colony+
                         fta_wto+
                         log(exporter_remote)+
                         log(importer_remote)+
                         #LSBCI_2+
                         #+DCon+
                         #ComDir+
                         #deg_out16_D+
                         #deg_out16_O+
                         #numTrans+
                         #TEU_D+TEU_O+
                         #log(MaxShipSize+1)+
                         #Maxmincarriers+
                         Year
                       #OrigCode+DestCode+
                       #log(dist)
                       , family = quasipoisson(link=log), data = cdata_C_nz)
QPOI_all_nz_con <- glm(TradeFlow ~ 
                    #log(exporter_pop)+
                    #log(importer_pop)+
                    log(exporter_gdp.pc)+
                    log(importer_gdp.pc)+
                    log(exporter_gdp)+
                    log(importer_gdp)+
                    #contig+
                    #comlang+
                    #colony+
                    fta_wto+
                    log(exporter_remote)+
                    log(importer_remote)+
                    #LSBCI_2+
                    #+DCon+
                    #ComDir+
                     deg_out16_D+
                     deg_out16_O+
                    numTrans+
                    #TEU_D+TEU_O+
                    log(MaxShipSize+1)+
                    Maxmincarriers+
                    Year
                    #OrigCode+DestCode+
                    #log(dist)
                   , family = quasipoisson(link=log), data = cdata_C_nz)

summary(QPOI_all)

str(cdata_C_nz)
# Evaluate Collinearity
vif(QPOI_all) # variance inflation factors 
sqrt(vif(QPOI_all_nz)) > 2 # problem?

# QPOI_all_fixed <- glm(TradeFlow ~ 
#                         #log(exporter_pop)+
#                         #log(importer_pop)+
#                         log(exporter_gdp.pc)+
#                         log(importer_gdp.pc)+
#                         log(exporter_gdp)+
#                         log(importer_gdp)+
#                         contig+
#                         comlang+
#                         colony+
#                         fta_wto+
#                         log(exporter_remote)+
#                         log(importer_remote)+
#                         #LSBCI_2+
#                         #+DCon+
#                         #ComDir+
#                         #numTrans+
#                         #TEU_D+TEU_O+
#                         #log(MaxShipSize)+
#                         #Maxmincarriers+
#                         Year+
#                         OrigCode+DestCode+
#                         log(dist), family = quasipoisson(link=log), data = cdata_C)

summary(QPOI_all_fixed)
OLS_all_year_z <- lmrob(log(TradeFlow+1) ~ 
                              #log(exporter_pop)+
                              #log(importer_pop)+
                              log(exporter_gdp.pc)+
                              log(importer_gdp.pc)+
                              log(exporter_gdp)+
                              log(importer_gdp)+
                              #deg_out16_D+
                              #deg_out16_O+
                              #contig+
                              #comlang+
                              #colony+
                              fta_wto+
                              log(exporter_remote)+
                              log(importer_remote)+
                              #LSBCI_2+
                              #+DCon+
                              #ComDir+
                              numTrans+
                              #TEU_D+TEU_O+
                              #log(MaxShipSize+1)+
                              #Maxmincarriers+
                              Year
                            , data = cdata_C)

OLS_all_year_z_con <- lmrob(log(TradeFlow+1) ~ 
                     #log(exporter_pop)+
                     #log(importer_pop)+
                     log(exporter_gdp.pc)+
                     log(importer_gdp.pc)+
                     log(exporter_gdp)+
                     log(importer_gdp)+
                       deg_out16_D+
                       deg_out16_O+
                     #contig+
                     #comlang+
                     #colony+
                     fta_wto+
                     log(exporter_remote)+
                     log(importer_remote)+
                     #LSBCI_2+
                     #+DCon+
                     #ComDir+
                     numTrans+
                     #TEU_D+TEU_O+
                     log(MaxShipSize+1)+
                     Maxmincarriers+
                     Year
                     , data = cdata_C)

OLS_all_year_nz_con <- lmrob(log(TradeFlow) ~ 
                          #log(exporter_pop)+
                          #log(importer_pop)+
                          log(exporter_gdp.pc)+
                          log(importer_gdp.pc)+
                          log(exporter_gdp)+
                          log(importer_gdp)+
                           deg_out16_D+
                           deg_out16_O+
                          #contig+
                          #comlang+
                          #colony+
                          fta_wto+
                          log(exporter_remote)+
                          log(importer_remote)+
                          #LSBCI_2+
                          #+DCon+
                          #ComDir+
                          numTrans+
                          #TEU_D+TEU_O+
                          log(MaxShipSize+1)+
                          Maxmincarriers+
                          Year
                          , data = cdata_C_nz)

OLS_all_year_nz <- lmrob(log(TradeFlow) ~ 
                               #log(exporter_pop)+
                               #log(importer_pop)+
                               log(exporter_gdp.pc)+
                               log(importer_gdp.pc)+
                               log(exporter_gdp)+
                               log(importer_gdp)+
                               #deg_out16_D+
                               #deg_out16_O+
                               #contig+
                               #comlang+
                               #colony+
                               fta_wto+
                               log(exporter_remote)+
                               log(importer_remote)+
                               #LSBCI_2+
                               #+DCon+
                               #ComDir+
                               #numTrans+
                               #TEU_D+TEU_O+
                               #log(MaxShipSize+1)+
                               #Maxmincarriers+
                               Year
                             , data = cdata_C_nz)
#CORRECTION coefficients
OLS_all_year_nz$coefficients[6] <- exp(as.numeric(OLS_all_year_nz$coefficients[6]))-1

OLS_all_year_nz$coefficients[6]

# OLS_all_fixed <- lm(log(TradeFlow+1) ~ 
#                       #log(exporter_pop)+
#                       #log(importer_pop)+
#                       log(exporter_gdp.pc)+
#                       log(importer_gdp.pc)+
#                       log(exporter_gdp)+
#                       log(importer_gdp)+
#                       contig+
#                       comlang+
#                       colony+
#                       fta_wto+
#                       log(exporter_remote)+
#                       log(importer_remote)+
#                       #LSBCI_2+
#                       #+DCon+
#                       #ComDir+
#                       #numTrans+
#                       #TEU_D+TEU_O+
#                       #log(MaxShipSize)+
#                       #Maxmincarriers+
#                       Year+
#                       OrigCode+DestCode+
#                       log(dist), data = cdata_C)



cor(log(cdata_C16$importer_remote), log(cdata_C16$TradeFlow +1))

summary(QPOI_all)
summary(QPOI_all_fixed)
summary(OLS_all)


#QLM MARITIME



# pchisq(POI_2016$deviance, df=POI_2016$df.residual, lower.tail=FALSE)
# POI_2016$deviance
# POI_2016$df.residual

#Testing
cdata_C16$fitted_OLS1 <- fitted(OLS_2016)

cdata_C16$fitted_OLS1b <- fitted(OLS_2016b)

cdata_C16$fitted_OLS1c <- fitted(OLS_2016c)

#C_data
cdata_C16$fitted_p1 <- fitted(POI_2016)

cdata_C16$fitted_OLS16_z <- fitted(OLS_2016_z)
cdata_C16_nz$fitted_OLS16_nz <- fitted(OLS_2016_nz)

cdata_C16$fitted_qp_z <- fitted(QPOI_2016_z)
cdata_C16_nz$fitted_qp_nz <- fitted(QPOI_2016_nz)

#RMSE
CalcRMSE(cdata_C16$TradeFlow,exp(cdata_C16$fitted_OLS16_z))       #3.87
CalcRMSE(cdata_C16_nz$TradeFlow,exp(cdata_C16_nz$fitted_OLS16_nz)) #2.508

CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_qp_z)       #4,838,178,630

CalcRSquared(cdata_C16$TradeFlow,cdata_C16$fitted_qp_z)
CalcRSquared(cdata_C16_nz$TradeFlow,cdata_C16_nz$fitted_qp_nz)
CalcRMSE(cdata_C16_nz$TradeFlow,cdata_C16_nz$fitted_qp_nz)  #5,274,900,402


OLStest<-(cdata_C16$TradeFlow-cdata_C16$fitted_OLS1)
GAUtest<-(cdata_C16$TradeFlow-cdata_C16$fitted_OLS1b)
GAUtest2<-(cdata_C16$TradeFlow-exp(cdata_C16$fitted_OLS1c))
POItest<-(cdata_C16$TradeFlow-cdata_C16$fitted_p1)
QPOItest<-(cdata_C16$TradeFlow-cdata_C16$fitted_qp1)

summary(OLStest)
summary(GAUtest)
summary(GAUtest2)
summary(POItest)
summary(QPOItest)

hist(log(cdata16$TradeFlow+1))

#R2
CalcRSquared(cdata_C16$TradeFlow,exp(cdata_C16$fitted_OLS1))    #0.151
CalcRSquared(log(cdata_C16$TradeFlow+1),cdata_C16$fitted_OLS1)  #0.665

CalcRSquared(cdata_C16$TradeFlow,cdata_C16$fitted_OLS1b)        #0.684
CalcRSquared(cdata_C16$TradeFlow,exp(cdata_C16$fitted_OLS1c) )  #0.151
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$fitted_p1)           #0.523

#RSME
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_OLS1)   #8,196,740,398 # OLS standard
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_OLS1b)  #4,581,976,729 # GLM Gausian log link
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_OLS1c)  #8,196,740,398
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$fitted_p1)     #5,644,892,079




#Quasipoisson
QPOI_2016 <- glm(TradeFlow ~
                   #log(exporter_pop)+
                   #log(importer_pop)+
                   log(exporter_gdp.pc)+
                   log(importer_gdp.pc)+
                   log(exporter_gdp)+
                   log(importer_gdp)+
                   log(exporter_remote)+
                   log(importer_remote)+
                   contig+
                   comlang+
                   colony+
                   fta_wto+
                   #LSBCI_2+
                   log(importer_gdp)+
                   #+DCon+ComDir+TEU_D+TEU_O+MaxShipSize+Maxmincarriers+
                   log(dist), family = quasipoisson(link=log), data = cdata_C16)

# pchisq(QPOI_2016$deviance, df=QPOI_2016$df.residual, lower.tail=FALSE)
# QPOI_2016$deviance
# QPOI_2016$df.residual

summary(QPOI_2016)

# uncosim16_nb1 <- glm.nb(TradeFlow ~
#                     log(exporter_pop)+
#                     log(importer_pop)+
#                     log(exporter_gdp)+
#                     log(importer_gdp)+
#                     log(importer_gdp)+
#                       contig+
#                       #colony+
#                       #comcol+
#                       #comlang+
#                       fta_wto+
#                     log(dist),maxit = 100,link = log, data = cdata16)
# hist(cdata16$fta_wto)

summary(OLS_2016)
summary(POI_2016)
summary(QPOI_2016)
summary(uncosim16_nb1)


## ---- COEFPLOTS ----

install.packages("coefplot")
library(coefplot)
coefplot16<-coefplot(uncosim16_OLS,  intercept=FALSE)
coefplot6<-coefplot(uncosim6_OLS,intercept=FALSE)
coefplot16
coefplot6

coefplot(uncosim6_OLS,intercept=FALSE)
coefplot.glm(uncosim6_OLS,intercept=FALSE)

library(ggthemes)

multiplot(OLS_2016_nz,QPOI_2016_nz,intercept=FALSE,sort ="magnitude",decreasing =TRUE)

multiplot(uncosim6_OLS,uncosim8_OLS,uncosim10_OLS,uncosim12_OLS,uncosim14_OLS,uncosim16_OLS,intercept=FALSE,decreasing =TRUE)


((1-exp(-0.01))*100)-1 #percent =0.009

#QPOI_all_z,QPOI_all_nz,OLS_all_year_z,OLS_all_year_nz

#Db qpoisson
# QPOI_2016_z_db,QPOI_2016_z_db_A
double_PQML_con<-multiplot(QPOI_2016_z_db,QPOI_2016_z_db_A,intercept=FALSE,names = c("PQML\nFixed Effect","PQML+\nFixed Effect"),coefficients=c("deg_out16_O","deg_out16_D","numTrans","log(MaxShipSize)", "Maxmincarriers","log(dist)","comlang1","colony1","log(importer_remote)","log(exporter_remote)","contig1","log(importer_gdp)","log(importer_gdp.pc)","log(exporter_gdp)","log(exporter_gdp.pc)","fta_wto1"),sort ="magnitude",decreasing =TRUE,pointSize = 3,newNames=c(numTrans="Number of transshipments", deg_out16_O = "Exporter out-degree", Maxmincarriers ="Max min carriers",deg_out16_D = "Importer out-degree", "log(dist)" ="Log Maritime distance", colony1 ="Colonial-tie dummy", comlang1 ="Common Language dummy", "log(importer_gdp.pc)" = "Log Importer GDP pc.", "log(exporter_gdp.pc)" = "Log Exporter GDP pc.", fta_wto1 = "Free Trade Agreement dummy", "log(exporter_remote)"="Log Exporter remoteness","log(importer_remote)"="Log Importer remoteness", contig1 ="Contiguity dummy", "log(importer_gdp)" ="Log Importer GDP","log(exporter_gdp)" ="Log Exporter GDP","log(MaxShipSize)"="Log Max Ship Size"  ))
p_double_PQML_con<-double_PQML_con +
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  geom_hline(yintercept=11.5, colour='white')+
  geom_hline(yintercept=12.5, colour='white')+
  geom_hline(yintercept=13.5, colour='white')+
  geom_hline(yintercept=14.5, colour='white')+
  geom_hline(yintercept=15.5, colour='white')+
  geom_hline(yintercept=16.5, colour='white')+
  # geom_text(aes(x=1,y=16, label ="hello"), size= 5,colour='black')+
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.3),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"),
        axis.text = element_text(size=12),
        axis.title = element_text(size=12),
        axis.text.x = element_text(angle = 90, hjust = 1))+
  scale_x_continuous(breaks = c(-2,-1.75,-1.5,-1.25,-1,-0.75,-0.5,-0.25,0,0.25,0.5,0.75,1,1.25,1.5,6.5))+
  labs(title="PQML with Exporter and Importer Fixed Effects",          
       subtitle="Poisson Quasi-Maximum Likelihood with exporter and importer fixed\neffects for trade in 2016. Observations: 12,432. Log-log relationships\nand dummies which require different interpretations.",
       caption = "Note: Results statistically significant for alpha = 0.01")
p_double_PQML_con

#export
tiff("p_double_PQML_con_ULTIMO.tiff", width = 10, height = 7, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_double_PQML_con)
dev.off()

#Time coeffs non con
OLS_vs_PQML_year<-multiplot(QPOI_all_z,OLS_all_year_nz,intercept=FALSE,names = c("PQML Time","OLS Time"),coefficients=c("deg_out16_O","deg_out16_D","numTrans","log(MaxShipSize + 1)", "Maxmincarriers","log(dist)","comlang1","log(importer_remote)","log(exporter_remote)","contig1","log(importer_gdp)","log(importer_gdp.pc)","log(exporter_gdp)","log(exporter_gdp.pc)","fta_wto1"),sort ="magnitude",decreasing =TRUE,pointSize = 3,newNames=c(numTrans="Number of transshipments", deg_out16_O = "Exporter out-degree", Maxmincarriers ="Max min carriers",deg_out16_D = "Importer out-degree", "log(dist)" ="Log Maritime distance", colony1 ="Colonial-tie dummy", comlang1 ="Common Language dummy", "log(importer_gdp.pc)" = "Log Importer GDP pc.", "log(exporter_gdp.pc)" = "Log Exporter GDP pc.", fta_wto1 = "Free Trade Agreement dummy", "log(exporter_remote)"="Log Exporter remoteness","log(importer_remote)"="Log Importer remoteness", contig1 ="Contiguity dummy", "log(importer_gdp)" ="Log Importer GDP","log(exporter_gdp)" ="Log Exporter GDP","log(MaxShipSize + 1)"="Log Max Ship Size"  ))
p_OLS_vs_PQML_year<-OLS_vs_PQML_year +
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  geom_hline(yintercept=11.5, colour='white')+
  geom_hline(yintercept=12.5, colour='white')+
  geom_hline(yintercept=13.5, colour='white')+
  geom_hline(yintercept=14.5, colour='white')+
  geom_hline(yintercept=15.5, colour='white')+
  geom_hline(yintercept=16.5, colour='white')+
  # geom_text(aes(x=1,y=16, label ="hello"), size= 5,colour='black')+
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.3),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"),
        axis.text = element_text(size=12),
        axis.title = element_text(size=12),
        axis.text.x = element_text(angle = 90, hjust = 1))+
  scale_x_continuous(breaks = c(-2,-1.75,-1.5,-1.25,-1,-0.75,-0.5,-0.25,0,0.25,0.5,0.75,1,1.25,1.5,6.5))+
  labs(title="PQML and OLS with Time Fixed Effects",          
       subtitle="PQML and OLS with time fixed effects from 2006 to 2016 estimating trade. PQML\nObservations: 122,380 including zeros, OLS excluding zeros: 102,452. Log-log,\nrelationships and dummies which require different interpretations.",
       caption = "Note: Results statistically significant for alpha = 0.01\nNo data for 2007")

p_OLS_vs_PQML_year

#export
tiff("p_OLS_vs_PQML_year_test.tiff", width = 10, height = 8, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_OLS_vs_PQML_year)
dev.off()

## ---- TIME FIXED EFFECT Time coeffs PQML connectivity ULTIMO----
PQLM_year_con<-multiplot(QPOI_all_z,QPOI_all_z_con,intercept=FALSE,names = c("PQML Time","PQML Time +"),coefficients=c("deg_out16_O","deg_out16_D","numTrans","log(MaxShipSize + 1)", "Maxmincarriers","log(dist)","comlang1","log(importer_remote)","log(exporter_remote)","contig1","log(importer_gdp)","log(importer_gdp.pc)","log(exporter_gdp)","log(exporter_gdp.pc)","fta_wto1"),sort ="magnitude",decreasing =TRUE,pointSize = 3,newNames=c(numTrans="Number of transshipments", deg_out16_O = "Exporter out-degree", Maxmincarriers ="Max min carriers",deg_out16_D = "Importer out-degree", "log(dist)" ="Log Maritime distance", colony1 ="Colonial-tie dummy", comlang1 ="Common Language dummy", "log(importer_gdp.pc)" = "Log Importer GDP pc.", "log(exporter_gdp.pc)" = "Log Exporter GDP pc.", fta_wto1 = "Free Trade Agreement dummy", "log(exporter_remote)"="Log Exporter remoteness","log(importer_remote)"="Log Importer remoteness", contig1 ="Contiguity dummy", "log(importer_gdp)" ="Log Importer GDP","log(exporter_gdp)" ="Log Exporter GDP","log(MaxShipSize + 1)"="Log Max Ship Size"  ))
p_PQLM_year_con<-PQLM_year_con +
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  geom_hline(yintercept=11.5, colour='white')+
  geom_hline(yintercept=12.5, colour='white')+
  geom_hline(yintercept=13.5, colour='white')+
  geom_hline(yintercept=14.5, colour='white')+
  geom_hline(yintercept=15.5, colour='white')+
  geom_hline(yintercept=16.5, colour='white')+
  # geom_text(aes(x=1,y=16, label ="hello"), size= 5,colour='black')+
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.3),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        axis.text=element_text(size=12),
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"),
        axis.text.x = element_text(angle = 90, hjust = 1))+
  scale_x_continuous(breaks = c(-2,-1.75,-1.5,-1.25,-1,-0.75,-0.5,-0.25,0,0.25,0.5,0.75,1,1.25,1.5,1.75,2))+
  labs(title="PQML with Time Fixed Effects and Connectivity Variables",          
       subtitle="PQML with time fixed effects from 2006 to 2016 and connectivity data.Coefficients\n estimating trade. PQML Observations: 122,380 including zeros; A combination\nof log-log, log-lin relations and dummies which require different interpretations.",
       caption = "Note: Results statistically significant for alpha = 0.01\nNo data for 2007")

p_PQLM_year_con

#export
tiff("p_PQLM_year_con_ULTIMO.tiff", width = 10, height = 8, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_PQLM_year_con)
dev.off()

## ---- 0 vs not PQML ULTIMO----

PQML_vs_PQML_A<-multiplot(QPOI_2016_z,PQML_2016_z_A,intercept=FALSE,names = c("PQML","PQML+"),sort ="magnitude",decreasing =TRUE,pointSize = 2,newNames=c(numTrans="Number of transshipments", deg_out16_O = "Exporter out-degree", "log(MaxShipSize)" ="Log Max ship size **", Maxmincarriers ="Max min carriers",deg_out16_D = "Importer out-degree", "log(dist)" ="Log Maritime distance", colony1 ="Colonial-tie dummy*", comlang1 ="Common Language dummy *", "log(importer_gdp.pc)" = "Log Importer GDP pc.", "log(exporter_gdp.pc)" = "Log Exporter GDP pc", fta_wto1 = "Free Trade Agreement dummy", "log(exporter_remote)"="Log Exporter remoteness **","log(importer_remote)"="Log Importer remoteness", contig1 ="Contiguity dummy*", "log(importer_gdp)" ="Log Importer GDP","log(exporter_gdp)" ="Log Exporter GDP"  ))
p_PQML_vs_PQML_A<-PQML_vs_PQML_A +
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  geom_hline(yintercept=11.5, colour='white')+
  geom_hline(yintercept=12.5, colour='white')+
  geom_hline(yintercept=13.5, colour='white')+
  geom_hline(yintercept=14.5, colour='white')+
  geom_hline(yintercept=15.5, colour='white')+
  geom_hline(yintercept=16.5, colour='white')+
  # geom_text(aes(x=1,y=16, label ="hello"), size= 5,colour='black')+
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.3),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        axis.title = element_text(size = 12),
        axis.text=element_text(size=12),
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  scale_x_continuous(breaks = c(-2,-1.5,-1,-0.75,-0.5,-0.25,0,0.25,0.5,0.75,1,1.5,2))+
  labs(title="Extended PQML with connectivity data",          
       subtitle="PQML Regression coefficients modeling trade including or exluding connectivity\ndata 2016. Observations:12,432 including zero-trade flows. A combination of\n log-log and dummies which require different interpretations",
       caption = "Note: Results statistically significant for alpha = 0.01\n* Result confidence level change from alpha = 0.01 to 0.1\n** At leas one result not statistically significant for alpha = 0.1")


p_PQML_vs_PQML_A

#export
tiff("p_PQML_vs_PQML_ULTIMO_29.tiff", width = 10, height = 8, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_PQML_vs_PQML_A)
dev.off()


# 0 vs not
zero_vs_not<-multiplot(OLS_2016_z,OLS_2016_nz,intercept=FALSE,names = c("OLS z","OLS nz"),sort ="magnitude",decreasing =TRUE,pointSize = 2,newNames=c(numTrans="Number of transshipments", deg_out16_O = "Exporter out-degree", "log(MaxShipSize)" ="Log Max ship size", Maxmincarriers ="Max min carriers",deg_out16_D = "Importer out-degree", "log(dist)" ="Log Maritime distance", colony1 ="Colonial-tie dummy *", comlang1 ="Common Language dummy", "log(importer_gdp.pc)" = "Log Importer GDP pc.", "log(exporter_gdp.pc)" = "Log Exporter GDP pc *", fta_wto1 = "Free Trade Agreement dummy", "log(exporter_remote)"="Log Exporter remoteness","log(importer_remote)"="Log Importer remoteness", contig1 ="Contiguity dummy *", "log(importer_gdp)" ="Log Importer GDP","log(exporter_gdp)" ="Log Exporter GDP"  ))
p_OLS_zero_vs_not<-zero_vs_not +
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.4),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        axis.title = element_text(size = 12),
        axis.text=element_text(size=12),
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  scale_x_continuous(breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2,2.5))+
  labs(title="OLS With vs  Without Zero-Trade Flows",        
       subtitle="Regression coefficients including (z) or exluding (nz) zero-trade flows 2016\nLog-Log model including dummy variables with 12,432 or 10,452 observations",
       caption = "Note: No star - Results statistically significant for alpha = 0.01\n*  Coefficients change sign or results statistically insignificant for alpha = 0.1")

p_OLS_zero_vs_not

#export
tiff("p_OLS_zero_vs_not5_Ultimo.tiff", width = 10, height = 5, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_OLS_zero_vs_not)
dev.off()

# all ols time
all_OLS_QPOI<-multiplot(OLS_all_year_nz,QPOI_all_z,intercept=FALSE)
p_all_OLS_QPOI<-all_OLS_QPOI +
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.4),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  scale_x_continuous(breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2))+
  labs(title="OLS With vs  Without Zero-Trade Flows",          subtitle="Regression coefficients including (z) or exluding (nz) zero-trade flows 2016 | n = 12,432 or 10,452")
p_all_OLS_QPOI

summary(QPOI_2016_z)

#2016 vs 2006 OLS
OLS_vs_QP<-multiplot(OLS_2016_nz,QPOI_2016_z,names = c("OLS nz","PQML z"),intercept=FALSE,sort ="magnitude",decreasing =TRUE,newNames=c(numTrans="Number of transshipments", deg_out16_O = "Exporter out-degree", "log(MaxShipSize)" ="Log Max ship size", Maxmincarriers ="Max min carriers",deg_out16_D = "Importer out-degree", "log(dist)" ="Log Maritime distance", colony1 ="Colonial-tie dummy *", comlang1 ="Common Language dummy", "log(importer_gdp.pc)" = "Log Importer GDP pc.", "log(exporter_gdp.pc)" = "Log Exporter GDP pc *", fta_wto1 = "Free Trade Agreement dummy", "log(exporter_remote)"="Log Exporter remoteness","log(importer_remote)"="Log Importer remoteness", contig1 ="Contiguity dummy *", "log(importer_gdp)" ="Log Importer GDP","log(exporter_gdp)" ="Log Exporter GDP"  ))
p_PLS_QP<-OLS_vs_QP +
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.5),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        axis.title = element_text(size = 12),
        axis.text=element_text(size=12),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  scale_x_continuous(breaks = c(-2,-1.5,-1,-0.5,0,0.5,1,1.5,2))+
  labs(title="OLS vs PQML Regression Coefficients",          subtitle="OLS log-log regression results with dummy variables and Poisson Quasi-Maximum\nLikelihood for trade in 2016. Observations in OLS: 10,452 and PQML: 12,432. ",caption = "Note: No star - Results statistically significant for alpha = 0.01\n*  Coefficient sign inconsistent or results statistically insignificant for alpha = 0.1")+
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')
p_PLS_QP

#export it no population impact
tiff("p_PLS_QP_ULTIMO.tiff", width = 10, height = 7, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_PLS_QP)
dev.off()

#2016 vs 2006 OLS
OLS_6_16<-multiplot(OLS_2016,OLS_2006,intercept=FALSE, sort ="magnitude",decreasing =TRUE, color =c("blue","green"))
OLS_6_16

p_OLS_6_16<- OLS_6_16 +
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.5),
        panel.grid.major.y= element_blank(),
        legend.position="right")+
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  labs(title="OLS Regression coefficients in 2016 and 2006",                          subtitle="OLS log-log regression results for 2016 and 2006 predicting bilateral trade | 112 Countries")

p_OLS_6_16

# #export it no population impact
# tiff("p_OLS_6_16_a.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_OLS_6_16)
# dev.off()

#zero vs non zero Quasi-Poisson
PQML_nz_z<-multiplot(QPOI_2016_z,QPOI_2016_nz,intercept=FALSE,sort ="magnitude",decreasing =TRUE,newNames=c(numTrans="Number of transshipments", deg_out16_O = "Exporter out-degree", "log(MaxShipSize)" ="Log Max ship size", Maxmincarriers ="Max min carriers",deg_out16_D = "Importer out-degree", "log(dist)" ="Log Maritime distance", colony1 ="Colonial-tie dummy", comlang1 ="Common Language dummy", "log(importer_gdp.pc)" = "Log Importer GDP pc.", "log(exporter_gdp.pc)" = "Log Exporter GDP pc", fta_wto1 = "Free Trade Agreement dummy", "log(exporter_remote)"="Log Exporter remoteness","log(importer_remote)"="Log Importer remoteness", contig1 ="Contiguity dummy", "log(importer_gdp)" ="Log Importer GDP","log(exporter_gdp)" ="Log Exporter GDP"  ),names = c("PQML z","PQML nz"))
p_PQML_zero_vs_not<-PQML_nz_z +theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.4),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        plot.subtitle=element_text(size=13),
        plot.caption=element_text(size=12),
        axis.title = element_text(size = 12),
        axis.text=element_text(size=12),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  scale_x_continuous(breaks = c(-1,-0.25,-0.5,0,0.25,0.5,0.75,1))+
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  labs(title="PQML Regression Coefficients With and Without Zero-Trade",                          subtitle="Poisson quasi-maximum likelihood regression results for 2016 including (z) or\nexcluding (nz) zero-trade flows | Observations = 12,432 or 10,452",
       caption = "Note: No star - Results statistically significant for alpha = 0.01")

p_PQML_zero_vs_not

#export
tiff("p_PQML_zero_vs_not_ULTIMO.tiff", width = 10, height = 6, units = 'in', res = 300)
## plot commands, e.g.,
plot(p_PQML_zero_vs_not)
dev.off()

#OLS nz vs QPOI nz
OLS_PQML_nz<-multiplot(OLS_2016_nz,QPOI_2016_nz,intercept=FALSE,sort ="magnitude",decreasing =TRUE)
p_OLS_PQML_nz<-OLS_PQML_nz +theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.4),
        panel.grid.major.y= element_blank(),
        legend.position="right",
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm"))+
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  labs(title="Comparing OLS and PQML Coefficients",                          subtitle="OLS and PQML regression coefficients for 2016 excluding zero-trade flows | n = 10,452")

p_OLS_PQML_nz

# #export it no population impact
# tiff("p_OLS_PQML_nz.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_OLS_PQML_nz)
# dev.off()


#2016 vs 2006 Quasi-Poisson
QPML_6_16<-multiplot(OLS_2016_nz,QPOI_2016_nz,QPOI_2006,intercept=FALSE,sort ="magnitude",decreasing =TRUE)
p_QPML_6_16<-QPML_6_16 +theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.5),
        panel.grid.major.y= element_blank(),
        legend.position="right")+
  geom_hline(yintercept=1.5, colour='white')+
  geom_hline(yintercept=2.5, colour='white')+
  geom_hline(yintercept=3.5, colour='white')+
  geom_hline(yintercept=4.5, colour='white')+
  geom_hline(yintercept=5.5, colour='white')+
  geom_hline(yintercept=6.5, colour='white')+
  geom_hline(yintercept=7.5, colour='white')+
  geom_hline(yintercept=8.5, colour='white')+
  geom_hline(yintercept=9.5, colour='white')+
  geom_hline(yintercept=10.5, colour='white')+
  labs(title=" QPML Regression Coefficients in 2016 and 2006",                          subtitle="Poisson quasi-maximum likelihood regression results for 2016 and 2006 | Bilateral trade")

p_QPML_6_16

# #export it no population impact
# tiff("p_QPML_6_16_a.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(p_QPML_6_16)
# dev.off()


coefplot_a6<-coefplot(OLS_2016,sort = "magnitude",  intercept=FALSE)
coefplot_a6_p<-coefplot(POI_2016, intercept=FALSE)
coefplot_a6_qp<-coefplot(QPOI_2016,  intercept=FALSE)

coefplot_a6_nb<-coefplot(uncosim16_nb1,sort = "magnitude",  intercept=FALSE)


coefplot_a6
coefplot_a6_p
coefplot_a6_qp
coefplot_a6_nb

summary(uncosim_qp1)
coefplot1 +coord_flip()
coefplot6 +coord_flip()
coefplot_a6_p


#Coefficient Plot Regression 2016
coefplot_a6_p+
  #coefplot_a6 +
  theme_economist()+
  theme(panel.grid.major.x = element_line(size =0.5),panel.grid.major.y= element_line(size=0.5))


## ---- Tables ----
#As Tables
library(stargazer)

## ---- Compare PQML and OLS time - FINAL
stargazer(OLS_all_year_z,OLS_all_year_nz,QPOI_all_z,QPOI_all_nz,
          header=FALSE,
          title="Table of Regression Results",
          digits = 2,
          style = "apsr", out="models_ad_all_time_FINAL.htm")

## ---- Compare PQML and OLS Advanced
stargazer(PQML_2016_z_A,QPOI_2016,
          header=FALSE,
          title="Table of Regression Results",
          digits = 2,
          style = "apsr", out="models_ad_diff3.htm")

# ## ---- Compare Advanced
# stargazer(OLS_2016_z,OLS_2016_nz,OLS_2006_z,OLS_2006_nz,
#           header=FALSE,
#           title="Table of Regression Results",
#           digits = 2,
#           style = "apsr", out="models_OLS-6-16_2.htm")


# ## ---- Compare Advanced
# stargazer(OLS_2016_z,OLS_2016_nz,OLS_2006_z,OLS_2006_nz,
#           header=FALSE,
#           title="Table of Regression Results",
#           digits = 2,
#           style = "apsr", out="models_OLS-6-16_2.htm")

# ## ---- OLS Yearly
# stargazer(OLS_2016_z,OLS_2016_nz,OLS_2006_z,OLS_2006_nz,
#           header=FALSE,
#           title="Table of Regression Results",
#           digits = 2,
#           style = "apsr", out="models_OLS-6-16_2.htm")

## ---- Zero vs non zero
stargazer(OLS_2016_z,OLS_2016_nz,QPOI_2016_z,QPOI_2016_nz,
          header=FALSE,
          title="Table of Regression Results",
          digits = 2,
          style = "apsr", out="models_z_nz_FINAL.htm")


# ## ---- Model Type
# stargazer(OLS_2016,OLS_2016b,POI_2016,OLS_2016c,
#           header=FALSE,
#           title="Table of Regression Results",
#           digits = 2,
#           style = "apsr", out="models_tech_1.htm")

# ---- OLS vs Poisson Connectivity

# stargazer(OLS_2016_z, OLS_2016bis,OLS_2016bis2,OLS_2016bis3,OLS_2016bis4,OLS_2016bis5 ,QPOI_2016_z,POI_2016bis,POI_2016bis2,POI_2016bis3,POI_2016bis4,POI_2016bis5,
#           header=FALSE,
#           title="Table of Regression Results",
#           digits = 2,
#           style = "apsr", out="models_OLSvsQP.htm")

# ---- OLS Connectivity

# stargazer(OLS_2016, OLS_2016bis,OLS_2016bis2,OLS_2016bis3,OLS_2016bis4,OLS_2016bis5,
#           header=FALSE,
#           title="Table of OLS Regression Results",
#           digits = 2,
#           style = "apsr", out="models_OLS_con.htm")

# ---- Poisson Connectivity
stargazer(QPOI_2016_z,QPOI_2016bis,QPOI_2016bis2,QPOI_2016bis3,QPOI_2016bis4,QPOI_2016bis5,QPOI_2016bis6,
          header=FALSE,
          title="Table of Poisson Regression Results",
          digits = 2,
          style = "apsr", out="models_POI_con3.htm")

# ---- Poisson Connectivity ULTIMO
stargazer(QPOI_2016_z,PQML_2016_z_A,
          header=FALSE,
          title="Table of Poisson Regression Results",
          digits = 2,
          style = "apsr", out="models_QPOI_con_ULTIMO.htm")


# ---- Poisson Connectivity DB real
stargazer(QPOI_2016_z_db,QPOI_2016bis2_db,QPOI_2016bis3_db,QPOI_2016bis4_db,QPOI_2016bis5_db,QPOI_2016bis6_db,
          header=FALSE,
          title="Table of Poisson Regression Results",
          digits = 2,
          keep = c("dist","fta_wto","contig","comlang","colony","Maxmincarriers","MaxShipSize","ComDir","numTrans","LSBCI_2","DCon","deg16_D","deg16_O"),
          notes.align = "l",
          style = "apsr", out="models_POI_con_db5.htm")


# ---- Poisson Connectivity DB real
stargazer(QPOI_2016_z_db,QPOI_2016_z_db_A,
          header=FALSE,
          title="Table of Poisson Regression Results",
          digits = 2,
          keep = c("dist","fta_wto","contig","comlang","colony","Maxmincarriers","MaxShipSize","ComDir","numTrans","log(MaxShipSize)","DCon","deg16_D","deg16_O"),
          notes.align = "l",
          style = "apsr", out="models_POI_con_db_real.htm")

summary(uncosim_b)

mean(cdata16$TradeFlow)
var(cdata16$TradeFlow)



## ---- strange ----
# uncosim_bq <- PPML(y="TradeFlow", dist="dist", x=c("exporter_pop","importer_gdp"), vce_robust = TRUE, data = cdata16)
# 
# 
# uncosim_nb <- glm.nb(TradeFlow+1 ~ 
#                    log(exporter_pop)+
#                    log(importer_gdp)+
#                    log(dist), na.action = na.exclude,maxit = 100,link = log,data = cdata16)

uncosim_rob <- glmrob(TradeFlow ~ 
                        log(exporter_pop)+
                        log(importer_gdp)+
                        dist, na.action = na.exclude, family = poisson(link = "log"), data = cdata16)

#Model Advanced
# uncosim <- glm(TradeFlow ~ 
#                  log(exporter_pop)+
#                  log(importer_gdp)+
#                  dist+
#                  log(MaxShipSize)+
#                  Maxmincarriers, na.action = na.exclude, family = quasipoisson(link = "log"), data = cdata13)

#Model Advanced 2
# uncosim2 <- glm(TradeFlow ~ 
#                   log(exporter_pop)+log(exporter_gdp)+
#                   log(importer_gdp)+log(importer_pop)+
#                   dist+
#                   log(MaxShipSize)+
#                   log(Maxmincarriers), na.action = na.exclude, family = quasipoisson(link = "log"), data = cdata16)
# 
# hist(cdata09$MaxShipSize)
# 
# min(cdata10$MaxShipSize)

#Model Advanced 3 
# 
# uncosim3_08<- glm(TradeFlow ~ 
#                     log(exporter_pop)+log(exporter_gdp)+
#                     log(importer_gdp)+log(importer_pop)+
#                     log(dist)+
#                     log(MaxShipSize+1)+
#                     log(Maxmincarriers+1)+
#                     log(TEU_O)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata08)
# 
# uncosim3_09<- glm(TradeFlow ~ 
#                      log(exporter_pop)+log(exporter_gdp)+
#                      log(importer_gdp)+log(importer_pop)+
#                      log(dist)+
#                     log(MaxShipSize+1)+
#                     log(Maxmincarriers+1)+
#                      log(TEU_O)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata09)
# 
# 
# uncosim3_10 <- glm(TradeFlow ~ 
#                      log(exporter_pop)+log(exporter_gdp)+
#                      log(importer_gdp)+log(importer_pop)+
#                      log(dist)+
#                      log(MaxShipSize+0.001)+
#                      log(Maxmincarriers+0.001)+
#                      log(TEU_O)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata10)
# 
# uncosim3_11 <- glm(TradeFlow ~ 
#                      log(exporter_pop)+log(exporter_gdp)+
#                      log(importer_gdp)+log(importer_pop)+
#                      log(dist)+
#                      log(MaxShipSize+0.001)+
#                      log(Maxmincarriers+0.001)+
#                      log(TEU_O+0.001)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata11)
# 
# uncosim3_12 <- glm(TradeFlow ~ 
#                      log(exporter_pop)+log(exporter_gdp)+
#                      log(importer_gdp)+log(importer_pop)+
#                      log(dist)+
#                      log(MaxShipSize+0.001)+
#                      log(Maxmincarriers+0.001)+
#                      log(TEU_O)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata12)
# 
# uncosim3_13 <- glm(TradeFlow ~ 
#                      log(exporter_pop)+log(exporter_gdp)+
#                      log(importer_gdp)+log(importer_pop)+
#                      log(dist)+
#                      log(MaxShipSize+0.001)+
#                      log(Maxmincarriers+0.001)+
#                      log(TEU_O)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata13)
# 
# 
# uncosim3_14 <- glm(TradeFlow ~ 
#                   log(exporter_pop)+log(exporter_gdp)+
#                   log(importer_gdp)+log(importer_pop)+
#                   log(dist)+
#                     log(MaxShipSize+0.001)+
#                     log(Maxmincarriers+0.001)+
#                   log(TEU_O)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata14)
# 
# uncosim3_15 <- glm(TradeFlow ~ 
#                      log(exporter_pop)+log(exporter_gdp)+
#                      log(importer_gdp)+log(importer_pop)+
#                      log(dist)+
#                      log(MaxShipSize+0.001)+
#                      log(Maxmincarriers+0.001)+
#                      log(TEU_O)+log(TEU_D), na.action = na.exclude, family = poisson(link = "log"), data = cdata15)


#Video


#install.packages("pscl")
library(pscl)
#install.packages("AER")
library(AER)

# #first asign the parameter values from the model to the appropriate variables
# k <- uncosim$coefficients[1]     #is a proportionality constant related to the rate of the event. (Julian)
# mu <- uncosim$coefficients[2]    #potential to generate movements (emissiveness) (Julian)
# alpha <- uncosim$coefficients[3] #potential to generate movements (emissiveness) (Julian) 
# beta <- -uncosim$coefficients[4] ##ß is the the so-called friction of distance # ß parameter controlling the effect of generalised travel cost. When is large, the effect of distance is great and when it is small #it is much less. This gives more trips when it is small than when it is big.
# 
# #now plug everything back into the Equation 6 model... (be careful with the positive and negative signing of the parameters as the beta parameter may not have been saved as negative so will need to force negative)
# cdata$unconstrainedEst2 <- exp(k+(mu*log(cdata$exporter_pop))+(alpha*log(cdata$importer_gdp))-(beta*log(cdata$dist)))
# 
# #which is exactly the same as this...
# cdata$unconstrainedEst2 <- (exp(k)*exp(mu*log(cdata$exporter_pop))*exp(alpha*log(cdata$importer_gdp))*exp(-beta*log(cdata$dist)))

#and of course, being R, there is an even easier way of doing this...
cdata$fitted_basic <- fitted(uncosim_b)
cdata16$fitted_basic_bq <- fitted(uncosim_bq)

cdata$fitted_basic_rob <- fitted(uncosim_rob)

cdata$fitted <- fitted(uncosim)
cdata$fitted2 <- fitted(uncosim2)
cdata$fitted3 <- fitted(uncosim3)

#YEARLY 
cdata08$fitted3 <- fitted(uncosim3_08)
cdata09$fitted3 <- fitted(uncosim3_09)
cdata10$fitted3 <- fitted(uncosim3_10)
cdata11$fitted3 <- fitted(uncosim3_11)
cdata12$fitted3 <- fitted(uncosim3_12)
cdata13$fitted3 <- fitted(uncosim3_13)
cdata14$fitted3 <- fitted(uncosim3_14)
cdata15$fitted3 <- fitted(uncosim3_15)
cdata16$fitted3 <- fitted(uncosim3_16)

#DIFFERENT METHODS
cdata16$fitted_OLS1 <- fitted(OLS_2016)
cdata16$fitted_p1 <- fitted(POI_2016)
cdata16$fitted_qp1 <- fitted(QPOI_2016)

##run the model and store all of the new flow estimates in a new column in the dataframe
#cdata$unconstrainedEst2 <- round(cdata$unconstrainedEst2,0)
#sum(cdata$unconstrainedEst2)

##turn it into a little matrix and have a look at your handy work
#cdatamat2 <- dcast(cdata, OrigCode ~ DestCode, sum, value.var = "unconstrainedEst2", margins=c("Orig", "Dest"))
#cdatamat2

#has calibrating the parameters improved the model.?


## ---- EVALUATION ----

#R-Squared
#CalcRSquared(cdata$TradeFlow,cdata$unconstrainedEst2) #0.2109 log(distance)
CalcRSquared(cdata$TradeFlow,cdata$fitted_basic)      #0.5104854
CalcRSquared(cdata$TradeFlow,cdata$fitted_basic_rob)  #0.5198791
CalcRSquared(cdata$TradeFlow,cdata$fitted)            #0.4517314
CalcRSquared(cdata$TradeFlow,cdata$fitted2)           #0.6216275
CalcRSquared(cdata$TradeFlow,cdata$fitted3)           #0.7010503

cdata16$fitted_OLS1_c <- cdata16$fitted_OLS1

plot(cdata16$fitted_OLS1,cdata16$TradeFlow)
plot(cdata16$fitted_p1,cdata16$TradeFlow)
plot(log(cdata16$fitted_qp1),log(cdata16$TradeFlow))

CalcRSquared(log(cdata16$TradeFlow+1),cdata16$fitted_OLS1)   # STRANGE: R-squared:  0.665
CalcRSquared(cdata16$TradeFlow,cdata16$fitted_p1)       #0.55
CalcRSquared(cdata16$TradeFlow,cdata16$fitted_qp1)       #0.55

CalcRMSE(cdata16$TradeFlow,cdata16$fitted_OLS1)       #8,196,740,398
CalcRMSE(cdata16$TradeFlow,cdata16$fitted_p1)         #5,644,892,079
CalcRMSE(cdata16$TradeFlow,cdata16$fitted_qp1)        #5,644,892,079



##################

#yearly
CalcRSquared(cdata08$TradeFlow,cdata08$fitted3)       #2008: 0.7121043
CalcRSquared(cdata09$TradeFlow,cdata09$fitted3)       #2009: 0.5854805
CalcRSquared(cdata10$TradeFlow,cdata10$fitted3)       #2010: 0.7052759
CalcRSquared(cdata11$TradeFlow,cdata11$fitted3)       #2011: 0.6733436
CalcRSquared(cdata12$TradeFlow,cdata12$fitted3)       #2012: 0.6161335

CalcRSquared(cdata16$TradeFlow,cdata16$fitted_basic_b)  #2016: 29.29
CalcRSquared(cdata16$TradeFlow,cdata16$fitted_basic_bq)       #2012: 0.6161335

CalcRSquared(cdata13$TradeFlow,cdata13$fitted3)       #2013: 0.6222708
CalcRSquared(cdata14$TradeFlow,cdata14$fitted3)       #2014: 0.4712305
CalcRSquared(cdata15$TradeFlow,cdata15$fitted3)       #2015: 0.5681838
CalcRSquared(cdata16$TradeFlow,cdata16$fitted3)       #2016: 0.6922207


#Root Mean Squared Error (RMSE)
CalcRMSE(cdata$TradeFlow,cdata$fitted_basic)      #5,918,940
CalcRMSE(cdata$TradeFlow,cdata$fitted)            #5,859,953
CalcRMSE(cdata$TradeFlow,cdata$fitted2)           #4,644,466
CalcRMSE(cdata$TradeFlow,cdata$fitted3)           #4,284,473 #Strange Distance Coeffiient

doubSim16DistanceM <- glm(TradeFlow ~ log(dist)+
                            OrigCode+
                            DestCode
                          , na.action = na.exclude, family = poisson(link = "log"), data = cdata_C16)
summary(doubSim16DistanceM)

doubSim16DistanceW <- glm(TradeFlow ~ log(dist_w)+
                            OrigCode+
                            DestCode
                          , na.action = na.exclude, family = poisson(link = "log"), data = cdata_C16)


doubSim16DistanceW <- glm(TradeFlow ~ log(dist_w)+fta_wto+
                            OrigCode+
                            DestCode+
                            
                            , na.action = na.exclude, family = poisson(link = "log"), data = cdata_C16)

doubSim16fta <- glm(TradeFlow ~ log(dist_w)+fta_wto+
                      OrigCode+
                      DestCode, na.action = na.exclude, family = poisson(link = "log"), data = cdata_C16)

#Double Contrained Advanced:
#run a production constrained SIM
# doubSimA <- glm(TradeFlow ~ 
#                   OrigCode+DestCode+
#                   Maxmincarriers+MaxShipSize+
#                   numTrans+DCon+ComDir+
#                  dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata_C16)

# doubSimA_norm <- glm(TradeFlow+1 ~ 
#                   OrigCode+DestCode+
#                   Maxmincarriers+MaxShipSize+
#                   numTrans+DCon+ComDir+
#                   dist-1, na.action = na.exclude, family = gaussian(link="log"), data = cdata16)


## ---- Yearly Duble----
# #2008
# doubSimA08 <- glm(TradeFlow ~ 
#                     OrigCode+DestCode+
#                     Maxmincarriers+MaxShipSize+
#                     numTrans+DCon+ComDir+
#                     dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata08)
# 
# 
# #2009
# doubSimA09 <- glm(TradeFlow ~ 
#                     OrigCode+DestCode+
#                     Maxmincarriers+MaxShipSize+
#                     numTrans+DCon+ComDir+
#                     dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata09)
# 
# #2010
# doubSimA10 <- glm(TradeFlow ~ 
#                     OrigCode+DestCode+
#                     Maxmincarriers+MaxShipSize+
#                     numTrans+DCon+ComDir+
#                     dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata10)
# 
# 
# #2011
# doubSimA11 <- glm(TradeFlow ~ 
#                     OrigCode+DestCode+
#                     Maxmincarriers+MaxShipSize+
#                     numTrans+DCon+ComDir+
#                     dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata11)
# 
# #2012
# doubSimA12 <- glm(TradeFlow ~ 
#                     OrigCode+DestCode+
#                     Maxmincarriers+MaxShipSize+
#                     numTrans+DCon+ComDir+
#                     dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata12)
# 
# mean(cdata12$TradeFlow)
# var(cdata12$TradeFlow)
# 
# #2013
# doubSimA13 <- glm(TradeFlow ~ 
#                     OrigCode+DestCode+
#                     Maxmincarriers+MaxShipSize+
#                     numTrans+DCon+ComDir+
#                     dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata13)
# 
# 
# #2014
# doubSimA14 <- glm(TradeFlow ~ 
#                   OrigCode+DestCode+
#                   Maxmincarriers+MaxShipSize+
#                   numTrans+DCon+ComDir+
#                   dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata14)
# 
# #2015
# doubSimA15 <- glm(TradeFlow ~ 
#                     OrigCode+DestCode+
#                     Maxmincarriers+MaxShipSize+
#                     numTrans+DCon+ComDir+
#                     dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata15)

## ---- 2016 double ----
#2016
cdata_C16$Orig<-cdata_C16$OrigCode
cdata_C16$Dest<-cdata_C16$DestCode
cdata_C16$Dest<-cdata_C16$DestCode

doubSimX_qp_z <- glm(TradeFlow ~ 
                       log(dist)+
                       fta_wto+
                       contig+
                       comlang+
                       colony+
                       +OrigCode+DestCode, na.action = na.exclude, family = quasipoisson(link = "log"), data = cdata_C16)

doubSimX_OLS_z <- lm(log(TradeFlow+1) ~ 
                       log(dist)+
                       fta_wto+
                       contig+
                       comlang+
                       colony+
                       +OrigCode+DestCode, na.action = na.exclude, data = cdata_C16)

doubSimX_qp_nz <- glm(TradeFlow ~ 
                        log(dist)+
                        fta_wto+
                        contig+
                        comlang+
                        colony+
                        +OrigCode+DestCode, na.action = na.exclude, family = quasipoisson(link = "log"), data = cdata_C16_nz)

doubSimX_OLS_nz <- lmrob(log(TradeFlow) ~ 
                           log(dist)+
                           fta_wto+
                           contig+
                           comlang+
                           colony+
                           +OrigCode+DestCode, na.action = na.exclude, data = cdata_C16_nz)
summary(doubSimX_OLS_nz)

doubSimX_OLS_nz <- lm(log(TradeFlow) ~ 
                        log(dist)+
                        fta_wto+
                        contig+
                        comlang+
                        colony+
                        +OrigCode+DestCode, na.action = na.exclude, data = cdata_C16_nz)

#FINAL EVALUATIONS 

cdata_C16_nz$doubSimX_OLS_nz <- fitted(doubSimX_OLS_nz)
cdata_C16$doubSimX_OLS_z <- fitted(doubSimX_OLS_z)

cdata_C16_nz$doubSimX_qp_nz <- fitted(doubSimX_qp_nz)
cdata_C16$doubSimX_qp_z <- fitted(doubSimX_qp_z)

#Double OLS
CalcRSquared(cdata_C16$TradeFlow,exp(cdata_C16$doubSimX_OLS_z+(3.103^2)/2) )#0.07751182

CalcRSquared(cdata_C16_nz$TradeFlow,exp(cdata_C16_nz$doubSimX_OLS_nz+(1.89^2)/2))#0.187505
summary.lm(doubSimX_OLS_z)$adj.r.squared
summary.lm(doubSimX_OLS_nz)$adj.r.squared
help(summary.lm)

#log scale
CalcRSquared(log(cdata_C16_nz$TradeFlow),cdata_C16_nz$doubSimX_OLS_nz) #0.81
CalcRMSE(log(cdata_C16_nz$TradeFlow),cdata_C16_nz$doubSimX_OLS_nz) #1.866

CalcRSquared(log(cdata_C16$TradeFlow+1),cdata_C16$doubSimX_OLS_z)# 0.81
CalcRMSE(log(cdata_C16$TradeFlow+1),cdata_C16$doubSimX_OLS_z) #3.074

#normal scale
CalcRMSE(cdata_C16$TradeFlow,exp(cdata_C16$doubSimX_OLS_z+((3.103^2)/2)))     
CalcRSquared(cdata_C16$TradeFlow,exp(cdata_C16$doubSimX_OLS_z))

install.packages("rsq") 
library(rsq)
plot(log(cdata_C16$TradeFlow+1),log(exp(cdata_C16$doubSimX_OLS_z+((1.89^2)/2))))
plot(log(cdata_C16$TradeFlow+1),cdata_C16$doubSimX_OLS_z)
plot(log(cdata_C16_nz$TradeFlow),cdata_C16_nz$doubSimX_OLS_nz)

rsq(doubSimX_qp_nz,adj=TRUE)
rsq(doubSimX_qp_z,adj=TRUE)

#OLS NZ
ggplot(cdata_C16_nz, aes(x=TradeFlow, y=exp(doubSimX_OLS_nz), label =pair))+geom_point()+geom_text(label=cdata_C16_nz$pair)

#OLS NZ
ggplot(cdata_C16_nz, aes(x=TradeFlow, y=doubSimX_qp_nz, label =pair))+geom_point()+geom_text(label=cdata_C16_nz$pair)
summary(doubSimX_OLS_z)

plot(log(cdata_C16$TradeFlow),(cdata_C16$doubSimX_OLS_z))

#Double  QPOI
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$doubSimX_qp_z) #0.9407992
CalcRSquared(cdata_C16_nz$TradeFlow,cdata_C16_nz$doubSimX_qp_nz)#0.940724

CalcRMSE(cdata_C16$TradeFlow,cdata_C16$doubSimX_qp_z)           #1,723,601,031
CalcRMSE(cdata_C16_nz$TradeFlow,cdata_C16_nz$doubSimX_qp_nz)    #1,879,708,880

plot(cdata_C16_nz$TradeFlow,cdata_C16_nz$doubSimX_qp_nz)

plot((cdata_C16$TradeFlow),exp(cdata_C16$doubSimX_OLS_z)  )

ggplot(cdata_C16, aes(x=log(TradeFlow+1), y=(doubSimX_OLS_z)))+geom_point()
geom_abline(slope=1, yintercept=0.1, color="white", alpha = 1,size=0.5)


#QPOI
CalcRMSE(cdata_C16_nz$TradeFlow,cdata_C16_nz$QPOI_2016_nz)    #5,274,900,403
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$QPOI_2016_z)           #4,838,178,632

CalcRSquared(log(cdata_C16_nz$TradeFlow+1),log(cdata_C16_nz$QPOI_2016_nz+1))    #0.522
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$QPOI_2016_z)           #0.523

plot(log(cdata_C16$TradeFlow+1),log(cdata_C16$QPOI_2016_z+1))
plot(log(cdata_C16_nz$TradeFlow),log(cdata_C16_nz$QPOI_2016_nz))

#OLS

CalcRMSE(cdata_C16_nz$TradeFlow,exp(cdata_C16_nz$OLS_2016_nz))  #10,921,175,387
CalcRMSE(cdata_C16$TradeFlow,exp(cdata_C16$OLS_2016_z))        #140,665,056,691

CalcRSquared(cdata_C16_nz$TradeFlow,exp(cdata_C16_nz$OLS_2016_nz)) #0.2087714
CalcRSquared(cdata_C16$TradeFlow,exp(cdata_C16$OLS_2016_z))        #0.1462689

plot(log(cdata_C16_nz$TradeFlow),(cdata_C16_nz$OLS_2016_nz))


cor(log(cdata_C16$TradeFlow+1),(cdata_C16$OLS_2016_z))

log(exp(3))
exp(log(3))

stargazer(doubSimX_OLS_nz,doubSimX_OLS_z,doubSimX_qp_nz,doubSimX_qp_z,
          header=TRUE,
          title="Table of Regression Results",
          digits = 3,
          style = "apsr", 
          keep = c("dist","fta_wto","contig","comlang","colony"),
          notes.align = "l",
          out="models_doubl2.htm")





summary(doubSimX)

exp(0.666)
summary(doubSim16DistanceM)
mar_distance_decay <--0.7524957355

summary(doubSim16DistanceW) 
air_distance <--0.8893864376


summary(doubSim16fta) 
fta_1 <-0.3327820032
fta_1 # increase distance by 1% and trade will decrease by 0.410

# 
# 




# 
# doubSimA_rob <- glmrob(TradeFlow ~ 
#                   OrigCode+DestCode+Maxmincarriers+
#                     MaxShipSize+numTrans+DCon+ComDir+
#                   dist-1, na.action = na.exclude, family = poisson(link = "log"), data = cdata)


#let's have a look at it's summary...
summary(doubSimA16)
summary(doubSim_rob)
summary(doubSimA)
summary(doubSimA_rob)

#And the various flows and goodness-of-fit statistics?
#then round the estimates

cdata_C16$doubsimFittedDistanceM <- round(fitted(doubSim16DistanceM),0)
cdata_C16$doubsimFittedDistanceW <- round(fitted(doubSim16DistanceW),0)


# cdata$doubsimFitted_rob <- round(fitted(doubSim_rob),0)
# cdata16$doubsimAFitted <- round(fitted(doubSimA),0)
# cdata16$doubsimAFitted_norm <- round(fitted(doubSimA_norm),0)
# cdata$doubsimAFitted_rob <- round(fitted(doubSimA_rob),0)

#yearly
# cdata08$doubsimAFitted08 <- round(fitted(doubSimA08),0)
# cdata09$doubsimAFitted09 <- round(fitted(doubSimA09),0)
# cdata10$doubsimAFitted10 <- round(fitted(doubSimA10),0)
# cdata11$doubsimAFitted11 <- round(fitted(doubSimA11),0)
# cdata12$doubsimAFitted12 <- round(fitted(doubSimA12),0)
# cdata13$doubsimAFitted13 <- round(fitted(doubSimA13),0)
# cdata14$doubsimAFitted14 <- round(fitted(doubSimA14),0)
# cdata15$doubsimAFitted15 <- round(fitted(doubSimA15),0)
cdata_C16$doubsimAFitted <- round(fitted(doubSimA16),0)

#cdata$doubsimAFitted <- round(fitted(doubSimA),0)
#now we can create pivot table to turn paired list into matrix (and compute the margins as well)
cdatamat7 <- dcast(cdata_C16, OrigCode ~ DestCode, sum, value.var = "doubsimFitted", margins=c("Orig", "Dest"))
cdatamat7

cdatamat7A <- dcast(cdata_C16, OrigCode ~ DestCode, sum, value.var = "doubsimAFitted", margins=c("Orig", "Dest"))
cdatamat7A

#compared to.
cdatamat

#and we can test the goodness-of-fit in exactly the same way as before:

##use the functions from the last practical to calculate some goodness-of-fit statistics

#RSquared
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$doubsimFittedDistanceM)       #0.9287278
CalcRSquared(cdata_C16$TradeFlow,cdata_C16$doubsimFittedDistanceW)       #0.9514455

CalcRMSE(cdata_C16$TradeFlow,cdata_C16$doubsimFittedDistanceM) #1,902,369,069
CalcRMSE(cdata_C16$TradeFlow,cdata_C16$doubsimFittedDistanceW) #1,553,505,211 

# CalcRSquared(cdata$TradeFlow,cdata$doubsimFitted_rob)   #0.9090054



CalcRSquared(cdata16$TradeFlow,cdata16$doubsimAFitted_norm)      #0.9554218

plot(log(cdata16$TradeFlow),log(cdata16$doubsimAFitted_norm))
plot(cdata16$TradeFlow,cdata16$doubsimAFitted_norm)

hist(cdata16$DCon)

hist(cdata16$ComDir)

summary(cdata16$ComDir)

#CONECTIVITY PLOTS

ggplot(cdata16, aes(x=LSBCI_2, y=log(TradeFlow+1), color=log(cdata16$TradeFlow+1))) +
  geom_point()+geom_smooth(method = "lm")

ggplot(cdata08, aes(x=LSBCI_2, y=log(TradeFlow+1), color=log(cdata08$TradeFlow+1))) +
  geom_point()+geom_smooth(method = "lm")

cor(cdata08$LSBCI_2,log(cdata08$TradeFlow+1))

plot(cdata16$numTrans,cdata16$TradeFlow)
plot(cdata16$DCon,cdata16$TradeFlow)
plot(cdata16$MaxShipSize,cdata16$TradeFlow)

plot(cdata16$Maxmincarriers,cdata16$TradeFlow)

ggplot(cdata16, aes(x=Maxmincarriers, y=log(TradeFlow+1), color=log(cdata16$TradeFlow+1))) +
  geom_point()+geom_smooth(method = "lm")

ggplot(cdata08, aes(x=log(Maxmincarriers), y=log(TradeFlow+1), color=log(cdata08$TradeFlow+1))) +
  geom_point()+geom_smooth(method = "lm")



ggplot(cdata16, aes(x=MaxShipSize, y=log(TradeFlow+1), color=log(cdata16$TradeFlow+1))) +
  geom_point()+geom_smooth(method = "lm")


ggplot(cdata08, aes(x=MaxShipSize, y=log(TradeFlow+1), color=log(cdata08$TradeFlow+1))) +
  geom_point()+geom_smooth(method = "lm")


CalcRSquared(cdata16$TradeFlow,cdata16$doubsimAFitted)      #0.9072606

CalcRSquared(cdata$TradeFlow,cdata$doubsimAFitted_rob)  #0.9439164

#Yearly
CalcRSquared(cdata08$TradeFlow,cdata08$doubsimAFitted08)      #0.9548084
CalcRSquared(cdata09$TradeFlow,cdata09$doubsimAFitted09)      #0.9119036
CalcRSquared(cdata10$TradeFlow,cdata10$doubsimAFitted10)      #0.9086782
CalcRSquared(cdata11$TradeFlow,cdata11$doubsimAFitted11)      #0.9196033
CalcRSquared(cdata12$TradeFlow,cdata12$doubsimAFitted12)      #0.8913628
CalcRSquared(cdata13$TradeFlow,cdata13$doubsimAFitted13)      #0.9497362
CalcRSquared(cdata14$TradeFlow,cdata14$doubsimAFitted14)      #0.938629
CalcRSquared(cdata15$TradeFlow,cdata15$doubsimAFitted15)      #0.9356867
CalcRSquared(cdata16$TradeFlow,cdata16$doubsimAFitted16)      #0.9461792

#RMSE
CalcRMSE(cdata$TradeFlow,cdata$doubsimFitted)       #2,487,553
CalcRMSE(cdata$TradeFlow,cdata$doubsimAFitted)      #1,862,045

#Comparison Column

cdata16$comparison_evr_un <- (cdata16$fitted3-cdata16$TradeFlow)
summary(cdata16$comparison_evr_un)


cdata16$comparison_evr <- (cdata16$doubsimAFitted-cdata16$TradeFlow)
summary(cdata$comparison_evr)




## ---- PREDICTION vs REAL Flow Scatter ----

ggplot(cdata16, aes(x=doubsimAFitted16, y=TradeFlow, color=cdata16$comparison_evr)) +
  geom_point()+geom_smooth(method = "lm")


ggplot(cdata16, aes(x=fitted3, y=TradeFlow, color=cdata16$comparison_evr_un)) +
  geom_point()+geom_smooth(method = "lm")

#Heatmap Estimation vs reality

#Comparison 2016
cdata16$comparison_evr_norm <- (cdata16$doubsimAFitted_norm-cdata16$TradeFlow)
cdata16$comparison_evr_pct_norm <- cdata16$comparison_evr/(cdata16$TradeFlow+1)

cdata16$comparison_evr <- (cdata16$doubsimAFitted-cdata16$TradeFlow)
cdata16$comparison_evr_pct <- cdata16$comparison_evr/(cdata16$TradeFlow+1)

hist(cdata16$comparison_evr_pct)
summary(cdata16$comparison_evr)

#Histograms
hist(cdata$comparison_evr)
hist(cdata$TradeFlow)
hist(cdata$doubsimAFitted)


library(ggthemes)
histo_flow1<-ggplot(cdata16, aes(x=comparison_evr))+
  geom_histogram(fill="steelblue")+
  #???stat_bin(aes(y=..count.., label=..count..), geom="text", vjust=-.5)+
  theme(plot.background = element_rect(fill = "#d5e4eb"))+
  theme_economist() +
  #coord_flip()+ #Horizontal
  labs(title="Histogram of Flow Estimation vs Reality", 
       subtitle="Doubly Constrained Model Estimation vs Reality",
       x="Error",
       y = "Count")
histo_flow1


## ---- GRAPH: HISTOGRAM OF TRADE ----


## ---- with 0

median.trade16<-median((cdata_C16$TradeFlow))
mean(log(cdata_C16_nz$TradeFlow +1))
median.trade16 #1,276,518

mean.trade16 <-mean(cdata_C16$TradeFlow)
mean.trade16 #700,252,521
mean(log(cdata_C16$TradeFlow +1))

histo_trade_flow_zeros<-ggplot(cdata_C16, aes(x=TradeFlow+1))+
  geom_histogram(fill="steelblue")+theme_economist() +
  #???stat_bin(aes(y=..count.., label=..count..), geom="text", vjust=-.5)+
  theme(plot.background = element_rect(fill = "#d5e4eb"),
        panel.grid.major.x = element_line(size =0.5),
        panel.grid.major.y= element_line(size =0.5),
        
        legend.position="right",
        axis.title = element_text(size = 12),
        legend.text = element_text(size = 11),
        legend.title=element_text(face = "bold", size = 10),
        
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm")
        
  )+
  #coord_flip()+ #Horizontal
  labs(title="Histogram of Trade Flows and Zero-Trade in 2016 ", 
       subtitle="Zero-trade included | Distribution of trade value of manufactured goods between 112 countries in 2016 US dollars",
       x=" Log scale | TradeFlow",
       y = "Count",
       caption="Source: UN Cometrade 2018")+
  scale_x_continuous(trans ="log10",labels = scales::dollar)+
  geom_vline(xintercept=mean.trade16, colour='white', alpha = 1, linetype = 3)+
  geom_vline(xintercept=median.trade16, colour='white', alpha = 1, linetype = 3)+
  geom_text(aes(x=mean.trade16,y=-40,label="mean"),hjust=0, vjust=0.5,fontface = "plain",size = 3)+
  geom_text(aes(x=mean.trade16,y=-140,label="700.2 million"),hjust=0, vjust=0.5,fontface = "plain",size = 3)+
  geom_text(aes(x=median.trade16,y=-40,label="median"),hjust=0, vjust=0.5,fontface = "plain",size = 3)+
  geom_text(aes(x=median.trade16,y=-140,label="1.27 million"),hjust=0, vjust=0.5,fontface = "plain",size = 3)
histo_trade_flow_zeros

# #export it no population impact
# tiff("p_hist_trade_zeros2.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(histo_trade_flow_zeros)
# dev.off()

# ---- without 0

median.trade16_0<-median((cdata_C16_nz$TradeFlow))
mean(log(cdata_C16_nz$TradeFlow +1))
median.trade16_0 # 4,158,018

mean.trade16_0 <-mean(cdata_C16_nz$TradeFlow)
mean.trade16_0 #832,906,558


histo_trade_flow_minus<-ggplot(cdata_C16_nz, aes(x=TradeFlow+1))+
  geom_histogram(fill="steelblue")+theme_economist() +
  #???stat_bin(aes(y=..count.., label=..count..), geom="text", vjust=-.5)+
  theme(plot.background = element_rect(fill = "#d5e4eb"),
        panel.grid.major.x = element_line(size =0.5),
        panel.grid.major.y= element_line(size =0.5),
        
        plot.subtitle=element_text(size=12),
        plot.caption=element_text(size=10),
        plot.margin = unit(c(0.6, 0.6, 0.3, 0.6), "cm")
        
  )+
  #coord_flip()+ #Horizontal
  labs(title="Histogram of Trade Flows in 2016", 
       subtitle="Zero-trade excluded | Distribution of trade value of manufactured goods between 112 countries in 2016 US dollars",
       x=" Log scale | TradeFlow",
       y = "Count",
       caption="Source: UN Cometrade 2018")+
  scale_x_continuous(trans ="log10",labels = scales::dollar)+
  geom_vline(xintercept=mean.trade16, colour='white', alpha = 1, linetype = 3)+
  geom_vline(xintercept=median.trade16, colour='white', alpha = 1, linetype = 3)+
  geom_text(aes(x=mean.trade16,y=-20,label="mean"),hjust=0, vjust=0.5,fontface = "plain",size = 3)+
  geom_text(aes(x=mean.trade16,y=-70,label="833 million"),hjust=0, vjust=0.5,fontface = "plain",size = 3)+
  geom_text(aes(x=median.trade16,y=-20,label="median"),hjust=0, vjust=0.5,fontface = "plain",size = 3)+
  geom_text(aes(x=median.trade16,y=-70,label="4.2 million"),hjust=0, vjust=0.5,fontface = "plain",size = 3)
histo_trade_flow_minus

# #export it no population impact
# tiff("p_hist_trade_minus2.tiff", width = 10, height = 5, units = 'in', res = 300)
# ## plot commands, e.g.,
# plot(histo_trade_flow_minus)
# dev.off()



#heatmaps
ggplot(data = cdata16, aes(x = OrigCode, y = DestCode)) +
  geom_tile(aes(fill = comparison_evr),colour = "white") +
  scale_fill_gradient2(low = "Red",high = "Green")+
  theme(axis.text.x = element_text(angle = 90, hjust = 1))


# write.csv(cdata16net, file = "cdata16net.csv")
# write.csv(cdata6net, file = "cdata6net.csv")

# write.csv(cdata15net, file = "cdata15net.csv")
#
# write.csv(cdata8net, file = "cdata8net.csv")
#
#




# #read in your London Commuting Data
# cdata <- read.csv("https://www.dropbox.com/s/7c1fi1txbvhdqby/LondonCommuting2001.csv?raw=1")
# #read in a lookup table for translating between old borough codes and new borough codes
# CodeLookup <- read.csv("https://www.dropbox.com/s/h8mpvnepdkwa1ac/CodeLookup.csv?raw=1")
# #read in some population and income data
# popincome <- read.csv("https://www.dropbox.com/s/84z22a4wo3x2p86/popincome.csv?raw=1")



hist(cdata16$deg16_O)
summary(cdata16$deg16_O)



#Generate publication-quality results tables
#The stargazer function in the package of the same name will turn your model object into a nicely formatted table of results. It works just as the reporttools functions above. A nice little trick is to simply write the
#Latex code to a file, which will automatically save to your working DConory. After running these lines, check
#your working directory for you Latex file called "model.tex". Typset this file in a Latex editor.
#install.packages(stargazer)
require(stargazer)


stargazer(uncosim_b,
          header=FALSE,
          title="Table of Regression Results",
          digits = 2,
          style = "apsr", out="models1.htm")
